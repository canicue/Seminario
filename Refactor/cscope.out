cscope 15 /media/sda6/DESARROLLO/C/NetbeansProjects_6.7/Clon               0000812708
	@cdk_test.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDK_TEST_H


7 
	#CDK_TEST_H


	)

9 #ifde‡
__˝lu•lus


13 
	~<cdk_com∑t.h
>

54 #ifde‡
HAVE_NC_ALLOC_H


56 #i‚de‡
HAVE_LIBDBMALLOC


57 
	#HAVE_LIBDBMALLOC
 0

	)

60 #i‚de‡
HAVE_LIBDMALLOC


61 
	#HAVE_LIBDMALLOC
 0

	)

64 #i‚de‡
HAVE_LIBMPATROL


65 
	#HAVE_LIBMPATROL
 0

	)

68 
	~<nc_Æloc.h
>

71 #i‚de‡
ExôProgøm


72 
	#ExôProgøm
(
code
Ë
	`exô
(code)

	)

75 #ifde‡
__˝lu•lus


	@chorizo.c

1 
	~<°dio.h
>

2 
	~<cur£s.h
>

3 
	~<cdk/cdk.h
>

4 
	$maö
(
¨gc
,**
¨gv
)

7 
	`öôs¸
();

8 
	`n€cho
();

9 
	`curs_£t
(0);

11 
CDKSCREEN
 *
víè«
=
	`öôCDKS¸ìn
(
°ds¸
);

12 *
∑œbø
="hola";

13 
WINDOW
 *
sub
=
	`subwö
(
°ds¸
,100,100,0,0);

14 
	`wadd°r
(
°ds¸
,
∑œbø
);

15 
	`døwLöe
(
°ds¸
,8,10,5,10,1);

16 
	`ª‰esh
();

17 
	`box
(
°ds¸
,0,0);

18 
	`gëch
();

20 
	}
}

	@ejemplo_char_struct.c

1 
	~<°dio.h
>

3 
	s°


5 
	mi
;

6 
	mc
;

7 
	md
;

8 *
	mdios
;

11 
	$maö
()

13 
°
 
e°ru˘uø
;

14 *
pc
;

15 
i
;

18 
e°ru˘uø
.
i
 = 2;

19 
e°ru˘uø
.
c
 = 'a';

20 
e°ru˘uø
.
d
 = 3.141593;

21 
e°ru˘uø
.
dios
="asdf";

23 
pc
 = (*Ë&
e°ru˘uø
;

26 
i
=0; i<(
°
); ++i)

27 
	`¥ötf
("[%2d] = %4d\n", 
i
, 
pc
[i]);

34 
	}
}

	@entries.c

1 
	~<cdk/cdk.h
>

2 
	~<cur£s.h
>

3 
¸ór_íåada
(
CDKSCREEN
 *
∑¡Æœ
);

5 
	$maö
(
¨gc
, c⁄° *
¨gv
[])

7 
	`öôs¸
();

8 
	`n€cho
();

9 
CDKSCREEN
 *
∑¡Æœ
=
	`öôCDKS¸ìn
(
°ds¸
);

10 
	`¸ór_íåada
(
∑¡Æœ
);

12 
	`de°royCDKS¸ìn
(
∑¡Æœ
);

18 
	}
}

19 
	$¸ór_íåada
(
CDKSCREEN
 *
∑¡Æœ
)

21 *
tôÀ
="dios";

22 *
œbñ
="diablo";

23 *
xnombª
[]={"asdf","asdf","erer","sss"};

24 *
±
;

25 
ƒo

	`ÀnCh¨Li°
(
xnombª
);

26 
	`•rötf
(
±
,"qqq=%d",
ƒo
);

27 
	`mvwaddn°r
(
°ds¸
,12,12,
±
,100);

28 
	`mvwaddn°r
(
°ds¸
,122,12,
±
,100);

29 
	`gëch
();

30 
CDKENTRY
 *
nombª
;

31 
nombª
 = 
	`√wCDKE¡ry
 (
∑¡Æœ
, 
CENTER
, CENTER, 
tôÀ
, 
œbñ
, 
A_NORMAL
, '.', 
vMIXED
, 40, 0, 256, 
TRUE
, 
FALSE
);

32 
	`a˘iv©eCDKE¡ry
(
nombª
,0);

34 
	}
}

	@estructura_array.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<cdk/cdk.h
>

5 
	st_coß
{

7 
	mnombª
[50];

8 
	medad
;

11 } 
	tCOSA
;

12 
	$im¥imú
(
COSA
 *
coß
)

14 
	`¥ötf
("nombª=%s\n",
coß
->
nombª
);

15 
	`¥ötf
("edad=%d\n",
coß
->
edad
);

17 
	}
}

18 
	$¥ueba
(
COSA
 
coß
)

21 *
löó
=(*)&
coß
;

22 
	`¥ötf
("%s",
löó
[0]);

23 
	}
}

24 
	$maö
(
¨gc
, c⁄° *
¨gv
[])

26 
t_coß
 
cosôa
={"nombre",2};

27 
	`im¥imú
(&
cosôa
);

28 **
c⁄vî
=(**)&
cosôa
;

29 
	`¥ötf
("%s",&
c⁄vî
[1]);

30 
	`öôs¸
();

31 
	`box
(
°ds¸
,0,0);

32 
CDKSCREEN
 *
∑¡Æœ
=
	`öôCDKS¸ìn
(
°ds¸
);

33 
	`p›upLabñ
(
∑¡Æœ
,(**)&
cosôa
,2);

34 
	`gëch
();

46 
	}
}

	@formulario_color.c

2 
	~<f‹m.h
>

4 
	$maö
()

5 { 
FIELD
 *
fõld
[3];

6 
FORM
 *
my_f‹m
;

7 
ch
;

10 
	`öôs¸
();

11 
	`°¨t_cﬁ‹
();

12 
	`cbªak
();

13 
	`n€cho
();

14 
	`key∑d
(
°ds¸
, 
TRUE
);

17 
	`öô_∑ú
(1, 
COLOR_WHITE
, 
COLOR_BLUE
);

18 
	`öô_∑ú
(2, 
COLOR_WHITE
, 
COLOR_BLUE
);

21 
fõld
[0] = 
	`√w_fõld
(1, 10, 4, 18, 0, 0);

22 
fõld
[1] = 
	`√w_fõld
(1, 10, 6, 18, 0, 0);

23 
fõld
[2] = 
NULL
;

26 
	`£t_fõld_f‹e
(
fõld
[0], 
	`COLOR_PAIR
(1));

27 
	`£t_fõld_back
(
fõld
[0], 
	`COLOR_PAIR
(2));

29 
	`fõld_›ts_off
(
fõld
[0], 
O_AUTOSKIP
);

31 
	`£t_fõld_back
(
fõld
[1], 
A_UNDERLINE
);

32 
	`fõld_›ts_off
(
fõld
[1], 
O_AUTOSKIP
);

35 
my_f‹m
 = 
	`√w_f‹m
(
fõld
);

36 
	`po°_f‹m
(
my_f‹m
);

37 
	`ª‰esh
();

39 
	`£t_cuºít_fõld
(
my_f‹m
, 
fõld
[0]);

40 
	`mv¥ötw
(4, 10, "Value 1:");

41 
	`mv¥ötw
(6, 10, "Value 2:");

42 
	`mv¥ötw
(
LINES
 - 2, 0, "Use UP, DOWNárrow keysÅo switch between fields");

43 
	`ª‰esh
();

46 (
ch
 = 
	`gëch
()Ë!
	`KEY_F
(1))

47 { 
ch
)

48 { 
KEY_DOWN
:

50 
	`f‹m_drivî
(
my_f‹m
, 
REQ_NEXT_FIELD
);

53 
	`f‹m_drivî
(
my_f‹m
, 
REQ_END_LINE
);

55 
KEY_UP
:

57 
	`f‹m_drivî
(
my_f‹m
, 
REQ_PREV_FIELD
);

58 
	`f‹m_drivî
(
my_f‹m
, 
REQ_END_LINE
);

63 
	`f‹m_drivî
(
my_f‹m
, 
ch
);

69 
	`u≈o°_f‹m
(
my_f‹m
);

70 
	`‰ì_f‹m
(
my_f‹m
);

71 
	`‰ì_fõld
(
fõld
[0]);

72 
	`‰ì_fõld
(
fõld
[1]);

74 
	`ídwö
();

76 
	}
}

	@formulario_ventanta.c

1 
	~<f‹m.h
>

3 
¥öt_ö_middÀ
(
WINDOW
 *
wö
, 
°¨ty
, 
°¨tx
, 
width
, *
°rög
, 
chty≥
 
cﬁ‹
);

5 
	$maö
()

7 
FIELD
 *
fõld
[3];

8 
FORM
 *
my_f‹m
;

9 
WINDOW
 *
my_f‹m_wö
;

10 
ch
, 
rows
, 
cﬁs
;

13 
	`öôs¸
();

14 
	`°¨t_cﬁ‹
();

15 
	`cbªak
();

16 
	`n€cho
();

17 
	`key∑d
(
°ds¸
, 
TRUE
);

20 
	`öô_∑ú
(1, 
COLOR_RED
, 
COLOR_BLACK
);

23 
fõld
[0] = 
	`√w_fõld
(1, 10, 6, 1, 0, 0);

24 
fõld
[1] = 
	`√w_fõld
(1, 10, 8, 1, 0, 0);

25 
fõld
[2] = 
NULL
;

28 
	`£t_fõld_back
(
fõld
[0], 
A_UNDERLINE
);

29 
	`fõld_›ts_off
(
fõld
[0], 
O_AUTOSKIP
);

31 
	`£t_fõld_back
(
fõld
[1], 
A_UNDERLINE
);

32 
	`fõld_›ts_off
(
fõld
[1], 
O_AUTOSKIP
);

35 
my_f‹m
 = 
	`√w_f‹m
(
fõld
);

38 
	`sˇÀ_f‹m
(
my_f‹m
, &
rows
, &
cﬁs
);

41 
my_f‹m_wö
 = 
	`√wwö
(
rows
 + 4, 
cﬁs
 + 4, 4, 4);

42 
	`key∑d
(
my_f‹m_wö
, 
TRUE
);

45 
	`£t_f‹m_wö
(
my_f‹m
, 
my_f‹m_wö
);

46 
	`£t_f‹m_sub
(
my_f‹m
, 
	`dîwö
(
my_f‹m_wö
, 
rows
, 
cﬁs
, 2, 2));

49 
	`box
(
my_f‹m_wö
, 0, 0);

50 
	`¥öt_ö_middÀ
(
my_f‹m_wö
, 1, 0, 
cﬁs
 + 4, "My F‹m", 
	`COLOR_PAIR
(1));

52 
	`po°_f‹m
(
my_f‹m
);

53 
	`wª‰esh
(
my_f‹m_wö
);

55 
	`mv¥ötw
(
LINES
 - 2, 0, "Use UP, DOWNárrow keysÅo switch between fields");

56 
	`ª‰esh
();

59 (
ch
 = 
	`wgëch
(
my_f‹m_wö
)Ë!
	`KEY_F
(1))

60 { 
ch
)

61 { 
KEY_DOWN
:

63 
	`f‹m_drivî
(
my_f‹m
, 
REQ_NEXT_FIELD
);

66 
	`f‹m_drivî
(
my_f‹m
, 
REQ_END_LINE
);

68 
KEY_UP
:

70 
	`f‹m_drivî
(
my_f‹m
, 
REQ_PREV_FIELD
);

71 
	`f‹m_drivî
(
my_f‹m
, 
REQ_END_LINE
);

76 
	`f‹m_drivî
(
my_f‹m
, 
ch
);

82 
	`u≈o°_f‹m
(
my_f‹m
);

83 
	`‰ì_f‹m
(
my_f‹m
);

84 
	`‰ì_fõld
(
fõld
[0]);

85 
	`‰ì_fõld
(
fõld
[1]);

87 
	`ídwö
();

89 
	}
}

91 
	$¥öt_ö_middÀ
(
WINDOW
 *
wö
, 
°¨ty
, 
°¨tx
, 
width
, *
°rög
, 
chty≥
 
cﬁ‹
)

92 { 
Àngth
, 
x
, 
y
;

93 
ãmp
;

95 if(
wö
 =
NULL
)

96 
wö
 = 
°ds¸
;

97 
	`gëyx
(
wö
, 
y
, 
x
);

98 if(
°¨tx
 != 0)

99 
x
 = 
°¨tx
;

100 if(
°¨ty
 != 0)

101 
y
 = 
°¨ty
;

102 if(
width
 == 0)

103 
width
 = 80;

105 
Àngth
 = 
	`°æí
(
°rög
);

106 
ãmp
 = (
width
 - 
Àngth
)/ 2;

107 
x
 = 
°¨tx
 + ()
ãmp
;

108 
	`w©å⁄
(
wö
, 
cﬁ‹
);

109 
	`mvw¥ötw
(
wö
, 
y
, 
x
, "%s", 
°rög
);

110 
	`w©åoff
(
wö
, 
cﬁ‹
);

111 
	`ª‰esh
();

112 
	}
}

	@formularios.c

1 
	~<cur£s.h
>

2 
	~<f‹m.h
>

3 
	gch
;

5 
	$ª•ue°a
(
FORM
 *
f‹muœrio
){

6 (
ch
 = 
	`gëch
()Ë!
	`KEY_F
(1))

8 
ch
)

10 
KEY_DOWN
:

12 
	`f‹m_drivî
(
f‹muœrio
, 
REQ_NEXT_FIELD
);

15 
	`f‹m_drivî
(
f‹muœrio
, 
REQ_END_LINE
);

17 
KEY_UP
:

19 
	`f‹m_drivî
(
f‹muœrio
, 
REQ_PREV_FIELD
);

20 
	`f‹m_drivî
(
f‹muœrio
, 
REQ_END_LINE
);

25 
	`f‹m_drivî
(
f‹muœrio
, 
ch
);

29 
	}
}

30 
	$cﬁ‹es
()

32 
	`öô_∑ú
(1,
COLOR_WHITE
,
COLOR_BLUE
);

33 
	`öô_∑ú
(2,
COLOR_WHITE
,
COLOR_BLUE
);

36 
	}
}

37 
	$maö
(
¨gc
, c⁄° *
¨gv
[])

39 
	`öôs¸
();

40 
	`key∑d
(
°ds¸
,
TRUE
);

41 
	`cbªak
();

42 
	`cﬁ‹es
();

43 
FIELD
 *
ˇmpos
[2];

44 
FIELD
 *
ˇmpo
=
	`√w_fõld
(1,15,4,18,0,0);

45 
FIELD
 *
ˇmpo_dos
=
	`√w_fõld
(1,10,6,18,0,0);

47 
ˇmpos
[0]=
ˇmpo
;

48 
ˇmpos
[1]=
ˇmpo_dos
;

49 
ˇmpos
[2]=
NULL
;

51 
	`£t_fõld_f‹e
(
ˇmpos
[0],
	`COLOR_PAIR
(1));

52 
	`£t_fõld_back
(
ˇmpos
[0],
	`COLOR_PAIR
(2));

54 
	`£t_fõld_back
(
ˇmpos
[0],
A_UNDERLINE
);

56 
	`£t_fõld_back
(
ˇmpos
[1],
A_UNDERLINE
);

58 
FORM
 *
f‹muœrio
=
	`√w_f‹m
(
ˇmpos
);

61 
	`box
(
°ds¸
,0,0);

62 
	`£t_f‹m_wö
(
f‹muœrio
,
°ds¸
);

63 
	`po°_f‹m
(
f‹muœrio
);

64 
	`ª‰esh
();

65 
	`mv¥ötw
(4, 10, "Value 1:");

66 
	`mv¥ötw
(6, 10, "Value 1:");

69 (
ch
 = 
	`gëch
()Ë!
	`KEY_F
(1))

70 { 
ch
)

71 { 
KEY_DOWN
:

73 
	`f‹m_drivî
(
f‹muœrio
, 
REQ_NEXT_FIELD
);

76 
	`f‹m_drivî
(
f‹muœrio
, 
REQ_END_LINE
);

78 
KEY_UP
:

80 
	`f‹m_drivî
(
f‹muœrio
, 
REQ_PREV_FIELD
);

81 
	`f‹m_drivî
(
f‹muœrio
, 
REQ_END_LINE
);

86 
	`f‹m_drivî
(
f‹muœrio
, 
ch
);

111 
	`ídwö
();

113 
	}
}

	@hacedor.c

5 
	~<cur£s.h
>

6 
	~<cdks¸ìn.h
>

7 
	~"c⁄åﬁad‹/c⁄fig.h
"

8 
CDKSCREEN
 *
cdkS¸ìn
;

10 
	$ha˚r
(
›ci⁄
) {

12 
›ci⁄
) {

14 
	`wadd°r
(
°ds¸
, "0000esuuaaa");

15 
	`de°royCDKS¸ìn
(
cdkS¸ìn
);

16 
	`ídCDK
();

17 
	`exô
(0);

20 
	`wadd°r
(
°ds¸
, "111111esuuaaa");

23 
	`wadd°r
(
°ds¸
, "222222esuuaaa");

26 
	`wadd°r
(
°ds¸
, "33333esuuaaa");

29 
	`wadd°r
(
°ds¸
, "4444444esaaa");

32 
	`wadd°r
(
°ds¸
, "55555");

35 
	`wadd°r
(
°ds¸
, "nada");

39 
	}
}

	@main.c

8 
	~<°dio.h
>

9 
	~"c⁄åﬁad‹/ˇŒbacks.h
"

10 
	~"vi°a/öfo.h
"

11 
	~<°rög.h
>

12 
	~<°dlib.h
>

13 
	~"d©os/d©os.h
"

15 
	~"d©os/˛õ¡es.h
"

16 
	~"vi°a/s¸ﬁl.h
"

17 
	~"¥uebas.h
"

18 
	~"vi°a/¥ovìd‹es/¥ovìd‹es.h
"

19 
	~"c⁄åﬁad‹/¥öcùÆ.h
"

20 
	~"c⁄åﬁad‹/f‹muœrios.h
"

27 
	$¥ueba_˛õ¡es
()

29 
CLIENTE
 *
˛õ¡e
;

30 
˛õ¡e
=(
CLIENTE
*)
	`mÆloc
((CLIENTE));

31 
	`°r˝y
(
˛õ¡e
->
˛õ¡e_id
,"u0ULL");

32 
	`°r˝y
(
˛õ¡e
->
dúecci⁄
,"dios");

33 
	`°r˝y
(
˛õ¡e
->
emaû
,"asdf \\@dfdf");

34 
	`°r˝y
(
˛õ¡e
->
nombª
,"nombre");

35 
	`°r˝y
(
˛õ¡e
->
ãÀf⁄o
,"444555");

36 
	`agªg¨_˛õ¡e
(
˛õ¡e
);

37 
	}
}

40 
	$maö
(
¨gc
, ** 
¨gv
) {

43 
	`öôs¸
();

44 
cdkS¸ìn
=
	`öôCDKS¸ìn
(
°ds¸
);

49 
	`logö
();

70 
m©riz

	`f‹muœrio
("cliente");

108 
	`¥ötf
("hola");

116 
	`ídCDK
();

117  (
EXIT_SUCCESS
);

118 
	}
}

	@menu_dialogado.c

1 
	~<cdk/cdk.h
>

2 #ifde‡
HAVE_XCURSES


3 *
	gXCur£sProgømName
 = "bind_ex";

6 
	$dülogHñpCB
 (
EObje˘Ty≥
 
cdkty≥
 
GCC_UNUSED
,

7 *
obje˘
,

8 *
˛õ¡D©a
 
GCC_UNUSED
,

9 
chty≥
 
key
 
GCC_UNUSED
)

11 
CDKDIALOG
 *
dülog
 = (CDKDIALOG *Ë
obje˘
;

12 *
mesg
[5];

15 i‡(
dülog
->
cuºítBuâ⁄
 == 0)

17 
mesg
[0] = "<C></U>Help for </U>Who<!U>.";

18 
mesg
[1] = "<C>WhenÅhis button isÖickedÅheÇame ofÅhe current";

19 
mesg
[2] = "<C>user is displayed onÅhe screen ináÖopup window.";

20 
	`p›upLabñ
 (
	`S¸ìnOf
 (
dülog
), 
mesg
, 3);

22 i‡(
dülog
->
cuºítBuâ⁄
 == 1)

24 
mesg
[0] = "<C></U>Help for </U>Time<!U>.";

25 
mesg
[1] = "<C>WhenÅhis button isÖickedÅhe currentÅime is";

26 
mesg
[2] = "<C>displayed onÅhe screen ináÖopup window.";

27 
	`p›upLabñ
 (
	`S¸ìnOf
 (
dülog
), 
mesg
, 3);

29 i‡(
dülog
->
cuºítBuâ⁄
 == 2)

31 
mesg
[0] = "<C></U>Help for </U>Date<!U>.";

32 
mesg
[1] = "<C>WhenÅhis button isÖickedÅhe current date is";

33 
mesg
[2] = "<C>displayed onÅhe screen ináÖopup window.";

34 
	`p›upLabñ
 (
	`S¸ìnOf
 (
dülog
), 
mesg
, 3);

37 i‡(
dülog
->
cuºítBuâ⁄
 == 3)

39 
mesg
[0] = "<C></U>Help for </U>Quit<!U>.";

40 
mesg
[1] = "<C>WhenÅhis button isÖickedÅhe dialog box isÉxited.";

41 
	`p›upLabñ
 (
	`S¸ìnOf
 (
dülog
), 
mesg
, 2);

43  (
FALSE
);

44 
	}
}

46 
	$maö
(
¨gc
, **
¨gv
)

49 
CDKSCREEN
 *
cdks¸ìn
;

50 
CDKDIALOG
 *
que°i⁄
;

51 
WINDOW
 *
cur£sWö
;

52 *
buâ⁄s
[40];

53 *
mesßge
[40];

54 *
öfo
[5];

55 *
logöName
;

56 
ãmp
[256];

57 
£À˘i⁄
;

58 
time_t
 
˛ck
;

59 
tm
 *
cuºítTime
;

63 
cur£sWö
 = 
	`öôs¸
 ();

64 
cdks¸ìn
 = 
	`öôCDKS¸ìn
 (
cur£sWö
);

67 
	`öôCDKCﬁ‹
 ();

70 
mesßge
[0] = "<C></U>Simple Command Interface";

71 
mesßge
[1] = "PickÅhe command you wishÅoÑun.";

72 
mesßge
[2] = "<C>Press </R>?<!R> for help.";

73 
buâ⁄s
[0] = "Who";

74 
buâ⁄s
[1] = "Time";

75 
buâ⁄s
[2] = "Date";

76 
buâ⁄s
[3] = "Quit";

79 
que°i⁄
 = 
	`√wCDKDülog
 (
cdks¸ìn
,

80 
CENTER
,

81 
CENTER
,

82 
mesßge
, 3, 
buâ⁄s
, 4, 
A_REVERSE
,

83 
TRUE
,

84 
TRUE
,

85 
FALSE
);

88 i‡(
que°i⁄
 =(
CDKDIALOG
 *) 0)

90 
	`de°royCDKS¸ìn
 (
cdks¸ìn
);

93 
	`ídCDK
 ();

96 
	`¥ötf
 ("Oops. Can't seemÅo createÅhe dialog box. ");

97 
	`¥ötf
 ("IsÅhe windowÅoo small?\n");

98 
	`ExôProgøm
 (
EXIT_FAILURE
);

102 
	`bödCDKObje˘
 (
vDIALOG
, 
que°i⁄
, '?', 
dülogHñpCB
, 0);

105 
£À˘i⁄
 = 0;

106 
£À˘i⁄
 != 3)

109 
£À˘i⁄
 = 
	`a˘iv©eCDKDülog
 (
que°i⁄
, (
chty≥
 *) 0);

112 i‡(
£À˘i⁄
 == 0)

115 
öfo
[0] = "<C> </U>Login Name<!U> ";

116 
logöName
 = 
	`gëlogö
 ();

117 i‡(
logöName
 == (*)0)

119 
	`°r˝y
 (
ãmp
, "<C></R>Unknown");

123 
	`•rötf
 (
ãmp
, "<C><%.*s>", ()(—empË- 10), 
logöName
);

125 
öfo
[1] = 
	`c›yCh¨
 (
ãmp
);

126 
	`p›upLabñ
 (
	`S¸ìnOf
 (
que°i⁄
), 
öfo
, 2);

127 
	`‰ìCh¨
 (
öfo
[1]);

129 i‡(
£À˘i⁄
 == 1)

132 
	`time
 (&
˛ck
);

133 
cuºítTime
 = 
	`loˇ…ime
 (&
˛ck
);

134 
	`•rötf
 (
ãmp
, "<C>%2d:%02d:%02d",

135 
cuºítTime
->
tm_hour
,

136 
cuºítTime
->
tm_mö
,

137 
cuºítTime
->
tm_£c
);

138 
öfo
[0] = "<C> </U>Current Time<!U> ";

139 
öfo
[1] = 
	`c›yCh¨
 (
ãmp
);

140 
	`p›upLabñ
 (
	`S¸ìnOf
 (
que°i⁄
), 
öfo
, 2);

141 
	`‰ìCh¨
 (
öfo
[1]);

143 i‡(
£À˘i⁄
 == 2)

146 
	`time
 (&
˛ck
);

147 
cuºítTime
 = 
	`loˇ…ime
 (&
˛ck
);

148 
	`•rötf
 (
ãmp
, "<C>%d/%02d/%02d",

149 
cuºítTime
->
tm_mday
,

150 
cuºítTime
->
tm_m⁄
 + 1,

151 
cuºítTime
->
tm_yór
 % 100);

152 
öfo
[0] = "<C> </U>Current Date<!U> ";

153 
öfo
[1] = 
	`c›yCh¨
 (
ãmp
);

154 
	`p›upLabñ
 (
	`S¸ìnOf
 (
que°i⁄
), 
öfo
, 2);

155 
	`‰ìCh¨
 (
öfo
[1]);

158 
	`de°royCDKDülog
 (
que°i⁄
);

159 
	`de°royCDKS¸ìn
 (
cdks¸ìn
);

160 
	`ídCDK
 ();

161 
	`ExôProgøm
 (
EXIT_SUCCESS
);

162 
	}
}

163 169,1 
	gFöÆ


	@null.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	$maö
(
¨gc
, c⁄° *
¨gv
[])

6 *
a
=
NULL
;

7 if(
a
==
NULL
)

9 
	`¥ötf
("asdf");

10 
C


14 
	}
}

	@prueba_datos.c

1 
	~<sqlôe3.h
>

2 
	~<°dio.h
>

3 
	~<cdk/cdk.h
>

4 
	#£t_cﬁ
(
n
, 
width
, 
°rög
Ë
cﬁtôÀ
[n] = såög; 
cﬁwidth
[n] = width ; 
cﬁvÆue
[n] = 
vUMIXED


	)

5 
	#£t_row
(
n
, 
°rög
Ë
rowtôÀ
[n] = "</B/6>" 
	)
string

7 
sqlôe3
 *
c⁄e˘¨
();

8 
ˇŒ_èbœ
(*
nombª
, 
¨gc
, **
¨gv
, **
azCﬁName
);

9 
CDKMATRIX
 *
f‹muœrio
(*
èbœ
);

10 
vî_ªgi°ro
(*
èbœ
,*
ˇmpo
,*
vÆ‹
);

11 
vî_èbœ
(*
nombª
);

13 
CDKMATRIX
 *
	gm©riz
;

23 
sqlôe3
 *
	$c⁄e˘¨
()

25 
sqlôe3
 *
db
;

26 *
ba£
="base.sqlite";

27 
	`sqlôe3_›í
(
ba£
,&
db
);

29  
db
;

30 
	}
}

31 
	$ˇŒ_èbœ
(*
nombª
, 
¨gc
, **
¨gv
, **
azCﬁName
)

33 
tmp
[255];

34 *
f‹m©o
="<L></B/5>%s";

35 *
cﬁtôÀ
[10], *
rowtôÀ
[10], *
mesg
[10];

36 
cﬁwidth
[10], 
cﬁvÆue
[10];

37 
i
=0;

39 
tôulo
[255];

41 
CDKSCREEN
 *
∑¡Æœ
;

42 
	`öôs¸
();

43 
∑¡Æœ
=
	`öôCDKS¸ìn
(
°ds¸
);

44 
	`•rötf
(
tôulo
,
f‹m©o
,
nombª
);

45 
i
=0;i<
¨gc
;i++)

47 
	`•rötf
(
tmp
,
f‹m©o
,
azCﬁName
[
i
]);

48 
rowtôÀ
[
i
+1]=
	`c›yCh¨
(
tmp
);

50 
	`¥ötf
(
tmp
);

53 
	`£t_cﬁ
(1,58,
tôulo
);

54 
m©riz
=
	`√wCDKM©rix
(

55 
∑¡Æœ
,

56 
CENTER
,CENTER,

57 
¨gc
,1,argc,1,

58 "",
rowtôÀ
,
cﬁtôÀ
,
cﬁwidth
,
cﬁvÆue
,-1,-1,'.',
COL
,
TRUE
,
FALSE
,FALSE

61 
	`a˘iv©eCDKM©rix
(
m©riz
,0);

68 
	}
}

69 
	$ˇŒ_ªgi°ro
(*
nombª
, 
¨gc
, **
¨gv
, **
azCﬁName
)

71 
i
;

73 
cﬁum«s
[122];

74 
m©riz
=
	`f‹muœrio
(
nombª
);

75 
	`¥ötf
("l⁄gôudárgv%d m©riz->rows=%d",
	`ÀnCh¨Li°
(
¨gv
),
m©riz
->
rows
);

76 
i
=0;i<
¨gc
;i++)

78 
	`¥ötf
("%s\n",
¨gv
[
i
]);

89 
	}
}

91 
	$vî_èbœ
(*
nombª
)

93 *
îr‹
;

94 
sqlôe3
 *
db
=
	`c⁄e˘¨
();

95 *
∂™tûœ
="SELECT * FROM '%s'Üimit 1";

96 
c⁄su…a
[255];

97 
	`•rötf
(
c⁄su…a
,
∂™tûœ
,
nombª
);

99 
	`sqlôe3_exec
(
db
,
c⁄su…a
,
ˇŒ_èbœ
,
nombª
,&
îr‹
);

101 
	}
}

105 
CDKMATRIX
 *
	$f‹muœrio
(*
èbœ
)

108 
	`vî_èbœ
(
èbœ
);

109  
m©riz
;

111 
	}
}

114 
	$vî_ªgi°ro
(*
èbœ
,*
ˇmpo
,*
vÆ‹
)

116 *
îr‹
;

117 
c⁄su…a
[255];

118 *
∂™tûœ
="SELECT * FROM %s WHERE %s='%s'";

119 
	`•rötf
(
c⁄su…a
,
∂™tûœ
,
èbœ
,
ˇmpo
,
vÆ‹
);

120 
	`¥ötf
(
c⁄su…a
);

121 
sqlôe3
 *
db
=
	`c⁄e˘¨
();

122 
	`sqlôe3_exec
(
db
,
c⁄su…a
,
ˇŒ_ªgi°ro
,
èbœ
,&
îr‹
);

123 if(
îr‹
!=
SQLITE_OK
)

125 
	`¥ötf
("error");

127 
	}
}

131 
	$ˇŒ_cﬁum«s
(*
NŸU£d
, 
¨gc
, **
¨gv
, **
azCﬁName
)

133 
	`¥ötf
("%d,%d",(&
azCﬁName
),(azColName[0]));

134 
i
=0;

136 
i
=0;i<
¨gc
;i++)

139 
	`¥ötf
("\n%s",
azCﬁName
[
i
]);

143 
	}
}

146 
	$cﬁum«s
(*
èbœ
)

148 *
îr‹
;

149 
ªs
;

150 
sqlôe3
 *
db
;

151 
∂™tûœ
[]="PRAGMAÅable_info(%s)";

152 
c⁄su…a
[255];

154 
	`•rötf
(
c⁄su…a
,"£À˘ * from '%s'Üimô 1",
èbœ
);

155 
db
=
	`c⁄e˘¨
();

156 
ªs
=
	`sqlôe3_exec
(
db
,
c⁄su…a
,
ˇŒ_cﬁum«s
,
èbœ
,&
îr‹
);

158 
	}
}

159 
	$maö
(
¨gc
, c⁄° *
¨gv
[])

169 
	`f‹muœrio
("cliente");

171 
	`vî_ªgi°ro
("proveedor","proveedor_id","P001");

173 
	}
}

	@prueba_matrix.c

6 
	~<cdk/cdk.h
>

7 #ifde‡
HAVE_XCURSES


8 *
	gXCur£sProgømName
 = "matrix_ex";

14 
	$maö
 (
¨gc
, **
¨gv
)

17 
CDKSCREEN
 *
cdks¸ìn
 = 0;

18 
CDKMATRIX
 *
f‹m_¥ov
 = 0;

19 
WINDOW
 *
cur£sWö
 = 0;

20 *
tôÀ
 = 0;

21 
rows
 = 5;

22 
cﬁs
 = 1;

23 
vrows
 = 5;

24 
vcﬁs
 = 1;

25 *
cﬁtôÀ
[10], *
rowtôÀ
[10], *
mesg
[10];

26 
cﬁwidth
[10], 
cﬁvÆue
[10];

33 
cur£sWö
 = 
	`öôs¸
();

34 
cdks¸ìn
 = 
	`öôCDKS¸ìn
 (
cur£sWö
);

37 
	`öôCDKCﬁ‹
();

40 
	#£t_cﬁ
(
n
, 
width
, 
°rög
) \

41 
cﬁtôÀ
[
n
] = 
°rög
; 
cﬁwidth
[n] = 
width
 ; 
cﬁvÆue
[n] = 
vUMIXED


	)

43 
	`£t_cﬁ
(1, 7, "</B/5>Proveedor");

44 
	`£t_cﬁ
(2, 7, "</B/33>Lec 1");

45 
	`£t_cﬁ
(3, 7, "</B/33>Lec 2");

46 
	`£t_cﬁ
(4, 7, "</B/33>Lec 3");

47 
	`£t_cﬁ
(5, 1, "</B/7>Flag");

49 
	#£t_row
(
n
, 
°rög
) \

50 
rowtôÀ
[
n
] = "</B/8>" 
°rög


	)

52 
	`£t_row
(1, "ID");

53 
	`£t_row
(2, "Nombre");

54 
	`£t_row
(3, "Apellido");

55 
	`£t_row
(4, "Correo");

56 
	`£t_row
(5, "Direccion");

57 
	`£t_row
(6, "Course 6");

58 
	`£t_row
(7, "Course 7");

59 
	`£t_row
(8, "Course 8");

63 
f‹m_¥ov
 = 
	`√wCDKM©rix
 (
cdks¸ìn
,

64 
CENTER
,

65 
CENTER
,

66 
rows
, 
cﬁs
, 
vrows
, 
vcﬁs
,

67 
tôÀ
, 
rowtôÀ
, 
cﬁtôÀ
,

68 
cﬁwidth
, 
cﬁvÆue
,

70 
COL
, 
TRUE
,

71 
TRUE
,

72 
FALSE
);

75 i‡(
f‹m_¥ov
 == 0)

78 
	`de°royCDKS¸ìn
 (
cdks¸ìn
);

79 
	`ídCDK
();

82 
	`¥ötf
 ("Oops. Can't seemÅo createÅhe matrix widget. IsÅhe windowÅoo small ?\n");

83 
	`exô
 (
EXIT_FAILURE
);

87 
	`a˘iv©eCDKM©rix
 (
f‹m_¥ov
, 0);

90 i‡(
f‹m_¥ov
->
exôTy≥
 =
vESCAPE_HIT
)

92 
mesg
[0] = "<C>You hitÉscape. No informationÖassed back.";

93 
mesg
[1] = "",

94 
mesg
[2] = "<C>Pressány keyÅo continue.";

95 
	`p›upLabñ
 (
cdks¸ìn
, 
mesg
, 3);

97 i‡(
f‹m_¥ov
->
exôTy≥
 =
vNORMAL
)

99 
ãmp
[80];

101 
	`•rötf
(
ãmp
, "Cuºíà˚Œ (%d,%d)", 
f‹m_¥ov
->
¸ow
, f‹m_¥ov->
ccﬁ
);

102 
mesg
[0] = "<L>YouÉxitedÅhe matrixÇormally.";

103 
mesg
[1] = 
ãmp
;

104 
mesg
[2] = "<L>To getÅhe contents ofÅhe matrix cell, you can";

105 
mesg
[3] = "<L>use getCDKMatrixCell():";

106 
mesg
[4] = 
	`gëCDKM©rixCñl
(
f‹m_¥ov
, f‹m_¥ov->
¸ow
, f‹m_¥ov->
ccﬁ
);

107 
mesg
[5] = "";

108 
mesg
[6] = "<C>Pressány keyÅo continue.";

109 
	`p›upLabñ
 (
cdks¸ìn
, 
mesg
, 7);

113 
	`de°royCDKM©rix
 (
f‹m_¥ov
);

114 
	`de°royCDKS¸ìn
 (
cdks¸ìn
);

115 
	`ídCDK
();

116 
	`exô
 (
EXIT_SUCCESS
);

117 
	}
}

	@prueba_prov_form.c

1 
	~<f‹m.h
>

3 
	#STARTX
 15

	)

4 
	#STARTY
 4

	)

5 
	#WIDTH
 25

	)

7 
	#N_FIELDS
 3

	)

9 
	$maö
()

10 { 
FIELD
 *
fõld
[
N_FIELDS
];

11 
FORM
 *
my_f‹m
;

12 
ch
, 
i
;

15 
	`öôs¸
();

16 
	`cbªak
();

17 
	`n€cho
();

18 
	`key∑d
(
°ds¸
, 
TRUE
);

21 
i
 = 0; i < 
N_FIELDS
 - 1; ++i)

22 
fõld
[
i
] = 
	`√w_fõld
(1, 
WIDTH
, 
STARTY
 + i * 2, 
STARTX
, 0, 0);

23 
fõld
[
N_FIELDS
 - 1] = 
NULL
;

26 
	`£t_fõld_back
(
fõld
[1], 
A_UNDERLINE
);

29 
	`fõld_›ts_off
(
fõld
[1], 
O_PUBLIC
);

30 
	`fõld_›ts_off
(
fõld
[1], 
O_AUTOSKIP
);

34 
my_f‹m
 = 
	`√w_f‹m
(
fõld
);

35 
	`po°_f‹m
(
my_f‹m
);

36 
	`ª‰esh
();

38 
	`£t_fõld_ju°
(
fõld
[0], 
JUSTIFY_CENTER
);

41 
	`mv¥ötw
(
STARTY
, 
STARTX
 - 10, "Field 1:");

42 
	`mv¥ötw
(
STARTY
 + 2, 
STARTX
 - 10, "Field 2:");

43 
	`ª‰esh
();

46 (
ch
 = 
	`gëch
()Ë!
	`KEY_F
(1))

47 { 
ch
)

48 { 
KEY_DOWN
:

50 
	`f‹m_drivî
(
my_f‹m
, 
REQ_NEXT_FIELD
);

53 
	`f‹m_drivî
(
my_f‹m
, 
REQ_END_LINE
);

55 
KEY_UP
:

57 
	`f‹m_drivî
(
my_f‹m
, 
REQ_PREV_FIELD
);

58 
	`f‹m_drivî
(
my_f‹m
, 
REQ_END_LINE
);

63 
	`f‹m_drivî
(
my_f‹m
, 
ch
);

69 
	`u≈o°_f‹m
(
my_f‹m
);

70 
	`‰ì_f‹m
(
my_f‹m
);

71 
	`‰ì_fõld
(
fõld
[0]);

72 
	`‰ì_fõld
(
fõld
[1]);

74 
	`ídwö
();

76 
	}
}

	@pruebas.c

1 
	~"¥uebas.h
"

2 
	~"d©os/˛õ¡es.h
"

3 
	~"vi°a/˛õ¡es/˛õ¡es.h
"

4 
	#ƒo_ñemtos
(
a
Ë((*a)/◊[0]))

	)

6 
	$ˇŒback
(*
NŸU£d
, 
¨gc
, **
¨gv
, **
azCﬁName
) {

8 
	`¥ötf
("%d-------------%s\n", 
¨gc
, (*Ë
NŸU£d
);

9 
i
 = 0;

10 
i
 = 0; i < 
¨gc
; i++) {

11 
	`¥ötf
("%† \n", 
¨gv
[
i
] ?árgv[i] : "NULL");

13 
	`¥ötf
("%d",  (
¨gv
[0]));

14 
	`¥ötf
("\n");

15 
	`¥ötf
("hola");

17 
i
 = 0; i < 
¨gc
; i++) {

19 
	`¥ötf
("cﬁum®%s\n", 
azCﬁName
[
i
]);

22 
	}
}

24 
	$li°a_˛õ¡es
() {

25 * 
pu¡îo
 = "dios";

26 *
îr‹
;

27 
c⁄exi⁄
 = 
	`c⁄e˘¨
(
BASE
);

28 
ªs
;

30 
c⁄su…a
[255];

32 
	`•rötf
(
c⁄su…a
, 
LISTAR_REGISTROS
, "cliente");

34 
ªs
 = 
	`sqlôe3_exec
(
c⁄exi⁄
, 
c⁄su…a
, 
ˇŒback
, 
pu¡îo
, &
îr‹
);

35 i‡(
ªs
 !
SQLITE_OK
) {

36 
	`¥ötf
("%s\n", 
îr‹
);

39 
	`desc⁄e˘¨
();

43 
	}
}

45 
	$vî_èbœs
(*
èbœ
) {

46 *
îr‹
;

47 
c⁄exi⁄
 = 
	`c⁄e˘¨
(
BASE
);

48 
ªs
;

49 
∂™tûœ
[] = "PRAGMAÅable_info(%s)";

50 
c⁄su…a
[255];

51 
	`¥ötf
("%s", 
c⁄su…a
);

52 
	`•rötf
(
c⁄su…a
, 
∂™tûœ
, 
èbœ
);

54 
ªs
 = 
	`sqlôe3_exec
(
c⁄exi⁄
, 
c⁄su…a
, 
ˇŒback
, 0, &
îr‹
);

55 i‡(
ªs
 =
SQLITE_OK
) {

56 
	`¥ötf
("%s\n", 
îr‹
);

58 
	`desc⁄e˘¨
();

60 
	}
}

62 
	$cﬁum«s_ˇŒback
(*
li°a
, 
¨gc
, **
¨gv
, **
azCﬁName
) {

64 
li°a
 = &
azCﬁName
;

65 
	`¥ötf
("%s", (*Ë(&
li°a
 + 4));

68 
	}
}

70 
	$li°a_cﬁum«s
(*
èbœ
, **
li°a
) {

71 *
îr‹
;

72 
ªs
;

73 
c⁄exi⁄
 = 
	`c⁄e˘¨
(
BASE
);

74 
c⁄su…a
[] = "SELECT * FROM cliente LIMIT 2";

75 
ªs
 = 
	`sqlôe3_exec
(
c⁄exi⁄
, 
c⁄su…a
, 
cﬁum«s_ˇŒback
, 
li°a
, &
îr‹
);

76 i‡(
ªs
 !
SQLITE_OK
) {

77 
	`¥ötf
("%s\n", 
îr‹
);

80 
	}
}

82 
	$¥ueba_cﬁum«s
() {

83 *
li°a
[] = {"a", "b"};

84 
	`¥ötf
("%d\n",  (
li°a
));

85 
	`li°a_cﬁum«s
("˛õ¡e", 
li°a
);

86 
i
;

87 
i
 = 0; i < 3; i++) {

88 
	`¥ötf
("%d\n",  (
li°a
));

92 
	}
}

94 
	$ˇŒback_˛õ¡es
(*
li°a
, 
¨gc
, **
¨gv
, **
azCﬁName
) {

98 
li°a
 = *
¨gv
;

99 
	`¥ötf
("%s\n", (*Ë
li°a
);

110 
	}
}

112 ** 
	$busqueda
(**
li°a
) {

114 
ªs
;

116 
c⁄su…a
[255];

117 *
îr‹
;

118 
c⁄exi⁄
 = 
	`c⁄e˘¨
(
BASE
);

119 
	`•rötf
(
c⁄su…a
, 
BUSCAR_REGISTRO
, "cliente", "'1'", "1");

121 
ªs
 = 
	`sqlôe3_exec
(
c⁄exi⁄
, 
c⁄su…a
, 
ˇŒback_˛õ¡es
, 
li°a
, &
îr‹
);

122 i‡(
ªs
 !
SQLITE_OK
) {

123 
	`¥ötf
("%s\n", 
îr‹
);

125  
li°a
;

126 
	}
}

128 ** 
	gcoß
;

130 
	$ˇŒ_°ru˘
(*
˛õ¡e
, 
¨gc
, **
¨gv
, **
azCﬁName
) {

132 
coß
 = 
azCﬁName
;

133 
i
;

134 
i
 = 0; i < 
¨gc
; i++) {

136 
	`¥ötf
("%s\n", 
¨gv
[
i
]);

141 
	}
}

143 
	$li°a_°ru˘
(
CLIENTE
 *
˛õ¡e
) {

146 
c⁄exi⁄
 = 
	`c⁄e˘¨
(
BASE
);

147 *
c⁄su…a
 = "SELECT * FROM cliente";

148 *
îr‹
;

150 
ªs
;

152 
ªs
 = 
	`sqlôe3_exec
(
c⁄exi⁄
, 
c⁄su…a
, 
ˇŒ_°ru˘
, 
˛õ¡e
, &
îr‹
);

154 i‡(
ªs
 !
SQLITE_OK
) {

155 
	`¥ötf
("Su˚diÿu¿îr‹ %s=", 
îr‹
);

157 
	`¥ötf
("\n%s\n", 
coß
[0]);

158 
	`¥ötf
("\n%s\n", 
coß
[1]);

159 
	`¥ötf
("\n%s\n", 
coß
[2]);

160 
	`¥ötf
("\n%s\n", 
coß
[3]);

161 
	}
}

163 
	$im¥imú_˛õ¡e
(
CLIENTE
 *
˛õ¡e
) {

165 
	`¥ötf
("id=%s\n", 
˛õ¡e
->
˛õ¡e_id
);

166 
	`¥ötf
("nombª=%s\n", 
˛õ¡e
->
nombª
);

167 
	`¥ötf
("dúecci⁄=%s\n", 
˛õ¡e
->
dúecci⁄
);

168 
	`¥ötf
("ãÀf⁄o=%s\n", 
˛õ¡e
->
ãÀf⁄o
);

169 
	`¥ötf
("emaû=%s\n", 
˛õ¡e
->
emaû
);

171 
	}
}

173 
	$¥ueba_°ru˘
() {

174 
CLIENTE
 *
˛õ¡e
 = 
NULL
;

175 
	`li°a_°ru˘
(
˛õ¡e
);

177 
	}
}

179 
	$¥ueba_vi°a_˛õ¡es
() {

180 
CDKSCREEN
 *
∑¡Æœ
;

181 
	`öôs¸
();

182 
∑¡Æœ
 = 
	`öôCDKS¸ìn
(
°ds¸
);

184 
	`míu_˛õ¡es
(
∑¡Æœ
);

186 
	}
}

	@pruebas.h

8 #i‚de‡
_PRUEBAS_H


9 
	#_PRUEBAS_H


	)

12 
	~<cdk.h
>

14 
	~"d©os/d©os.h
"

15 
	~"d©os/tùos.h
"

17 
li°a_˛õ¡es
();

19 #ifdef 
__˝lu•lus


25 #ifdef 
__˝lu•lus


	@swapear_ventanas.c

1 
	~<cdk/cdk.h
>

2 
	~<cur£s.h
>

3 
	$ˇmbür_víè«
()

10 
	}
}

12 
	$sw≠î
()

14 
c
;

17 
c
){

19 
	`ˇmbür_víè«
();

31 
	`¥ötf
("a");

34 
	`sˇnf
("%c",&
c
);

37 
c
!='q');

38 
	`gëch
();

39 
	}
}

40 
	$maö
(
¨gc
, c⁄° *
¨gv
[])

42 
	`sw≠î
();

67 
	}
}

	@/usr/include/cdk/cdk.h

5 #i‚de‡
CDK_H


6 
	#CDK_H


	)

8 #ifde‡
__˝lu•lus


47 
	~<cdk/cdk_c⁄fig.h
>

48 
	~<cdk/cdk_vîsi⁄.h
>

50 #ifdef 
CDK_PERL_EXT


51 #unde‡
ö°r


54 #ifde‡
HAVE_XCURSES


55 
	~<xcur£s.h
>

56 #i‚de‡
mvwhlöe


57 
	#mvwhlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`whlöe
(wö,c,n))

	)

59 #i‚de‡
mvwvlöe


60 
	#mvwvlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wvlöe
(wö,c,n))

	)

62 #ñi‡
deföed
(
HAVE_NCURSESW_NCURSES_H
)

63 
	~<ncur£sw/ncur£s.h
>

64 #ñi‡
deföed
(
HAVE_NCURSES_NCURSES_H
)

65 
	~<ncur£s/ncur£s.h
>

66 #ñi‡
deföed
(
HAVE_NCURSES_H
)

67 
	~<ncur£s.h
>

69 
	~<cur£s.h
>

72 
	~<sys/ty≥s.h
>

73 
	~<sys/°©.h
>

75 
	~<°dlib.h
>

76 
	~<°rög.h
>

77 
	~<˘y≥.h
>

78 
	~<uni°d.h
>

79 
	~<dúít.h
>

80 
	~<time.h
>

81 
	~<î∫o.h
>

82 
	~<pwd.h
>

83 
	~<gΩ.h
>

85 #ifde‡
CDK_HAVE_LIMITS_H


86 
	~<limôs.h
>

89 #ifde‡
CDK_HAVE_GETOPT_HEADER


90 #ifde‡
CDK_HAVE_GETOPT_H


91 
	~<gë›t.h
>

94 
›töd
;

95 * 
›èrg
;

101 #ifde‡
buâ⁄s


102 #unde‡
buâ⁄s


105 #ifde‡
löes


106 #unde‡
löes


109 #ifde‡
√wlöe


110 #unde‡
√wlöe


116 #i‚de‡
INT_MIN


117 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

120 #i‚de‡
INT_MAX


121 
	#INT_MAX
 2147483647

	)

124 #i‚de‡
GCC_UNUSED


125 
	#GCC_UNUSED


	)

128 #ifde‡
HAVE_LIBDMALLOC


129 
	~<dmÆloc.h
>

131 #unde‡
HAVE_LIBDMALLOC


132 
	#HAVE_LIBDMALLOC
 0

	)

135 #ifde‡
HAVE_LIBDBMALLOC


136 
	~<dbmÆloc.h
>

138 #unde‡
HAVE_LIBDBMALLOC


139 
	#HAVE_LIBDBMALLOC
 0

	)

145 íum { 
	gvNULL
 = 0

146 ,
	gvALPHALIST


147 ,
	gvBUTTON


148 ,
	gvBUTTONBOX


149 ,
	gvCALENDAR


150 ,
	gvDIALOG


151 ,
	gvDSCALE


152 ,
	gvENTRY


153 ,
	gvFSCALE


154 ,
	gvFSELECT


155 ,
	gvFSLIDER


156 ,
	gvGRAPH


157 ,
	gvHISTOGRAM


158 ,
	gvITEMLIST


159 ,
	gvLABEL


160 ,
	gvMARQUEE


161 ,
	gvMATRIX


162 ,
	gvMENTRY


163 ,
	gvMENU


164 ,
	gvRADIO


165 ,
	gvSCALE


166 ,
	gvSCROLL


167 ,
	gvSELECTION


168 ,
	gvSLIDER


169 ,
	gvSWINDOW


170 ,
	gvTEMPLATE


171 ,
	gvTRAVERSE


172 ,
	gvUSCALE


173 ,
	gvUSLIDER


174 ,
	gvVIEWER


175 } 
	tEObje˘Ty≥
;

181 íum { 
	gvINVALID
 = 0

182 ,
	gvCHAR


183 ,
	gvHCHAR


184 ,
	gvINT


185 ,
	gvHINT


186 ,
	gvMIXED


187 ,
	gvHMIXED


188 ,
	gvUCHAR


189 ,
	gvLCHAR


190 ,
	gvUHCHAR


191 ,
	gvLHCHAR


192 ,
	gvUMIXED


193 ,
	gvLMIXED


194 ,
	gvUHMIXED


195 ,
	gvLHMIXED


196 ,
	gvVIEWONLY


197 } 
	tEDi•œyTy≥
;

203 íum {
	gvNONE
, 
	gvPERCENT
, 
	gvFRACTION
, 
	gvREAL
} 
	tEHi°ogømDi•œyTy≥
;

208 íum {
	gvPLOT
, 
	gvLINE
} 
	tEGøphDi•œyTy≥
;

214 íum {
	gvFRONT
, 
	gvBACK
, 
	gvBOTH
} 
	tESåùTy≥
;

220 íum {
	gvEARLY_EXIT
, 
	gvESCAPE_HIT
, 
	gvNORMAL
, 
	gvNEVER_ACTIVATED
} 
	tEExôTy≥
;

225 
	tboﬁón
;

230 
	#LEFT
 9000

	)

231 
	#RIGHT
 9001

	)

232 
	#CENTER
 9002

	)

233 
	#TOP
 9003

	)

234 
	#BOTTOM
 9004

	)

235 
	#HORIZONTAL
 9005

	)

236 
	#VERTICAL
 9006

	)

237 
	#FULL
 9007

	)

239 
	#NONE
 0

	)

240 
	#ROW
 1

	)

241 
	#COL
 2

	)

243 
	#MAX_BINDINGS
 300

	)

244 
	#MAX_ITEMS
 2000

	)

245 
	#MAX_BUTTONS
 200

	)

247 
	#MAXIMUM
(
a
,
b
Ë(◊Ë> (bË? (aË: (b))

	)

248 
	#MINIMUM
(
a
,
b
Ë(◊Ë< (bË? (aË: (b))

	)

249 
	#HALF
(
a
Ë(◊Ë>> 1)

	)

251 #i‚de‡
COLOR_PAIR


252 
	#COLOR_PAIR
(
a
Ë
A_NORMAL


	)

255 
	#CONTROL
(
c
Ë((cË& 0x1fË

	)

258 
FILE
 *
CDKDEBUG
;

265 
	#START_DEBUG
(
a
Ë(
CDKDEBUG
=
	`°¨tCDKDebug
◊))

	)

266 
	#WRITE_DEBUGMESG
(
a
,
b
Ë(
	`wrôeCDKDebugMesßge
 (
CDKDEBUG
,
__FILE__
,a,
__LINE__
,b))

	)

267 
	#END_DEBUG
 (
	`°›CDKDebug
(
CDKDEBUG
)

	)

268 
FILE
 *
°¨tCDKDebug
(*
fûíame
);

269 
wrôeCDKDebugMesßge
 (
FILE
 *
fd
, *
fûíame
, *
fun˘i⁄
, 
löe
, *
mesßge
);

270 
°›CDKDebug
 (
FILE
 *
fd
);

275 
	~<cdk/cdks¸ìn.h
>

276 
	~<cdk/curdefs.h
>

277 
	~<cdk/bödög.h
>

278 
	~<cdk/cdk_utû.h
>

279 
	~<cdk/cdk_objs.h
>

280 
	~<cdk/cdk_∑øms.h
>

285 
	~<cdk/ÆphÆi°.h
>

286 
	~<cdk/buâ⁄box.h
>

287 
	~<cdk/ˇÀnd¨.h
>

288 
	~<cdk/dülog.h
>

289 
	~<cdk/íåy.h
>

290 
	~<cdk/f£À˘.h
>

291 
	~<cdk/gøph.h
>

292 
	~<cdk/hi°ogøm.h
>

293 
	~<cdk/ôemli°.h
>

294 
	~<cdk/œbñ.h
>

295 
	~<cdk/m¨quì.h
>

296 
	~<cdk/m©rix.h
>

297 
	~<cdk/míåy.h
>

298 
	~<cdk/míu.h
>

299 
	~<cdk/ødio.h
>

300 
	~<cdk/s¸ﬁl.h
>

301 
	~<cdk/£À˘i⁄.h
>

302 
	~<cdk/swödow.h
>

303 
	~<cdk/ãm∂©e.h
>

304 
	~<cdk/võwî.h
>

305 
	~<cdk/åavî£.h
>

306 
	~<cdk/buâ⁄.h
>

311 
	~<cdk/dsˇÀ.h
>

312 
	~<cdk/fsˇÀ.h
>

313 
	~<cdk/sˇÀ.h
>

314 
	~<cdk/usˇÀ.h
>

316 
	~<cdk/f¶idî.h
>

317 
	~<cdk/¶idî.h
>

318 
	~<cdk/u¶idî.h
>

323 
	~<cdk/døw.h
>

325 #ifde‡
__˝lu•lus


	@/usr/include/curses.h

37 #i‚de‡
__NCURSES_H


38 
	#__NCURSES_H


	)

40 
	#CURSES
 1

	)

41 
	#CURSES_H
 1

	)

44 
	#NCURSES_VERSION_MAJOR
 5

	)

45 
	#NCURSES_VERSION_MINOR
 9

	)

46 
	#NCURSES_VERSION_PATCH
 20110404

	)

49 #unde‡
NCURSES_VERSION


50 
	#NCURSES_VERSION
 "5.9"

	)

55 
	#NCURSES_MOUSE_VERSION
 1

	)

60 
	~<ncur£s_dŒ.h
>

65 #i‚de‡
NCURSES_ENABLE_STDBOOL_H


66 
	#NCURSES_ENABLE_STDBOOL_H
 1

	)

73 #ifde‡
NCURSES_NOMACROS


74 #i‚de‡
NCURSES_ATTR_T


75 
	#NCURSES_ATTR_T
 
©å_t


	)

79 #i‚de‡
NCURSES_ATTR_T


80 
	#NCURSES_ATTR_T
 

	)

87 #unde‡
NCURSES_CONST


88 
	#NCURSES_CONST
 c⁄°

	)

90 #unde‡
NCURSES_INLINE


91 
	#NCURSES_INLINE
 
ölöe


	)

96 #unde‡
NCURSES_COLOR_T


97 
	#NCURSES_COLOR_T
 

	)

102 #i‚de‡
NCURSES_OPAQUE


103 
	#NCURSES_OPAQUE
 0

	)

109 #i‚de‡
NCURSES_REENTRANT


110 
	#NCURSES_REENTRANT
 0

	)

116 #unde‡
NCURSES_INTEROP_FUNCS


117 
	#NCURSES_INTEROP_FUNCS
 0

	)

122 #unde‡
NCURSES_SIZE_T


123 
	#NCURSES_SIZE_T
 

	)

128 #unde‡
NCURSES_TPARM_VARARGS


129 
	#NCURSES_TPARM_VARARGS
 1

	)

136 #unde‡
NCURSES_CH_T


137 
	#NCURSES_CH_T
 
chty≥


	)

139 #i‡0 && 
deföed
(
_LP64
)

140 
	tchty≥
;

141 
	tmmask_t
;

143 
	tchty≥
;

144 
	tmmask_t
;

150 
	~<°dio.h
>

156 #unde‡
NCURSES_WIDECHAR


157 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
Ë|| deföed(
_XPG5
)

158 
	#NCURSES_WIDECHAR


	)

161 
	~<°d¨g.h
>

162 #ifde‡
NCURSES_WIDECHAR


163 
	~<°ddef.h
>

178 #unde‡
TRUE


179 
	#TRUE
 1

	)

181 #unde‡
FALSE


182 
	#FALSE
 0

	)

184 
	tNCURSES_BOOL
;

186 #i‡
deföed
(
__˝lu•lus
)

189 
	#NCURSES_BOOL
 
boﬁ


	)

193 #i‡
NCURSES_ENABLE_STDBOOL_H


194 
	~<°dboﬁ.h
>

196 
	#NCURSES_BOOL
 
boﬁ


	)

199 #unde‡
boﬁ


200 
	#boﬁ
 
NCURSES_BOOL


	)

205 #ifde‡
__˝lu•lus


207 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë
°©ic_ˇ°
<ty≥>(vÆue)

	)

209 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë—y≥)(vÆue)

	)

216 
	#WA_ATTRIBUTES
 
A_ATTRIBUTES


	)

217 
	#WA_NORMAL
 
A_NORMAL


	)

218 
	#WA_STANDOUT
 
A_STANDOUT


	)

219 
	#WA_UNDERLINE
 
A_UNDERLINE


	)

220 
	#WA_REVERSE
 
A_REVERSE


	)

221 
	#WA_BLINK
 
A_BLINK


	)

222 
	#WA_DIM
 
A_DIM


	)

223 
	#WA_BOLD
 
A_BOLD


	)

224 
	#WA_ALTCHARSET
 
A_ALTCHARSET


	)

225 
	#WA_INVIS
 
A_INVIS


	)

226 
	#WA_PROTECT
 
A_PROTECT


	)

227 
	#WA_HORIZONTAL
 
A_HORIZONTAL


	)

228 
	#WA_LEFT
 
A_LEFT


	)

229 
	#WA_LOW
 
A_LOW


	)

230 
	#WA_RIGHT
 
A_RIGHT


	)

231 
	#WA_TOP
 
A_TOP


	)

232 
	#WA_VERTICAL
 
A_VERTICAL


	)

235 
	#COLOR_BLACK
 0

	)

236 
	#COLOR_RED
 1

	)

237 
	#COLOR_GREEN
 2

	)

238 
	#COLOR_YELLOW
 3

	)

239 
	#COLOR_BLUE
 4

	)

240 
	#COLOR_MAGENTA
 5

	)

241 
	#COLOR_CYAN
 6

	)

242 
	#COLOR_WHITE
 7

	)

246 #i‡0 || 
NCURSES_REENTRANT


247 
NCURSES_WRAPPED_VAR
(
chty≥
*, 
acs_m≠
);

248 
	#acs_m≠
 
	`NCURSES_PUBLIC_VAR
(
	`acs_m≠
())

	)

250 
NCURSES_EXPORT_VAR
(
chty≥
Ë
acs_m≠
[];

253 
	#NCURSES_ACS
(
c
Ë(
acs_m≠
[
	`NCURSES_CAST
(,c)])

	)

256 
	#ACS_ULCORNER
 
	`NCURSES_ACS
('l'Ë

	)

257 
	#ACS_LLCORNER
 
	`NCURSES_ACS
('m'Ë

	)

258 
	#ACS_URCORNER
 
	`NCURSES_ACS
('k'Ë

	)

259 
	#ACS_LRCORNER
 
	`NCURSES_ACS
('j'Ë

	)

260 
	#ACS_LTEE
 
	`NCURSES_ACS
('t'Ë

	)

261 
	#ACS_RTEE
 
	`NCURSES_ACS
('u'Ë

	)

262 
	#ACS_BTEE
 
	`NCURSES_ACS
('v'Ë

	)

263 
	#ACS_TTEE
 
	`NCURSES_ACS
('w'Ë

	)

264 
	#ACS_HLINE
 
	`NCURSES_ACS
('q'Ë

	)

265 
	#ACS_VLINE
 
	`NCURSES_ACS
('x'Ë

	)

266 
	#ACS_PLUS
 
	`NCURSES_ACS
('n'Ë

	)

267 
	#ACS_S1
 
	`NCURSES_ACS
('o'Ë

	)

268 
	#ACS_S9
 
	`NCURSES_ACS
('s'Ë

	)

269 
	#ACS_DIAMOND
 
	`NCURSES_ACS
('`'Ë

	)

270 
	#ACS_CKBOARD
 
	`NCURSES_ACS
('a'Ë

	)

271 
	#ACS_DEGREE
 
	`NCURSES_ACS
('f'Ë

	)

272 
	#ACS_PLMINUS
 
	`NCURSES_ACS
('g'Ë

	)

273 
	#ACS_BULLET
 
	`NCURSES_ACS
('~'Ë

	)

275 
	#ACS_LARROW
 
	`NCURSES_ACS
(','Ë

	)

276 
	#ACS_RARROW
 
	`NCURSES_ACS
('+'Ë

	)

277 
	#ACS_DARROW
 
	`NCURSES_ACS
('.'Ë

	)

278 
	#ACS_UARROW
 
	`NCURSES_ACS
('-'Ë

	)

279 
	#ACS_BOARD
 
	`NCURSES_ACS
('h'Ë

	)

280 
	#ACS_LANTERN
 
	`NCURSES_ACS
('i'Ë

	)

281 
	#ACS_BLOCK
 
	`NCURSES_ACS
('0'Ë

	)

287 
	#ACS_S3
 
	`NCURSES_ACS
('p'Ë

	)

288 
	#ACS_S7
 
	`NCURSES_ACS
('r'Ë

	)

289 
	#ACS_LEQUAL
 
	`NCURSES_ACS
('y'Ë

	)

290 
	#ACS_GEQUAL
 
	`NCURSES_ACS
('z'Ë

	)

291 
	#ACS_PI
 
	`NCURSES_ACS
('{'Ë

	)

292 
	#ACS_NEQUAL
 
	`NCURSES_ACS
('|'Ë

	)

293 
	#ACS_STERLING
 
	`NCURSES_ACS
('}'Ë

	)

301 
	#ACS_BSSB
 
ACS_ULCORNER


	)

302 
	#ACS_SSBB
 
ACS_LLCORNER


	)

303 
	#ACS_BBSS
 
ACS_URCORNER


	)

304 
	#ACS_SBBS
 
ACS_LRCORNER


	)

305 
	#ACS_SBSS
 
ACS_RTEE


	)

306 
	#ACS_SSSB
 
ACS_LTEE


	)

307 
	#ACS_SSBS
 
ACS_BTEE


	)

308 
	#ACS_BSSS
 
ACS_TTEE


	)

309 
	#ACS_BSBS
 
ACS_HLINE


	)

310 
	#ACS_SBSB
 
ACS_VLINE


	)

311 
	#ACS_SSSS
 
ACS_PLUS


	)

313 #unde‡
ERR


314 
	#ERR
 (-1)

	)

316 #unde‡
OK


317 
	#OK
 (0)

	)

320 
	#_SUBWIN
 0x01

	)

321 
	#_ENDLINE
 0x02

	)

322 
	#_FULLWIN
 0x04

	)

323 
	#_SCROLLWIN
 0x08

	)

324 
	#_ISPAD
 0x10

	)

325 
	#_HASMOVED
 0x20

	)

326 
	#_WRAPPED
 0x40

	)

332 
	#_NOCHANGE
 -1

	)

338 
	#_NEWINDEX
 -1

	)

340 
s¸ìn
 
	tSCREEN
;

341 
_wö_°
 
	tWINDOW
;

343 
chty≥
 
	t©å_t
;

345 #ifde‡
NCURSES_WIDECHAR


348 #ifde‡
mbÀn


349 #unde‡
mbÀn


351 
	~<libutf8.h
>

355 
	~<wch¨.h
>

359 
	twch¨_t
;

363 
	twöt_t
;

372 
	#CCHARW_MAX
 5

	)

375 
©å_t
 
	g©å
;

376 
wch¨_t
 
	gch¨s
[
CCHARW_MAX
];

378 #unde‡
NCURSES_EXT_COLORS


379 
	#NCURSES_EXT_COLORS
 20110404

	)

380 
	gext_cﬁ‹
;

383 
	tcch¨_t
;

387 #i‡!
NCURSES_OPAQUE


388 
	gld©
;

390 
	s_wö_°


392 
NCURSES_SIZE_T
 
	g_cury
, 
	g_curx
;

395 
NCURSES_SIZE_T
 
	g_maxy
, 
	g_maxx
;

396 
NCURSES_SIZE_T
 
	g_begy
, 
	g_begx
;

398 
	g_Êags
;

401 
©å_t
 
	g_©ås
;

402 
chty≥
 
	g_bkgd
;

405 
boﬁ
 
	g_nŸimeout
;

406 
boﬁ
 
	g_˛ór
;

407 
boﬁ
 
	g_Àaveok
;

408 
boﬁ
 
	g_s¸ﬁl
;

409 
boﬁ
 
	g_idlok
;

410 
boﬁ
 
	g_idcok
;

411 
boﬁ
 
	g_immed
;

412 
boﬁ
 
	g_sync
;

413 
boﬁ
 
	g_u£_key∑d
;

414 
	g_dñay
;

416 
ld©
 *
	g_löe
;

419 
NCURSES_SIZE_T
 
	g_ªgt›
;

420 
NCURSES_SIZE_T
 
	g_ªgbŸtom
;

423 
	g_∑rx
;

424 
	g_∑ry
;

425 
WINDOW
 *
	g_∑ª¡
;

428 
	spd©


430 
NCURSES_SIZE_T
 
	g_∑d_y
, 
	g_∑d_x
;

431 
NCURSES_SIZE_T
 
	g_∑d_t›
, 
	g_∑d_À·
;

432 
NCURSES_SIZE_T
 
	g_∑d_bŸtom
, 
	g_∑d_right
;

433 } 
	g_∑d
;

435 
NCURSES_SIZE_T
 
	g_yoff£t
;

437 #ifde‡
NCURSES_WIDECHAR


438 
cch¨_t
 
	g_bkg∫d
;

440 
	g_cﬁ‹
;

450 #ifde‡
NCURSES_WGETCH_EVENTS


451 #i‡!
deföed
(
__BEOS__
Ë|| deföed(
__HAIKU__
)

453 
	#NCURSES_EVENT_VERSION
 1

	)

459 
	#_NC_EVENT_TIMEOUT_MSEC
 1

	)

460 
	#_NC_EVENT_FILE
 2

	)

461 
	#_NC_EVENT_FILE_READABLE
 2

	)

463 
	#_NC_EVENT_FILE_WRITABLE
 4

	)

464 
	#_NC_EVENT_FILE_EXCEPTION
 8

	)

469 
	gty≥
;

472 
	gtimeout_m£c
;

475 
	gÊags
;

476 
	gfd
;

477 
	gªsu…
;

478 } 
	g„v
;

479 } 
	gd©a
;

480 } 
	t_nc_evít
;

484 
	gcou¡
;

485 
	gªsu…_Êags
;

486 
_nc_evít
 *
	gevíts
[1];

487 } 
	t_nc_evíéi°
;

489 
NCURSES_EXPORT
(Ë
wgëch_evíts
 (
WINDOW
 *, 
_nc_evíéi°
 *);

490 
NCURSES_EXPORT
(Ë
wgën°r_evíts
 (
WINDOW
 *,*,,
_nc_evíéi°
 *);

502 #i‡!(
deföed
(
__GNUC__
Ë|| deföed(
__GNUG__
Ë|| deföed(
__©åibuã__
))

503 
	#__©åibuã__
(
p
Ë

	)

514 #i‚de‡
GCC_PRINTFLIKE


515 #i‡
deföed
(
GCC_PRINTF
Ë&& !deföed(
¥ötf
)

516 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,fmt,v¨)))

	)

518 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë

	)

522 #i‚de‡
GCC_SCANFLIKE


523 #i‡
deföed
(
GCC_SCANF
Ë&& !deföed(
sˇnf
)

524 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
sˇnf
,fmt,v¨)))

	)

526 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë

	)

530 #i‚def 
GCC_NORETURN


531 
	#GCC_NORETURN


	)

534 #i‚def 
GCC_UNUSED


535 
	#GCC_UNUSED


	)

542 (*
	gNCURSES_OUTC
)();

551 
NCURSES_EXPORT
(Ë
addch
 (c⁄° 
chty≥
);

552 
NCURSES_EXPORT
(Ë
addchn°r
 (c⁄° 
chty≥
 *, );

553 
NCURSES_EXPORT
(Ë
addch°r
 (c⁄° 
chty≥
 *);

554 
NCURSES_EXPORT
(Ë
addn°r
 (const *, );

555 
NCURSES_EXPORT
(Ë
add°r
 (const *);

556 
NCURSES_EXPORT
(Ë
©åoff
 (
NCURSES_ATTR_T
);

557 
NCURSES_EXPORT
(Ë
©å⁄
 (
NCURSES_ATTR_T
);

558 
NCURSES_EXPORT
(Ë
©å£t
 (
NCURSES_ATTR_T
);

559 
NCURSES_EXPORT
(Ë
©å_gë
 (
©å_t
 *, *, *);

560 
NCURSES_EXPORT
(Ë
©å_off
 (
©å_t
, *);

561 
NCURSES_EXPORT
(Ë
©å_⁄
 (
©å_t
, *);

562 
NCURSES_EXPORT
(Ë
©å_£t
 (
©å_t
, , *);

563 
NCURSES_EXPORT
(Ë
baudøã
 ();

564 
NCURSES_EXPORT
(Ë
bìp
 ();

565 
NCURSES_EXPORT
(Ë
bkgd
 (
chty≥
);

566 
NCURSES_EXPORT
(Ë
bkgd£t
 (
chty≥
);

567 
NCURSES_EXPORT
(Ë
b‹dî
 (
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

568 
NCURSES_EXPORT
(Ë
box
 (
WINDOW
 *, 
chty≥
, chtype);

569 
NCURSES_EXPORT
(
boﬁ
Ë
ˇn_ch™ge_cﬁ‹
 ();

570 
NCURSES_EXPORT
(Ë
cbªak
 ();

571 
NCURSES_EXPORT
(Ë
chg©
 (, 
©å_t
, , const *);

572 
NCURSES_EXPORT
(Ë
˛ór
 ();

573 
NCURSES_EXPORT
(Ë
˛órok
 (
WINDOW
 *,
boﬁ
);

574 
NCURSES_EXPORT
(Ë
˛πobŸ
 ();

575 
NCURSES_EXPORT
(Ë
˛π€ﬁ
 ();

576 
NCURSES_EXPORT
(Ë
cﬁ‹_c⁄ã¡
 (,*,*,*);

577 
NCURSES_EXPORT
(Ë
cﬁ‹_£t
 (,*);

578 
NCURSES_EXPORT
(Ë
COLOR_PAIR
 ();

579 
NCURSES_EXPORT
(Ë
c›ywö
 (c⁄° 
WINDOW
*,WINDOW*,,,,,,,);

580 
NCURSES_EXPORT
(Ë
curs_£t
 ();

581 
NCURSES_EXPORT
(Ë
def_¥og_mode
 ();

582 
NCURSES_EXPORT
(Ë
def_shñl_mode
 ();

583 
NCURSES_EXPORT
(Ë
dñay_ouçut
 ();

584 
NCURSES_EXPORT
(Ë
dñch
 ();

585 
NCURSES_EXPORT
(Ë
dñs¸ìn
 (
SCREEN
 *);

586 
NCURSES_EXPORT
(Ë
dñwö
 (
WINDOW
 *);

587 
NCURSES_EXPORT
(Ë
dñëñn
 ();

588 
NCURSES_EXPORT
(
WINDOW
 *Ë
dîwö
 (WINDOW *,,,,);

589 
NCURSES_EXPORT
(Ë
doupd©e
 ();

590 
NCURSES_EXPORT
(
WINDOW
 *Ë
dupwö
 (WINDOW *);

591 
NCURSES_EXPORT
(Ë
echo
 ();

592 
NCURSES_EXPORT
(Ë
echoch¨
 (c⁄° 
chty≥
);

593 
NCURSES_EXPORT
(Ë
îa£
 ();

594 
NCURSES_EXPORT
(Ë
ídwö
 ();

595 
NCURSES_EXPORT
(Ë
îa£ch¨
 ();

596 
NCURSES_EXPORT
(Ë
fûãr
 ();

597 
NCURSES_EXPORT
(Ë
Êash
 ();

598 
NCURSES_EXPORT
(Ë
Êushöp
 ();

599 
NCURSES_EXPORT
(
chty≥
Ë
gëbkgd
 (
WINDOW
 *);

600 
NCURSES_EXPORT
(Ë
gëch
 ();

601 
NCURSES_EXPORT
(Ë
gën°r
 (*, );

602 
NCURSES_EXPORT
(Ë
gë°r
 (*);

603 
NCURSES_EXPORT
(
WINDOW
 *Ë
gëwö
 (
FILE
 *);

604 
NCURSES_EXPORT
(Ë
hÆfdñay
 ();

605 
NCURSES_EXPORT
(
boﬁ
Ë
has_cﬁ‹s
 ();

606 
NCURSES_EXPORT
(
boﬁ
Ë
has_ic
 ();

607 
NCURSES_EXPORT
(
boﬁ
Ë
has_û
 ();

608 
NCURSES_EXPORT
(Ë
hlöe
 (
chty≥
, );

609 
NCURSES_EXPORT
(Ë
idcok
 (
WINDOW
 *, 
boﬁ
);

610 
NCURSES_EXPORT
(Ë
idlok
 (
WINDOW
 *, 
boﬁ
);

611 
NCURSES_EXPORT
(Ë
immedok
 (
WINDOW
 *, 
boﬁ
);

612 
NCURSES_EXPORT
(
chty≥
Ë
öch
 ();

613 
NCURSES_EXPORT
(Ë
öchn°r
 (
chty≥
 *, );

614 
NCURSES_EXPORT
(Ë
öch°r
 (
chty≥
 *);

615 
NCURSES_EXPORT
(
WINDOW
 *Ë
öôs¸
 ();

616 
NCURSES_EXPORT
(Ë
öô_cﬁ‹
 (,,,);

617 
NCURSES_EXPORT
(Ë
öô_∑ú
 (,,);

618 
NCURSES_EXPORT
(Ë
ön°r
 (*, );

619 
NCURSES_EXPORT
(Ë
ösch
 (
chty≥
);

620 
NCURSES_EXPORT
(Ë
ösdñ 
 ();

621 
NCURSES_EXPORT
(Ë
ö£π 
 ();

622 
NCURSES_EXPORT
(Ë
ö¢°r
 (const *, );

623 
NCURSES_EXPORT
(Ë
ös°r
 (const *);

624 
NCURSES_EXPORT
(Ë
ö°r
 (*);

625 
NCURSES_EXPORT
(Ë
öåÊush
 (
WINDOW
 *,
boﬁ
);

626 
NCURSES_EXPORT
(
boﬁ
Ë
i£ndwö
 ();

627 
NCURSES_EXPORT
(
boﬁ
Ë
is_löëouched
 (
WINDOW
 *,);

628 
NCURSES_EXPORT
(
boﬁ
Ë
is_wötouched
 (
WINDOW
 *);

629 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key«me
 ();

630 
NCURSES_EXPORT
(Ë
key∑d
 (
WINDOW
 *,
boﬁ
);

631 
NCURSES_EXPORT
(Ë
kûlch¨
 ();

632 
NCURSES_EXPORT
(Ë
Àaveok
 (
WINDOW
 *,
boﬁ
);

633 
NCURSES_EXPORT
(*Ë
l⁄g«me
 ();

634 
NCURSES_EXPORT
(Ë
mëa
 (
WINDOW
 *,
boﬁ
);

635 
NCURSES_EXPORT
(Ë
move
 (, );

636 
NCURSES_EXPORT
(Ë
mvaddch
 (, , c⁄° 
chty≥
);

637 
NCURSES_EXPORT
(Ë
mvaddchn°r
 (, , c⁄° 
chty≥
 *, );

638 
NCURSES_EXPORT
(Ë
mvaddch°r
 (, , c⁄° 
chty≥
 *);

639 
NCURSES_EXPORT
(Ë
mvaddn°r
 (, , const *, );

640 
NCURSES_EXPORT
(Ë
mvadd°r
 (, , const *);

641 
NCURSES_EXPORT
(Ë
mvchg©
 (, , , 
©å_t
, , const *);

642 
NCURSES_EXPORT
(Ë
mvcur
 (,,,);

643 
NCURSES_EXPORT
(Ë
mvdñch
 (, );

644 
NCURSES_EXPORT
(Ë
mvdîwö
 (
WINDOW
 *, , );

645 
NCURSES_EXPORT
(Ë
mvgëch
 (, );

646 
NCURSES_EXPORT
(Ë
mvgën°r
 (, , *, );

647 
NCURSES_EXPORT
(Ë
mvgë°r
 (, , *);

648 
NCURSES_EXPORT
(Ë
mvhlöe
 (, , 
chty≥
, );

649 
NCURSES_EXPORT
(
chty≥
Ë
mvöch
 (, );

650 
NCURSES_EXPORT
(Ë
mvöchn°r
 (, , 
chty≥
 *, );

651 
NCURSES_EXPORT
(Ë
mvöch°r
 (, , 
chty≥
 *);

652 
NCURSES_EXPORT
(Ë
mvön°r
 (, , *, );

653 
NCURSES_EXPORT
(Ë
mvösch
 (, , 
chty≥
);

654 
NCURSES_EXPORT
(Ë
mvö¢°r
 (, , const *, );

655 
NCURSES_EXPORT
(Ë
mvös°r
 (, , const *);

656 
NCURSES_EXPORT
(Ë
mvö°r
 (, , *);

657 
NCURSES_EXPORT
(Ë
mv¥ötw
 (,, const *,...)

658 
GCC_PRINTFLIKE
(3,4);

659 
NCURSES_EXPORT
(Ë
mvsˇnw
 (,, 
NCURSES_CONST
 *,...)

660 
GCC_SCANFLIKE
(3,4);

661 
NCURSES_EXPORT
(Ë
mvvlöe
 (, , 
chty≥
, );

662 
NCURSES_EXPORT
(Ë
mvwaddch
 (
WINDOW
 *, , , c⁄° 
chty≥
);

663 
NCURSES_EXPORT
(Ë
mvwaddchn°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *, );

664 
NCURSES_EXPORT
(Ë
mvwaddch°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *);

665 
NCURSES_EXPORT
(Ë
mvwaddn°r
 (
WINDOW
 *, , , const *, );

666 
NCURSES_EXPORT
(Ë
mvwadd°r
 (
WINDOW
 *, , , const *);

667 
NCURSES_EXPORT
(Ë
mvwchg©
 (
WINDOW
 *, , , , 
©å_t
, , const *);

668 
NCURSES_EXPORT
(Ë
mvwdñch
 (
WINDOW
 *, , );

669 
NCURSES_EXPORT
(Ë
mvwgëch
 (
WINDOW
 *, , );

670 
NCURSES_EXPORT
(Ë
mvwgën°r
 (
WINDOW
 *, , , *, );

671 
NCURSES_EXPORT
(Ë
mvwgë°r
 (
WINDOW
 *, , , *);

672 
NCURSES_EXPORT
(Ë
mvwhlöe
 (
WINDOW
 *, , , 
chty≥
, );

673 
NCURSES_EXPORT
(Ë
mvwö
 (
WINDOW
 *,,);

674 
NCURSES_EXPORT
(
chty≥
Ë
mvwöch
 (
WINDOW
 *, , );

675 
NCURSES_EXPORT
(Ë
mvwöchn°r
 (
WINDOW
 *, , , 
chty≥
 *, );

676 
NCURSES_EXPORT
(Ë
mvwöch°r
 (
WINDOW
 *, , , 
chty≥
 *);

677 
NCURSES_EXPORT
(Ë
mvwön°r
 (
WINDOW
 *, , , *, );

678 
NCURSES_EXPORT
(Ë
mvwösch
 (
WINDOW
 *, , , 
chty≥
);

679 
NCURSES_EXPORT
(Ë
mvwö¢°r
 (
WINDOW
 *, , , const *, );

680 
NCURSES_EXPORT
(Ë
mvwös°r
 (
WINDOW
 *, , , const *);

681 
NCURSES_EXPORT
(Ë
mvwö°r
 (
WINDOW
 *, , , *);

682 
NCURSES_EXPORT
(Ë
mvw¥ötw
 (
WINDOW
*,,, const *,...)

683 
GCC_PRINTFLIKE
(4,5);

684 
NCURSES_EXPORT
(Ë
mvwsˇnw
 (
WINDOW
 *,,, 
NCURSES_CONST
 *,...)

685 
GCC_SCANFLIKE
(4,5);

686 
NCURSES_EXPORT
(Ë
mvwvlöe
 (
WINDOW
 *,, , 
chty≥
, );

687 
NCURSES_EXPORT
(Ë
«pms
 ();

688 
NCURSES_EXPORT
(
WINDOW
 *Ë
√w∑d
 (,);

689 
NCURSES_EXPORT
(
SCREEN
 *Ë
√wãrm
 (
NCURSES_CONST
 *,
FILE
 *,FILE *);

690 
NCURSES_EXPORT
(
WINDOW
 *Ë
√wwö
 (,,,);

691 
NCURSES_EXPORT
(Ë
∆
 ();

692 
NCURSES_EXPORT
(Ë
nocbªak
 ();

693 
NCURSES_EXPORT
(Ë
nodñay
 (
WINDOW
 *,
boﬁ
);

694 
NCURSES_EXPORT
(Ë
n€cho
 ();

695 
NCURSES_EXPORT
(Ë
n⁄l
 ();

696 
NCURSES_EXPORT
(Ë
noqiÊush
 ();

697 
NCURSES_EXPORT
(Ë
n‹aw
 ();

698 
NCURSES_EXPORT
(Ë
nŸimeout
 (
WINDOW
 *,
boﬁ
);

699 
NCURSES_EXPORT
(Ë
ovîœy
 (c⁄° 
WINDOW
*,WINDOW *);

700 
NCURSES_EXPORT
(Ë
ovîwrôe
 (c⁄° 
WINDOW
*,WINDOW *);

701 
NCURSES_EXPORT
(Ë
∑ú_c⁄ã¡
 (,*,*);

702 
NCURSES_EXPORT
(Ë
PAIR_NUMBER
 ();

703 
NCURSES_EXPORT
(Ë
≥choch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

704 
NCURSES_EXPORT
(Ë
≤ouåe‰esh
 (
WINDOW
*,,,,,,);

705 
NCURSES_EXPORT
(Ë
¥e‰esh
 (
WINDOW
 *,,,,,,);

706 
NCURSES_EXPORT
(Ë
¥ötw
 (const *,...)

707 
GCC_PRINTFLIKE
(1,2);

708 
NCURSES_EXPORT
(Ë
putwö
 (
WINDOW
 *, 
FILE
 *);

709 
NCURSES_EXPORT
(Ë
qiÊush
 ();

710 
NCURSES_EXPORT
(Ë
øw
 ();

711 
NCURSES_EXPORT
(Ë
ªdøwwö
 (
WINDOW
 *);

712 
NCURSES_EXPORT
(Ë
ª‰esh
 ();

713 
NCURSES_EXPORT
(Ë
ª£ây
 ();

714 
NCURSES_EXPORT
(Ë
ª£t_¥og_mode
 ();

715 
NCURSES_EXPORT
(Ë
ª£t_shñl_mode
 ();

716 
NCURSES_EXPORT
(Ë
rùofÊöe
 (, (*)(
WINDOW
 *, ));

717 
NCURSES_EXPORT
(Ë
ßvëty
 ();

718 
NCURSES_EXPORT
(Ë
sˇnw
 (
NCURSES_CONST
 *,...)

719 
GCC_SCANFLIKE
(1,2);

720 
NCURSES_EXPORT
(Ë
s¸_dump
 (const *);

721 
NCURSES_EXPORT
(Ë
s¸_öô
 (const *);

722 
NCURSES_EXPORT
(Ë
s¸l
 ();

723 
NCURSES_EXPORT
(Ë
s¸ﬁl
 (
WINDOW
 *);

724 
NCURSES_EXPORT
(Ë
s¸ﬁlok
 (
WINDOW
 *,
boﬁ
);

725 
NCURSES_EXPORT
(Ë
s¸_ª°‹e
 (const *);

726 
NCURSES_EXPORT
(Ë
s¸_£t
 (const *);

727 
NCURSES_EXPORT
(Ë
£ts¸ªg
 (,);

728 
NCURSES_EXPORT
(
SCREEN
 *Ë
£t_ãrm
 (SCREEN *);

729 
NCURSES_EXPORT
(Ë
¶k_©åoff
 (c⁄° 
chty≥
);

730 
NCURSES_EXPORT
(Ë
¶k_©å_off
 (c⁄° 
©å_t
, *);

731 
NCURSES_EXPORT
(Ë
¶k_©å⁄
 (c⁄° 
chty≥
);

732 
NCURSES_EXPORT
(Ë
¶k_©å_⁄
 (
©å_t
,*);

733 
NCURSES_EXPORT
(Ë
¶k_©å£t
 (c⁄° 
chty≥
);

734 
NCURSES_EXPORT
(
©å_t
Ë
¶k_©å
 ();

735 
NCURSES_EXPORT
(Ë
¶k_©å_£t
 (c⁄° 
©å_t
,,*);

736 
NCURSES_EXPORT
(Ë
¶k_˛ór
 ();

737 
NCURSES_EXPORT
(Ë
¶k_cﬁ‹
 ();

738 
NCURSES_EXPORT
(Ë
¶k_öô
 ();

739 
NCURSES_EXPORT
(*Ë
¶k_œbñ
 ();

740 
NCURSES_EXPORT
(Ë
¶k_nouåe‰esh
 ();

741 
NCURSES_EXPORT
(Ë
¶k_ª‰esh
 ();

742 
NCURSES_EXPORT
(Ë
¶k_ª°‹e
 ();

743 
NCURSES_EXPORT
(Ë
¶k_£t
 (,const *,);

744 
NCURSES_EXPORT
(Ë
¶k_touch
 ();

745 
NCURSES_EXPORT
(Ë
°™dout
 ();

746 
NCURSES_EXPORT
(Ë
°™díd
 ();

747 
NCURSES_EXPORT
(Ë
°¨t_cﬁ‹
 ();

748 
NCURSES_EXPORT
(
WINDOW
 *Ë
sub∑d
 (WINDOW *, , , , );

749 
NCURSES_EXPORT
(
WINDOW
 *Ë
subwö
 (WINDOW *, , , , );

750 
NCURSES_EXPORT
(Ë
syncok
 (
WINDOW
 *, 
boﬁ
);

751 
NCURSES_EXPORT
(
chty≥
Ë
ãrm©ås
 ();

752 
NCURSES_EXPORT
(*Ë
ãrm«me
 ();

753 
NCURSES_EXPORT
(Ë
timeout
 ();

754 
NCURSES_EXPORT
(Ë
touchlöe
 (
WINDOW
 *, , );

755 
NCURSES_EXPORT
(Ë
touchwö
 (
WINDOW
 *);

756 
NCURSES_EXPORT
(Ë
ty≥ahód
 ();

757 
NCURSES_EXPORT
(Ë
ungëch
 ();

758 
NCURSES_EXPORT
(Ë
u¡ouchwö
 (
WINDOW
 *);

759 
NCURSES_EXPORT
(Ë
u£_ív
 (
boﬁ
);

760 
NCURSES_EXPORT
(Ë
vid©å
 (
chty≥
);

761 
NCURSES_EXPORT
(Ë
vidputs
 (
chty≥
, 
NCURSES_OUTC
);

762 
NCURSES_EXPORT
(Ë
vlöe
 (
chty≥
, );

763 
NCURSES_EXPORT
(Ë
vw¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

764 
NCURSES_EXPORT
(Ë
vw_¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

765 
NCURSES_EXPORT
(Ë
vwsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

766 
NCURSES_EXPORT
(Ë
vw_sˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

767 
NCURSES_EXPORT
(Ë
waddch
 (
WINDOW
 *, c⁄° 
chty≥
);

768 
NCURSES_EXPORT
(Ë
waddchn°r
 (
WINDOW
 *,c⁄° 
chty≥
 *,);

769 
NCURSES_EXPORT
(Ë
waddch°r
 (
WINDOW
 *,c⁄° 
chty≥
 *);

770 
NCURSES_EXPORT
(Ë
waddn°r
 (
WINDOW
 *,const *,);

771 
NCURSES_EXPORT
(Ë
wadd°r
 (
WINDOW
 *,const *);

772 
NCURSES_EXPORT
(Ë
w©å⁄
 (
WINDOW
 *, );

773 
NCURSES_EXPORT
(Ë
w©åoff
 (
WINDOW
 *, );

774 
NCURSES_EXPORT
(Ë
w©å£t
 (
WINDOW
 *, );

775 
NCURSES_EXPORT
(Ë
w©å_gë
 (
WINDOW
 *, 
©å_t
 *, *, *);

776 
NCURSES_EXPORT
(Ë
w©å_⁄
 (
WINDOW
 *, 
©å_t
, *);

777 
NCURSES_EXPORT
(Ë
w©å_off
 (
WINDOW
 *, 
©å_t
, *);

778 
NCURSES_EXPORT
(Ë
w©å_£t
 (
WINDOW
 *, 
©å_t
, , *);

779 
NCURSES_EXPORT
(Ë
wbkgd
 (
WINDOW
 *, 
chty≥
);

780 
NCURSES_EXPORT
(Ë
wbkgd£t
 (
WINDOW
 *,
chty≥
);

781 
NCURSES_EXPORT
(Ë
wb‹dî
 (
WINDOW
 *,
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

782 
NCURSES_EXPORT
(Ë
wchg©
 (
WINDOW
 *, , 
©å_t
, , const *);

783 
NCURSES_EXPORT
(Ë
w˛ór
 (
WINDOW
 *);

784 
NCURSES_EXPORT
(Ë
w˛πobŸ
 (
WINDOW
 *);

785 
NCURSES_EXPORT
(Ë
w˛π€ﬁ
 (
WINDOW
 *);

786 
NCURSES_EXPORT
(Ë
wcﬁ‹_£t
 (
WINDOW
*,,*);

787 
NCURSES_EXPORT
(Ë
wcursyncup
 (
WINDOW
 *);

788 
NCURSES_EXPORT
(Ë
wdñch
 (
WINDOW
 *);

789 
NCURSES_EXPORT
(Ë
wdñëñn
 (
WINDOW
 *);

790 
NCURSES_EXPORT
(Ë
wechoch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

791 
NCURSES_EXPORT
(Ë
wîa£
 (
WINDOW
 *);

792 
NCURSES_EXPORT
(Ë
wgëch
 (
WINDOW
 *);

793 
NCURSES_EXPORT
(Ë
wgën°r
 (
WINDOW
 *,*,);

794 
NCURSES_EXPORT
(Ë
wgë°r
 (
WINDOW
 *, *);

795 
NCURSES_EXPORT
(Ë
whlöe
 (
WINDOW
 *, 
chty≥
, );

796 
NCURSES_EXPORT
(
chty≥
Ë
wöch
 (
WINDOW
 *);

797 
NCURSES_EXPORT
(Ë
wöchn°r
 (
WINDOW
 *, 
chty≥
 *, );

798 
NCURSES_EXPORT
(Ë
wöch°r
 (
WINDOW
 *, 
chty≥
 *);

799 
NCURSES_EXPORT
(Ë
wön°r
 (
WINDOW
 *, *, );

800 
NCURSES_EXPORT
(Ë
wösch
 (
WINDOW
 *, 
chty≥
);

801 
NCURSES_EXPORT
(Ë
wösdñ 
 (
WINDOW
 *,);

802 
NCURSES_EXPORT
(Ë
wö£π 
 (
WINDOW
 *);

803 
NCURSES_EXPORT
(Ë
wö¢°r
 (
WINDOW
 *, const *,);

804 
NCURSES_EXPORT
(Ë
wös°r
 (
WINDOW
 *, const *);

805 
NCURSES_EXPORT
(Ë
wö°r
 (
WINDOW
 *, *);

806 
NCURSES_EXPORT
(Ë
wmove
 (
WINDOW
 *,,);

807 
NCURSES_EXPORT
(Ë
wnouåe‰esh
 (
WINDOW
 *);

808 
NCURSES_EXPORT
(Ë
w¥ötw
 (
WINDOW
 *, const *,...)

809 
GCC_PRINTFLIKE
(2,3);

810 
NCURSES_EXPORT
(Ë
wªdøw 
 (
WINDOW
 *,,);

811 
NCURSES_EXPORT
(Ë
wª‰esh
 (
WINDOW
 *);

812 
NCURSES_EXPORT
(Ë
wsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,...)

813 
GCC_SCANFLIKE
(2,3);

814 
NCURSES_EXPORT
(Ë
ws¸l
 (
WINDOW
 *,);

815 
NCURSES_EXPORT
(Ë
w£ts¸ªg
 (
WINDOW
 *,,);

816 
NCURSES_EXPORT
(Ë
w°™dout
 (
WINDOW
 *);

817 
NCURSES_EXPORT
(Ë
w°™díd
 (
WINDOW
 *);

818 
NCURSES_EXPORT
(Ë
wsyncdown
 (
WINDOW
 *);

819 
NCURSES_EXPORT
(Ë
wsyncup
 (
WINDOW
 *);

820 
NCURSES_EXPORT
(Ë
wtimeout
 (
WINDOW
 *,);

821 
NCURSES_EXPORT
(Ë
wtouch 
 (
WINDOW
 *,,,);

822 
NCURSES_EXPORT
(Ë
wvlöe
 (
WINDOW
 *,
chty≥
,);

827 
NCURSES_EXPORT
(Ë
tigëÊag
 (
NCURSES_CONST
 *);

828 
NCURSES_EXPORT
(Ë
tigënum
 (
NCURSES_CONST
 *);

829 
NCURSES_EXPORT
(*Ë
tigë°r
 (
NCURSES_CONST
 *);

830 
NCURSES_EXPORT
(Ë
puç
 (const *);

832 #i‡
NCURSES_TPARM_VARARGS


833 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ...);

835 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ,,,,,,,,);

836 
NCURSES_EXPORT
(*Ë
ç¨m_v¨¨gs
 (
NCURSES_CONST
 *, ...);

839 
NCURSES_EXPORT
(*Ë
tù¨m
 (const *, ...);

844 
NCURSES_EXPORT
(Ë
gë©ås
 (c⁄° 
WINDOW
 *);

845 
NCURSES_EXPORT
(Ë
gëcurx
 (c⁄° 
WINDOW
 *);

846 
NCURSES_EXPORT
(Ë
gëcury
 (c⁄° 
WINDOW
 *);

847 
NCURSES_EXPORT
(Ë
gëbegx
 (c⁄° 
WINDOW
 *);

848 
NCURSES_EXPORT
(Ë
gëbegy
 (c⁄° 
WINDOW
 *);

849 
NCURSES_EXPORT
(Ë
gëmaxx
 (c⁄° 
WINDOW
 *);

850 
NCURSES_EXPORT
(Ë
gëmaxy
 (c⁄° 
WINDOW
 *);

851 
NCURSES_EXPORT
(Ë
gë∑rx
 (c⁄° 
WINDOW
 *);

852 
NCURSES_EXPORT
(Ë
gë∑ry
 (c⁄° 
WINDOW
 *);

857 #i‚de‡
NCURSES_WIDECHAR


858 
	#vid_©å
(
a
,
∑ú
,
›ts
Ë
	`vid©å
◊)

	)

865 #unde‡
NCURSES_EXT_FUNCS


866 
	#NCURSES_EXT_FUNCS
 20110404

	)

867 (*
	gNCURSES_WINDOW_CB
)(
	tWINDOW
 *, *);

868 (*
	gNCURSES_SCREEN_CB
)(
	tSCREEN
 *, *);

869 
NCURSES_EXPORT
(
boﬁ
Ë
is_ãrm_ªsized
 (, );

870 
NCURSES_EXPORT
(*Ë
keybound
 (, );

871 
NCURSES_EXPORT
(c⁄° *Ë
cur£s_vîsi⁄
 ();

872 
NCURSES_EXPORT
(Ë
assume_deÁu…_cﬁ‹s
 (, );

873 
NCURSES_EXPORT
(Ë
deföe_key
 (const *, );

874 
NCURSES_EXPORT
(Ë
gë_escdñay
 ();

875 
NCURSES_EXPORT
(Ë
key_deföed
 (const *);

876 
NCURSES_EXPORT
(Ë
keyok
 (, 
boﬁ
);

877 
NCURSES_EXPORT
(Ë
ªsize_ãrm
 (, );

878 
NCURSES_EXPORT
(Ë
ªsizëîm
 (, );

879 
NCURSES_EXPORT
(Ë
£t_escdñay
 ();

880 
NCURSES_EXPORT
(Ë
£t_èbsize
 ();

881 
NCURSES_EXPORT
(Ë
u£_deÁu…_cﬁ‹s
 ();

882 
NCURSES_EXPORT
(Ë
u£_exãnded_«mes
 (
boﬁ
);

883 
NCURSES_EXPORT
(Ë
u£_Àgacy_codög
 ();

884 
NCURSES_EXPORT
(Ë
u£_s¸ìn
 (
SCREEN
 *, 
NCURSES_SCREEN_CB
, *);

885 
NCURSES_EXPORT
(Ë
u£_wödow
 (
WINDOW
 *, 
NCURSES_WINDOW_CB
, *);

886 
NCURSES_EXPORT
(Ë
wªsize
 (
WINDOW
 *, , );

887 
NCURSES_EXPORT
(Ë
nofûãr
();

893 
NCURSES_EXPORT
(
WINDOW
 *Ë
wgë∑ª¡
 (const WINDOW *);

894 
NCURSES_EXPORT
(
boﬁ
Ë
is_˛óªd
 (c⁄° 
WINDOW
 *);

895 
NCURSES_EXPORT
(
boﬁ
Ë
is_idcok
 (c⁄° 
WINDOW
 *);

896 
NCURSES_EXPORT
(
boﬁ
Ë
is_idlok
 (c⁄° 
WINDOW
 *);

897 
NCURSES_EXPORT
(
boﬁ
Ë
is_immedok
 (c⁄° 
WINDOW
 *);

898 
NCURSES_EXPORT
(
boﬁ
Ë
is_key∑d
 (c⁄° 
WINDOW
 *);

899 
NCURSES_EXPORT
(
boﬁ
Ë
is_Àaveok
 (c⁄° 
WINDOW
 *);

900 
NCURSES_EXPORT
(
boﬁ
Ë
is_nodñay
 (c⁄° 
WINDOW
 *);

901 
NCURSES_EXPORT
(
boﬁ
Ë
is_nŸimeout
 (c⁄° 
WINDOW
 *);

902 
NCURSES_EXPORT
(
boﬁ
Ë
is_∑d
 (c⁄° 
WINDOW
 *);

903 
NCURSES_EXPORT
(
boﬁ
Ë
is_s¸ﬁlok
 (c⁄° 
WINDOW
 *);

904 
NCURSES_EXPORT
(
boﬁ
Ë
is_subwö
 (c⁄° 
WINDOW
 *);

905 
NCURSES_EXPORT
(
boﬁ
Ë
is_syncok
 (c⁄° 
WINDOW
 *);

906 
NCURSES_EXPORT
(Ë
wgës¸ªg
 (c⁄° 
WINDOW
 *, *, *);

909 
	#cur£s_vîsi⁄
(Ë
NCURSES_VERSION


	)

917 #unde‡
NCURSES_SP_FUNCS


918 
	#NCURSES_SP_FUNCS
 20110404

	)

919 
	#NCURSES_SP_NAME
(
«me
Ë«me##
_•


	)

922 
	#NCURSES_SP_OUTC
 
	`NCURSES_SP_NAME
(
NCURSES_OUTC
)

	)

923 (*
	gNCURSES_SP_OUTC
)(
	tSCREEN
*, );

925 
NCURSES_EXPORT
(
SCREEN
 *Ë
√w_¥es¸
 ();

927 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
baudøã
Ë(
SCREEN
*);

928 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
bìp
Ë(
SCREEN
*);

929 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
ˇn_ch™ge_cﬁ‹
Ë(
SCREEN
*);

930 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
cbªak
Ë(
SCREEN
*);

931 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
curs_£t
Ë(
SCREEN
*, );

932 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
cﬁ‹_c⁄ã¡
Ë(
SCREEN
*, , *, *, *);

933 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
def_¥og_mode
Ë(
SCREEN
*);

934 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
def_shñl_mode
Ë(
SCREEN
*);

935 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
dñay_ouçut
Ë(
SCREEN
*, );

936 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
doupd©e
Ë(
SCREEN
*);

937 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
echo
Ë(
SCREEN
*);

938 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ídwö
Ë(
SCREEN
*);

939 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
îa£ch¨
Ë(
SCREEN
*);

940 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
fûãr
Ë(
SCREEN
*);

941 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
Êash
Ë(
SCREEN
*);

942 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
Êushöp
Ë(
SCREEN
*);

943 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
gëwö
Ë(
SCREEN
*, 
FILE
 *);

944 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
hÆfdñay
Ë(
SCREEN
*, );

945 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_cﬁ‹s
Ë(
SCREEN
*);

946 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_ic
Ë(
SCREEN
*);

947 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_û
Ë(
SCREEN
*);

948 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_cﬁ‹
Ë(
SCREEN
*, , , , );

949 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_∑ú
Ë(
SCREEN
*, , , );

950 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öåÊush
Ë(
SCREEN
*, 
WINDOW
*, 
boﬁ
);

951 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
i£ndwö
Ë(
SCREEN
*);

952 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
NCURSES_SP_NAME
(
key«me
Ë(
SCREEN
*, );

953 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
kûlch¨
Ë(
SCREEN
*);

954 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
l⁄g«me
Ë(
SCREEN
*);

955 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
mvcur
Ë(
SCREEN
*, , , , );

956 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
«pms
Ë(
SCREEN
*, );

957 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
√w∑d
Ë(
SCREEN
*, , );

958 
NCURSES_EXPORT
(
SCREEN
 *Ë
NCURSES_SP_NAME
(
√wãrm
Ë(SCREEN*, 
NCURSES_CONST
 *, 
FILE
 *, FILE *);

959 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
√wwö
Ë(
SCREEN
*, , , , );

960 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
∆
Ë(
SCREEN
*);

961 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
nocbªak
Ë(
SCREEN
*);

962 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n€cho
Ë(
SCREEN
*);

963 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n⁄l
Ë(
SCREEN
*);

964 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
noqiÊush
Ë(
SCREEN
*);

965 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n‹aw
Ë(
SCREEN
*);

966 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
∑ú_c⁄ã¡
Ë(
SCREEN
*, , *, *);

967 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
qiÊush
Ë(
SCREEN
*);

968 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
øw
Ë(
SCREEN
*);

969 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£t_¥og_mode
Ë(
SCREEN
*);

970 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£t_shñl_mode
Ë(
SCREEN
*);

971 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£ây
Ë(
SCREEN
*);

972 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
rùofÊöe
Ë(
SCREEN
*, , (*)(
WINDOW
 *, ));

973 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ßvëty
Ë(
SCREEN
*);

974 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_öô
Ë(
SCREEN
*, const *);

975 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_ª°‹e
Ë(
SCREEN
*, const *);

976 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_£t
Ë(
SCREEN
*, const *);

977 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©åoff
Ë(
SCREEN
*, c⁄° 
chty≥
);

978 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å⁄
Ë(
SCREEN
*, c⁄° 
chty≥
);

979 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å£t
Ë(
SCREEN
*, c⁄° 
chty≥
);

980 
NCURSES_EXPORT
(
©å_t
Ë
NCURSES_SP_NAME
(
¶k_©å
Ë(
SCREEN
*);

981 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å_£t
Ë(
SCREEN
*, c⁄° 
©å_t
, , *);

982 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_˛ór
Ë(
SCREEN
*);

983 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_cﬁ‹
Ë(
SCREEN
*, );

984 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_öô
Ë(
SCREEN
*, );

985 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
¶k_œbñ
Ë(
SCREEN
*, );

986 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_nouåe‰esh
Ë(
SCREEN
*);

987 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_ª‰esh
Ë(
SCREEN
*);

988 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_ª°‹e
Ë(
SCREEN
*);

989 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_£t
Ë(
SCREEN
*, , const *, );

990 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_touch
Ë(
SCREEN
*);

991 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
°¨t_cﬁ‹
Ë(
SCREEN
*);

992 
NCURSES_EXPORT
(
chty≥
Ë
NCURSES_SP_NAME
(
ãrm©ås
Ë(
SCREEN
*);

993 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
ãrm«me
Ë(
SCREEN
*);

994 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ty≥ahód
Ë(
SCREEN
*, );

995 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungëch
Ë(
SCREEN
*, );

996 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_ív
Ë(
SCREEN
*, 
boﬁ
);

997 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vid©å
Ë(
SCREEN
*, 
chty≥
);

998 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vidputs
Ë(
SCREEN
*, 
chty≥
, 
NCURSES_SP_OUTC
);

1000 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
keybound
Ë(
SCREEN
*, , );

1001 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
assume_deÁu…_cﬁ‹s
Ë(
SCREEN
*, , );

1002 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
deföe_key
Ë(
SCREEN
*, const *, );

1003 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
gë_escdñay
Ë(
SCREEN
*);

1004 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
is_ãrm_ªsized
Ë(
SCREEN
*, , );

1005 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
key_deföed
Ë(
SCREEN
*, const *);

1006 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
keyok
Ë(
SCREEN
*, , 
boﬁ
);

1007 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
nofûãr
Ë(
SCREEN
*);

1008 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ªsize_ãrm
Ë(
SCREEN
*, , );

1009 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ªsizëîm
Ë(
SCREEN
*, , );

1010 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
£t_escdñay
Ë(
SCREEN
*, );

1011 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
£t_èbsize
Ë(
SCREEN
*, );

1012 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_deÁu…_cﬁ‹s
Ë(
SCREEN
*);

1013 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_Àgacy_codög
Ë(
SCREEN
*, );

1016 #unde‡
NCURSES_SP_FUNCS


1017 
	#NCURSES_SP_FUNCS
 0

	)

1018 
	#NCURSES_SP_NAME
(
«me
Ë
	)
name

1019 
	#NCURSES_SP_OUTC
 
NCURSES_OUTC


	)

1024 
	#NCURSES_ATTR_SHIFT
 8

	)

1025 
	#NCURSES_BITS
(
mask
,
shi·
Ë((maskË<< ((shi·Ë+ 
NCURSES_ATTR_SHIFT
))

	)

1027 
	#A_NORMAL
 (1UL - 1UL)

	)

1028 
	#A_ATTRIBUTES
 
	`NCURSES_BITS
(~(1UL - 1UL),0)

	)

1029 
	#A_CHARTEXT
 (
	`NCURSES_BITS
(1UL,0Ë- 1UL)

	)

1030 
	#A_COLOR
 
	`NCURSES_BITS
(((1ULË<< 8Ë- 1UL,0)

	)

1031 
	#A_STANDOUT
 
	`NCURSES_BITS
(1UL,8)

	)

1032 
	#A_UNDERLINE
 
	`NCURSES_BITS
(1UL,9)

	)

1033 
	#A_REVERSE
 
	`NCURSES_BITS
(1UL,10)

	)

1034 
	#A_BLINK
 
	`NCURSES_BITS
(1UL,11)

	)

1035 
	#A_DIM
 
	`NCURSES_BITS
(1UL,12)

	)

1036 
	#A_BOLD
 
	`NCURSES_BITS
(1UL,13)

	)

1037 
	#A_ALTCHARSET
 
	`NCURSES_BITS
(1UL,14)

	)

1038 
	#A_INVIS
 
	`NCURSES_BITS
(1UL,15)

	)

1039 
	#A_PROTECT
 
	`NCURSES_BITS
(1UL,16)

	)

1040 
	#A_HORIZONTAL
 
	`NCURSES_BITS
(1UL,17)

	)

1041 
	#A_LEFT
 
	`NCURSES_BITS
(1UL,18)

	)

1042 
	#A_LOW
 
	`NCURSES_BITS
(1UL,19)

	)

1043 
	#A_RIGHT
 
	`NCURSES_BITS
(1UL,20)

	)

1044 
	#A_TOP
 
	`NCURSES_BITS
(1UL,21)

	)

1045 
	#A_VERTICAL
 
	`NCURSES_BITS
(1UL,22)

	)

1057 
	#gëyx
(
wö
,
y
,
x
Ë(y = 
	`gëcury
(wö), x = 
	`gëcurx
(wö))

	)

1058 
	#gëbegyx
(
wö
,
y
,
x
Ë(y = 
	`gëbegy
(wö), x = 
	`gëbegx
(wö))

	)

1059 
	#gëmaxyx
(
wö
,
y
,
x
Ë(y = 
	`gëmaxy
(wö), x = 
	`gëmaxx
(wö))

	)

1060 
	#gë∑ryx
(
wö
,
y
,
x
Ë(y = 
	`gë∑ry
(wö), x = 
	`gë∑rx
(wö))

	)

1062 
	#gësyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

1063 i‡(
	`is_Àaveok
(
√ws¸
)) \

1064 (
y
Ë(
x
) = -1; \

1066 
	`gëyx
(
√ws¸
,(
y
), (
x
)); \

1068 } 0)

	)

1070 
	#£tsyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

1071 i‡((
y
Ë=-1 && (
x
) == -1) \

1072 
	`Àaveok
(
√ws¸
, 
TRUE
); \

1074 
	`Àaveok
(
√ws¸
, 
FALSE
); \

1075 
	`wmove
(
√ws¸
, (
y
), (
x
)); \

1078 } 0)

	)

1080 #i‚de‡
NCURSES_NOMACROS


1086 
	#wgë°r
(
w
, 
s
Ë
	`wgën°r
(w, s, -1)

	)

1087 
	#gën°r
(
s
, 
n
Ë
	`wgën°r
(
°ds¸
, s,Ç)

	)

1089 
	#£âîm
(
ãrm
Ë
	`£tu±îm
—îm, 1, (*)0)

	)

1091 
	#fixãrm
(Ë
	`ª£t_¥og_mode
()

	)

1092 
	#ª£âîm
(Ë
	`ª£t_shñl_mode
()

	)

1093 
	#ßvëîm
(Ë
	`def_¥og_mode
()

	)

1094 
	#¸mode
(Ë
	`cbªak
()

	)

1095 
	#no¸mode
(Ë
	`nocbªak
()

	)

1096 
	#gëtmode
()

	)

1099 #i‡!
NCURSES_OPAQUE


1100 
	#gë©ås
(
wö
Ë
	`NCURSES_CAST
(, (wöË? (wö)->
_©ås
 : 
A_NORMAL
)

	)

1101 
	#gëcurx
(
wö
Ë((wöË? (wö)->
_curx
 : 
ERR
)

	)

1102 
	#gëcury
(
wö
Ë((wöË? (wö)->
_cury
 : 
ERR
)

	)

1103 
	#gëbegx
(
wö
Ë((wöË? (wö)->
_begx
 : 
ERR
)

	)

1104 
	#gëbegy
(
wö
Ë((wöË? (wö)->
_begy
 : 
ERR
)

	)

1105 
	#gëmaxx
(
wö
Ë((wöË? ((wö)->
_maxx
 + 1Ë: 
ERR
)

	)

1106 
	#gëmaxy
(
wö
Ë((wöË? ((wö)->
_maxy
 + 1Ë: 
ERR
)

	)

1107 
	#gë∑rx
(
wö
Ë((wöË? (wö)->
_∑rx
 : 
ERR
)

	)

1108 
	#gë∑ry
(
wö
Ë((wöË? (wö)->
_∑ry
 : 
ERR
)

	)

1111 
	#w°™dout
(
wö
Ë(
	`w©å£t
(wö,
A_STANDOUT
))

	)

1112 
	#w°™díd
(
wö
Ë(
	`w©å£t
(wö,
A_NORMAL
))

	)

1114 
	#w©å⁄
(
wö
,
©
Ë
	`w©å_⁄
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

1115 
	#w©åoff
(
wö
,
©
Ë
	`w©å_off
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

1117 #i‡!
NCURSES_OPAQUE


1118 #i‡
deföed
(
NCURSES_WIDECHAR
) && 0

1119 
	#w©å£t
(
wö
,
©
) ((win) \

1120 ? ((
wö
)->
_cﬁ‹
 = 
	`PAIR_NUMBER
(
©
), \

1121 (
wö
)->
_©ås
 = 
	`NCURSES_CAST
(
©å_t
, 
©
), \

1122 
OK
) \

1123 : 
ERR
)

	)

1125 
	#w©å£t
(
wö
,
©
) ((win) \

1126 ? ((
wö
)->
_©ås
 = 
	`NCURSES_CAST
(
©å_t
, 
©
), \

1127 
OK
) \

1128 : 
ERR
)

	)

1132 
	#s¸ﬁl
(
wö
Ë
	`ws¸l
(wö,1)

	)

1134 
	#touchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 1)

	)

1135 
	#touchlöe
(
wö
, 
s
, 
c
Ë
	`wtouch 
((wö), s, c, 1)

	)

1136 
	#u¡ouchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 0)

	)

1138 
	#box
(
wö
, 
v
, 
h
Ë
	`wb‹dî
(wö, v, v, h, h, 0, 0, 0, 0)

	)

1139 
	#b‹dî
(
ls
, 
rs
, 
ts
, 
bs
, 
é
, 
å
, 
bl
, 
br
Ë
	`wb‹dî
(
°ds¸
,Üs,Ñs,Ås, bs,Ål,År, bl, br)

	)

1140 
	#hlöe
(
ch
, 
n
Ë
	`whlöe
(
°ds¸
, ch,Ç)

	)

1141 
	#vlöe
(
ch
, 
n
Ë
	`wvlöe
(
°ds¸
, ch,Ç)

	)

1143 
	#wö°r
(
w
, 
s
Ë
	`wön°r
(w, s, -1)

	)

1144 
	#wöch°r
(
w
, 
s
Ë
	`wöchn°r
(w, s, -1)

	)

1145 
	#wös°r
(
w
, 
s
Ë
	`wö¢°r
(w, s, -1)

	)

1147 #i‡!
NCURSES_OPAQUE


1148 
	#ªdøwwö
(
wö
Ë
	`wªdøw 
(wö, 0, (wö)->
_maxy
+1)

	)

1151 
	#wadd°r
(
wö
,
°r
Ë
	`waddn°r
(wö,°r,-1)

	)

1152 
	#waddch°r
(
wö
,
°r
Ë
	`waddchn°r
(wö,°r,-1)

	)

1157 
	#COLOR_PAIR
(
n
Ë
	`NCURSES_BITS
“, 0)

	)

1158 
	#PAIR_NUMBER
(
a
Ë(
	`NCURSES_CAST
(,((NCURSES_CAST(,aË& 
A_COLOR
Ë>> 
NCURSES_ATTR_SHIFT
)))

	)

1164 
	#addch
(
ch
Ë
	`waddch
(
°ds¸
,ch)

	)

1165 
	#addchn°r
(
°r
,
n
Ë
	`waddchn°r
(
°ds¸
,°r,n)

	)

1166 
	#addch°r
(
°r
Ë
	`waddch°r
(
°ds¸
,°r)

	)

1167 
	#addn°r
(
°r
,
n
Ë
	`waddn°r
(
°ds¸
,°r,n)

	)

1168 
	#add°r
(
°r
Ë
	`waddn°r
(
°ds¸
,°r,-1)

	)

1169 
	#©åoff
(
©
Ë
	`w©åoff
(
°ds¸
,©)

	)

1170 
	#©å⁄
(
©
Ë
	`w©å⁄
(
°ds¸
,©)

	)

1171 
	#©å£t
(
©
Ë
	`w©å£t
(
°ds¸
,©)

	)

1172 
	#©å_gë
(
≠
,
˝
,
o
Ë
	`w©å_gë
(
°ds¸
,≠,˝,o)

	)

1173 
	#©å_off
(
a
,
o
Ë
	`w©å_off
(
°ds¸
,a,o)

	)

1174 
	#©å_⁄
(
a
,
o
Ë
	`w©å_⁄
(
°ds¸
,a,o)

	)

1175 
	#©å_£t
(
a
,
c
,
o
Ë
	`w©å_£t
(
°ds¸
,a,c,o)

	)

1176 
	#bkgd
(
ch
Ë
	`wbkgd
(
°ds¸
,ch)

	)

1177 
	#bkgd£t
(
ch
Ë
	`wbkgd£t
(
°ds¸
,ch)

	)

1178 
	#chg©
(
n
,
a
,
c
,
o
Ë
	`wchg©
(
°ds¸
,n,a,c,o)

	)

1179 
	#˛ór
(Ë
	`w˛ór
(
°ds¸
)

	)

1180 
	#˛πobŸ
(Ë
	`w˛πobŸ
(
°ds¸
)

	)

1181 
	#˛π€ﬁ
(Ë
	`w˛π€ﬁ
(
°ds¸
)

	)

1182 
	#cﬁ‹_£t
(
c
,
o
Ë
	`wcﬁ‹_£t
(
°ds¸
,c,o)

	)

1183 
	#dñch
(Ë
	`wdñch
(
°ds¸
)

	)

1184 
	#dñëñn
(Ë
	`wösdñ 
(
°ds¸
,-1)

	)

1185 
	#echoch¨
(
c
Ë
	`wechoch¨
(
°ds¸
,c)

	)

1186 
	#îa£
(Ë
	`wîa£
(
°ds¸
)

	)

1187 
	#gëch
(Ë
	`wgëch
(
°ds¸
)

	)

1188 
	#gë°r
(
°r
Ë
	`wgë°r
(
°ds¸
,°r)

	)

1189 
	#öch
(Ë
	`wöch
(
°ds¸
)

	)

1190 
	#öchn°r
(
s
,
n
Ë
	`wöchn°r
(
°ds¸
,s,n)

	)

1191 
	#öch°r
(
s
Ë
	`wöch°r
(
°ds¸
,s)

	)

1192 
	#ön°r
(
s
,
n
Ë
	`wön°r
(
°ds¸
,s,n)

	)

1193 
	#ösch
(
c
Ë
	`wösch
(
°ds¸
,c)

	)

1194 
	#ösdñ 
(
n
Ë
	`wösdñ 
(
°ds¸
,n)

	)

1195 
	#ö£π 
(Ë
	`wösdñ 
(
°ds¸
,1)

	)

1196 
	#ö¢°r
(
s
,
n
Ë
	`wö¢°r
(
°ds¸
,s,n)

	)

1197 
	#ös°r
(
s
Ë
	`wös°r
(
°ds¸
,s)

	)

1198 
	#ö°r
(
s
Ë
	`wö°r
(
°ds¸
,s)

	)

1199 
	#move
(
y
,
x
Ë
	`wmove
(
°ds¸
,y,x)

	)

1200 
	#ª‰esh
(Ë
	`wª‰esh
(
°ds¸
)

	)

1201 
	#s¸l
(
n
Ë
	`ws¸l
(
°ds¸
,n)

	)

1202 
	#£ts¸ªg
(
t
,
b
Ë
	`w£ts¸ªg
(
°ds¸
,t,b)

	)

1203 
	#°™díd
(Ë
	`w°™díd
(
°ds¸
)

	)

1204 
	#°™dout
(Ë
	`w°™dout
(
°ds¸
)

	)

1205 
	#timeout
(
dñay
Ë
	`wtimeout
(
°ds¸
,dñay)

	)

1206 
	#wdñëñn
(
wö
Ë
	`wösdñ 
(wö,-1)

	)

1207 
	#wö£π 
(
wö
Ë
	`wösdñ 
(wö,1)

	)

1213 
	#mvwaddch
(
wö
,
y
,
x
,
ch
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddch
(wö,ch))

	)

1214 
	#mvwaddchn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,n))

	)

1215 
	#mvwaddch°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,-1))

	)

1216 
	#mvwaddn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,n))

	)

1217 
	#mvwadd°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,-1))

	)

1218 
	#mvwdñch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wdñch
(wö))

	)

1219 
	#mvwchg©
(
wö
,
y
,
x
,
n
,
a
,
c
,
o
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wchg©
(wö,n,a,c,o))

	)

1220 
	#mvwgëch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgëch
(wö))

	)

1221 
	#mvwgën°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgën°r
(wö,°r,n))

	)

1222 
	#mvwgë°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë°r
(wö,°r))

	)

1223 
	#mvwhlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`whlöe
(wö,c,n))

	)

1224 
	#mvwöch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? 
	`NCURSES_CAST
(
chty≥
, ERRË: 
	`wöch
(wö))

	)

1225 
	#mvwöchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöchn°r
(wö,s,n))

	)

1226 
	#mvwöch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöch°r
(wö,s))

	)

1227 
	#mvwön°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wön°r
(wö,s,n))

	)

1228 
	#mvwösch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wösch
(wö,c))

	)

1229 
	#mvwö¢°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö¢°r
(wö,s,n))

	)

1230 
	#mvwös°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös°r
(wö,s))

	)

1231 
	#mvwö°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö°r
(wö,s))

	)

1232 
	#mvwvlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wvlöe
(wö,c,n))

	)

1234 
	#mvaddch
(
y
,
x
,
ch
Ë
	`mvwaddch
(
°ds¸
,y,x,ch)

	)

1235 
	#mvaddchn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddchn°r
(
°ds¸
,y,x,°r,n)

	)

1236 
	#mvaddch°r
(
y
,
x
,
°r
Ë
	`mvwaddch°r
(
°ds¸
,y,x,°r)

	)

1237 
	#mvaddn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddn°r
(
°ds¸
,y,x,°r,n)

	)

1238 
	#mvadd°r
(
y
,
x
,
°r
Ë
	`mvwadd°r
(
°ds¸
,y,x,°r)

	)

1239 
	#mvchg©
(
y
,
x
,
n
,
a
,
c
,
o
Ë
	`mvwchg©
(
°ds¸
,y,x,n,a,c,o)

	)

1240 
	#mvdñch
(
y
,
x
Ë
	`mvwdñch
(
°ds¸
,y,x)

	)

1241 
	#mvgëch
(
y
,
x
Ë
	`mvwgëch
(
°ds¸
,y,x)

	)

1242 
	#mvgën°r
(
y
,
x
,
°r
,
n
Ë
	`mvwgën°r
(
°ds¸
,y,x,°r,n)

	)

1243 
	#mvgë°r
(
y
,
x
,
°r
Ë
	`mvwgë°r
(
°ds¸
,y,x,°r)

	)

1244 
	#mvhlöe
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe
(
°ds¸
,y,x,c,n)

	)

1245 
	#mvöch
(
y
,
x
Ë
	`mvwöch
(
°ds¸
,y,x)

	)

1246 
	#mvöchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwöchn°r
(
°ds¸
,y,x,s,n)

	)

1247 
	#mvöch°r
(
y
,
x
,
s
Ë
	`mvwöch°r
(
°ds¸
,y,x,s)

	)

1248 
	#mvön°r
(
y
,
x
,
s
,
n
Ë
	`mvwön°r
(
°ds¸
,y,x,s,n)

	)

1249 
	#mvösch
(
y
,
x
,
c
Ë
	`mvwösch
(
°ds¸
,y,x,c)

	)

1250 
	#mvö¢°r
(
y
,
x
,
s
,
n
Ë
	`mvwö¢°r
(
°ds¸
,y,x,s,n)

	)

1251 
	#mvös°r
(
y
,
x
,
s
Ë
	`mvwös°r
(
°ds¸
,y,x,s)

	)

1252 
	#mvö°r
(
y
,
x
,
s
Ë
	`mvwö°r
(
°ds¸
,y,x,s)

	)

1253 
	#mvvlöe
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe
(
°ds¸
,y,x,c,n)

	)

1258 #i‡!
NCURSES_OPAQUE


1259 
	#gëbkgd
(
wö
Ë((wö)->
_bkgd
)

	)

1262 
	#¶k_©å_off
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©åoff
◊))

	)

1263 
	#¶k_©å_⁄
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©å⁄
◊))

	)

1265 #i‡!
NCURSES_OPAQUE


1266 #i‡
deföed
(
NCURSES_WIDECHAR
) && 0

1267 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = (◊Ë& ~
A_COLOR
), \

1268 (
wö
)->
_cﬁ‹
 = (
p
), \

1269 
OK
)

	)

1270 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!(*)0 && (*◊Ë(wö)->
_©ås
)), \

1271 ()((
p
Ë!(*)0 && (*’Ë()(
wö
)->
_cﬁ‹
)), \

1272 
OK
)

	)

1274 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = ((◊Ë& ~
A_COLOR
Ë| (
©å_t
)
	`COLOR_PAIR
’)), 
OK
)

	)

1275 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!(*)0 && (*◊Ë(wö)->
_©ås
)), \

1276 ()((
p
Ë!(*)0 && (*’Ë()
	`PAIR_NUMBER
((
wö
)->
_©ås
))), \

1277 
OK
)

	)

1287 
	#vw_¥ötw
 
vw¥ötw


	)

1288 
	#vw_sˇnw
 
vwsˇnw


	)

1294 
	#vssˇnf
(
a
,
b
,
c
Ë
	`_nc_vssˇnf
◊,b,c)

	)

1295 
NCURSES_EXPORT
(Ë
vssˇnf
(c⁄° *, c⁄° *, 
va_li°
);

1302 #i‡!
NCURSES_OPAQUE


1303 
	#is_˛óªd
(
wö
Ë((wöË? (wö)->
_˛ór
 : 
FALSE
)

	)

1304 
	#is_idcok
(
wö
Ë((wöË? (wö)->
_idcok
 : 
FALSE
)

	)

1305 
	#is_idlok
(
wö
Ë((wöË? (wö)->
_idlok
 : 
FALSE
)

	)

1306 
	#is_immedok
(
wö
Ë((wöË? (wö)->
_immed
 : 
FALSE
)

	)

1307 
	#is_key∑d
(
wö
Ë((wöË? (wö)->
_u£_key∑d
 : 
FALSE
)

	)

1308 
	#is_Àaveok
(
wö
Ë((wöË? (wö)->
_Àaveok
 : 
FALSE
)

	)

1309 
	#is_nodñay
(
wö
Ë((wöË? ((wö)->
_dñay
 =0Ë: 
FALSE
)

	)

1310 
	#is_nŸimeout
(
wö
Ë((wöË? (wö)->
_nŸimeout
 : 
FALSE
)

	)

1311 
	#is_∑d
(
wö
Ë((wöË? ((wö)->
_Êags
 & 
_ISPAD
Ë!0 : 
FALSE
)

	)

1312 
	#is_s¸ﬁlok
(
wö
Ë((wöË? (wö)->
_s¸ﬁl
 : 
FALSE
)

	)

1313 
	#is_subwö
(
wö
Ë((wöË? ((wö)->
_Êags
 & 
_SUBWIN
Ë!0 : 
FALSE
)

	)

1314 
	#is_syncok
(
wö
Ë((wöË? (wö)->
_sync
 : 
FALSE
)

	)

1315 
	#wgë∑ª¡
(
wö
Ë((wöË? (wö)->
_∑ª¡
 : 0)

	)

1316 
	#wgës¸ªg
(
wö
,
t
,
b
Ë((wöË? (*—Ë(wö)->
_ªgt›
, *(bË(wö)->
_ªgbŸtom
, 
OK
Ë: 
ERR
)

	)

1330 #i‡
NCURSES_REENTRANT


1332 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
curs¸
);

1333 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
√ws¸
);

1334 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
°ds¸
);

1335 
NCURSES_WRAPPED_VAR
(*, 
âyty≥
);

1336 
NCURSES_WRAPPED_VAR
(, 
COLORS
);

1337 
NCURSES_WRAPPED_VAR
(, 
COLOR_PAIRS
);

1338 
NCURSES_WRAPPED_VAR
(, 
COLS
);

1339 
NCURSES_WRAPPED_VAR
(, 
ESCDELAY
);

1340 
NCURSES_WRAPPED_VAR
(, 
LINES
);

1341 
NCURSES_WRAPPED_VAR
(, 
TABSIZE
);

1343 
	#curs¸
 
	`NCURSES_PUBLIC_VAR
(
	`curs¸
())

	)

1344 
	#√ws¸
 
	`NCURSES_PUBLIC_VAR
(
	`√ws¸
())

	)

1345 
	#°ds¸
 
	`NCURSES_PUBLIC_VAR
(
	`°ds¸
())

	)

1346 
	#âyty≥
 
	`NCURSES_PUBLIC_VAR
(
	`âyty≥
())

	)

1347 
	#COLORS
 
	`NCURSES_PUBLIC_VAR
(
	`COLORS
())

	)

1348 
	#COLOR_PAIRS
 
	`NCURSES_PUBLIC_VAR
(
	`COLOR_PAIRS
())

	)

1349 
	#COLS
 
	`NCURSES_PUBLIC_VAR
(
	`COLS
())

	)

1350 
	#ESCDELAY
 
	`NCURSES_PUBLIC_VAR
(
	`ESCDELAY
())

	)

1351 
	#LINES
 
	`NCURSES_PUBLIC_VAR
(
	`LINES
())

	)

1352 
	#TABSIZE
 
	`NCURSES_PUBLIC_VAR
(
	`TABSIZE
())

	)

1356 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
curs¸
;

1357 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
√ws¸
;

1358 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
°ds¸
;

1359 
NCURSES_EXPORT_VAR
(Ë
âyty≥
[];

1360 
NCURSES_EXPORT_VAR
(Ë
COLORS
;

1361 
NCURSES_EXPORT_VAR
(Ë
COLOR_PAIRS
;

1362 
NCURSES_EXPORT_VAR
(Ë
COLS
;

1363 
NCURSES_EXPORT_VAR
(Ë
ESCDELAY
;

1364 
NCURSES_EXPORT_VAR
(Ë
LINES
;

1365 
NCURSES_EXPORT_VAR
(Ë
TABSIZE
;

1381 
	#KEY_CODE_YES
 0400

	)

1382 
	#KEY_MIN
 0401

	)

1383 
	#KEY_BREAK
 0401

	)

1384 
	#KEY_SRESET
 0530

	)

1385 
	#KEY_RESET
 0531

	)

1389 
	#KEY_DOWN
 0402

	)

1390 
	#KEY_UP
 0403

	)

1391 
	#KEY_LEFT
 0404

	)

1392 
	#KEY_RIGHT
 0405

	)

1393 
	#KEY_HOME
 0406

	)

1394 
	#KEY_BACKSPACE
 0407

	)

1395 
	#KEY_F0
 0410

	)

1396 
	#KEY_F
(
n
Ë(
KEY_F0
+“)Ë

	)

1397 
	#KEY_DL
 0510

	)

1398 
	#KEY_IL
 0511

	)

1399 
	#KEY_DC
 0512

	)

1400 
	#KEY_IC
 0513

	)

1401 
	#KEY_EIC
 0514

	)

1402 
	#KEY_CLEAR
 0515

	)

1403 
	#KEY_EOS
 0516

	)

1404 
	#KEY_EOL
 0517

	)

1405 
	#KEY_SF
 0520

	)

1406 
	#KEY_SR
 0521

	)

1407 
	#KEY_NPAGE
 0522

	)

1408 
	#KEY_PPAGE
 0523

	)

1409 
	#KEY_STAB
 0524

	)

1410 
	#KEY_CTAB
 0525

	)

1411 
	#KEY_CATAB
 0526

	)

1412 
	#KEY_ENTER
 0527

	)

1413 
	#KEY_PRINT
 0532

	)

1414 
	#KEY_LL
 0533

	)

1415 
	#KEY_A1
 0534

	)

1416 
	#KEY_A3
 0535

	)

1417 
	#KEY_B2
 0536

	)

1418 
	#KEY_C1
 0537

	)

1419 
	#KEY_C3
 0540

	)

1420 
	#KEY_BTAB
 0541

	)

1421 
	#KEY_BEG
 0542

	)

1422 
	#KEY_CANCEL
 0543

	)

1423 
	#KEY_CLOSE
 0544

	)

1424 
	#KEY_COMMAND
 0545

	)

1425 
	#KEY_COPY
 0546

	)

1426 
	#KEY_CREATE
 0547

	)

1427 
	#KEY_END
 0550

	)

1428 
	#KEY_EXIT
 0551

	)

1429 
	#KEY_FIND
 0552

	)

1430 
	#KEY_HELP
 0553

	)

1431 
	#KEY_MARK
 0554

	)

1432 
	#KEY_MESSAGE
 0555

	)

1433 
	#KEY_MOVE
 0556

	)

1434 
	#KEY_NEXT
 0557

	)

1435 
	#KEY_OPEN
 0560

	)

1436 
	#KEY_OPTIONS
 0561

	)

1437 
	#KEY_PREVIOUS
 0562

	)

1438 
	#KEY_REDO
 0563

	)

1439 
	#KEY_REFERENCE
 0564

	)

1440 
	#KEY_REFRESH
 0565

	)

1441 
	#KEY_REPLACE
 0566

	)

1442 
	#KEY_RESTART
 0567

	)

1443 
	#KEY_RESUME
 0570

	)

1444 
	#KEY_SAVE
 0571

	)

1445 
	#KEY_SBEG
 0572

	)

1446 
	#KEY_SCANCEL
 0573

	)

1447 
	#KEY_SCOMMAND
 0574

	)

1448 
	#KEY_SCOPY
 0575

	)

1449 
	#KEY_SCREATE
 0576

	)

1450 
	#KEY_SDC
 0577

	)

1451 
	#KEY_SDL
 0600

	)

1452 
	#KEY_SELECT
 0601

	)

1453 
	#KEY_SEND
 0602

	)

1454 
	#KEY_SEOL
 0603

	)

1455 
	#KEY_SEXIT
 0604

	)

1456 
	#KEY_SFIND
 0605

	)

1457 
	#KEY_SHELP
 0606

	)

1458 
	#KEY_SHOME
 0607

	)

1459 
	#KEY_SIC
 0610

	)

1460 
	#KEY_SLEFT
 0611

	)

1461 
	#KEY_SMESSAGE
 0612

	)

1462 
	#KEY_SMOVE
 0613

	)

1463 
	#KEY_SNEXT
 0614

	)

1464 
	#KEY_SOPTIONS
 0615

	)

1465 
	#KEY_SPREVIOUS
 0616

	)

1466 
	#KEY_SPRINT
 0617

	)

1467 
	#KEY_SREDO
 0620

	)

1468 
	#KEY_SREPLACE
 0621

	)

1469 
	#KEY_SRIGHT
 0622

	)

1470 
	#KEY_SRSUME
 0623

	)

1471 
	#KEY_SSAVE
 0624

	)

1472 
	#KEY_SSUSPEND
 0625

	)

1473 
	#KEY_SUNDO
 0626

	)

1474 
	#KEY_SUSPEND
 0627

	)

1475 
	#KEY_UNDO
 0630

	)

1476 
	#KEY_MOUSE
 0631

	)

1477 
	#KEY_RESIZE
 0632

	)

1478 
	#KEY_EVENT
 0633

	)

1480 
	#KEY_MAX
 0777

	)

1490 #i‡
NCURSES_MOUSE_VERSION
 > 1

1491 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 5))

	)

1493 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 6))

	)

1496 
	#NCURSES_BUTTON_RELEASED
 001L

	)

1497 
	#NCURSES_BUTTON_PRESSED
 002L

	)

1498 
	#NCURSES_BUTTON_CLICKED
 004L

	)

1499 
	#NCURSES_DOUBLE_CLICKED
 010L

	)

1500 
	#NCURSES_TRIPLE_CLICKED
 020L

	)

1501 
	#NCURSES_RESERVED_EVENT
 040L

	)

1504 
	#BUTTON1_RELEASED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_RELEASED
)

	)

1505 
	#BUTTON1_PRESSED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_PRESSED
)

	)

1506 
	#BUTTON1_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_CLICKED
)

	)

1507 
	#BUTTON1_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_DOUBLE_CLICKED
)

	)

1508 
	#BUTTON1_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_TRIPLE_CLICKED
)

	)

1510 
	#BUTTON2_RELEASED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_RELEASED
)

	)

1511 
	#BUTTON2_PRESSED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_PRESSED
)

	)

1512 
	#BUTTON2_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_CLICKED
)

	)

1513 
	#BUTTON2_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_DOUBLE_CLICKED
)

	)

1514 
	#BUTTON2_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_TRIPLE_CLICKED
)

	)

1516 
	#BUTTON3_RELEASED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_RELEASED
)

	)

1517 
	#BUTTON3_PRESSED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_PRESSED
)

	)

1518 
	#BUTTON3_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_CLICKED
)

	)

1519 
	#BUTTON3_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_DOUBLE_CLICKED
)

	)

1520 
	#BUTTON3_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_TRIPLE_CLICKED
)

	)

1522 
	#BUTTON4_RELEASED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_RELEASED
)

	)

1523 
	#BUTTON4_PRESSED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_PRESSED
)

	)

1524 
	#BUTTON4_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_CLICKED
)

	)

1525 
	#BUTTON4_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_DOUBLE_CLICKED
)

	)

1526 
	#BUTTON4_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_TRIPLE_CLICKED
)

	)

1532 #i‡
NCURSES_MOUSE_VERSION
 > 1

1534 
	#BUTTON5_RELEASED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_RELEASED
)

	)

1535 
	#BUTTON5_PRESSED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_PRESSED
)

	)

1536 
	#BUTTON5_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_CLICKED
)

	)

1537 
	#BUTTON5_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_DOUBLE_CLICKED
)

	)

1538 
	#BUTTON5_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_TRIPLE_CLICKED
)

	)

1540 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(6, 0001L)

	)

1541 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(6, 0002L)

	)

1542 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(6, 0004L)

	)

1543 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(6, 0010L)

	)

1547 
	#BUTTON1_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_RESERVED_EVENT
)

	)

1548 
	#BUTTON2_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_RESERVED_EVENT
)

	)

1549 
	#BUTTON3_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_RESERVED_EVENT
)

	)

1550 
	#BUTTON4_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_RESERVED_EVENT
)

	)

1552 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(5, 0001L)

	)

1553 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(5, 0002L)

	)

1554 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(5, 0004L)

	)

1555 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(5, 0010L)

	)

1559 
	#ALL_MOUSE_EVENTS
 (
REPORT_MOUSE_POSITION
 - 1)

	)

1562 
	#BUTTON_RELEASE
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 001))

	)

1563 
	#BUTTON_PRESS
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 002))

	)

1564 
	#BUTTON_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 004))

	)

1565 
	#BUTTON_DOUBLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 010))

	)

1566 
	#BUTTON_TRIPLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 020))

	)

1567 
	#BUTTON_RESERVED_EVENT
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 040))

	)

1571 
	gid
;

1572 
	gx
, 
	gy
, 
	gz
;

1573 
mmask_t
 
	gb°©e
;

1575 
	tMEVENT
;

1577 
NCURSES_EXPORT
(
boﬁ
Ë
has_mou£
();

1578 
NCURSES_EXPORT
(Ë
gëmou£
 (
MEVENT
 *);

1579 
NCURSES_EXPORT
(Ë
ungëmou£
 (
MEVENT
 *);

1580 
NCURSES_EXPORT
(
mmask_t
Ë
mou£mask
 (mmask_t, mmask_t *);

1581 
NCURSES_EXPORT
(
boﬁ
Ë
wí˛o£
 (c⁄° 
WINDOW
 *, , );

1582 
NCURSES_EXPORT
(Ë
mou£öãrvÆ
 ();

1583 
NCURSES_EXPORT
(
boﬁ
Ë
wmou£_åafo
 (c⁄° 
WINDOW
*, *, *, bool);

1584 
NCURSES_EXPORT
(
boﬁ
Ë
mou£_åafo
 (*, *, bool);

1586 #i‡
NCURSES_SP_FUNCS


1587 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_mou£
Ë(
SCREEN
*);

1588 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
gëmou£
Ë(
SCREEN
*, 
MEVENT
 *);

1589 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungëmou£
Ë(
SCREEN
*,
MEVENT
 *);

1590 
NCURSES_EXPORT
(
mmask_t
Ë
NCURSES_SP_NAME
(
mou£mask
Ë(
SCREEN
*, mmask_t, mmask_t *);

1591 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
mou£öãrvÆ
Ë(
SCREEN
*, );

1594 
	#mou£_åafo
(
y
,
x
,
to_s¸ìn
Ë
	`wmou£_åafo
(
°ds¸
,y,x,to_s¸ìn)

	)

1598 
NCURSES_EXPORT
(Ë
m˝röt
 (*, );

1599 
NCURSES_EXPORT
(Ë
has_key
 ();

1601 #i‡
NCURSES_SP_FUNCS


1602 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
has_key
Ë(
SCREEN
*, );

1603 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
m˝röt
Ë(
SCREEN
*, *, );

1608 
NCURSES_EXPORT
(Ë
_åa˚f
 (c⁄° *, ...Ë
GCC_PRINTFLIKE
(1,2);

1609 
NCURSES_EXPORT
(Ë
_åa˚dump
 (c⁄° *, 
WINDOW
 *);

1610 
NCURSES_EXPORT
(*Ë
_åa˚©å
 (
©å_t
);

1611 
NCURSES_EXPORT
(*Ë
_åa˚©å2
 (, 
chty≥
);

1612 
NCURSES_EXPORT
(*Ë
_nc_åa˚bôs
 ();

1613 
NCURSES_EXPORT
(*Ë
_åa˚ch¨
 ();

1614 
NCURSES_EXPORT
(*Ë
_åa˚chty≥
 (
chty≥
);

1615 
NCURSES_EXPORT
(*Ë
_åa˚chty≥2
 (, 
chty≥
);

1616 #ifde‡
NCURSES_WIDECHAR


1617 
	#_åa˚ch_t
 
_åa˚cch¨_t


	)

1618 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t
 (c⁄° 
cch¨_t
 *);

1619 
	#_åa˚ch_t2
 
_åa˚cch¨_t2


	)

1620 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t2
 (, c⁄° 
cch¨_t
 *);

1622 
	#_åa˚ch_t
 
_åa˚chty≥


	)

1623 
	#_åa˚ch_t2
 
_åa˚chty≥2


	)

1625 
NCURSES_EXPORT
(*Ë
_åa˚mou£
 (c⁄° 
MEVENT
 *);

1626 
NCURSES_EXPORT
(Ë
åa˚
 (const );

1629 
	#TRACE_DISABLE
 0x0000

	)

1630 
	#TRACE_TIMES
 0x0001

	)

1631 
	#TRACE_TPUTS
 0x0002

	)

1632 
	#TRACE_UPDATE
 0x0004

	)

1633 
	#TRACE_MOVE
 0x0008

	)

1634 
	#TRACE_CHARPUT
 0x0010

	)

1635 
	#TRACE_ORDINARY
 0x001F

	)

1636 
	#TRACE_CALLS
 0x0020

	)

1637 
	#TRACE_VIRTPUT
 0x0040

	)

1638 
	#TRACE_IEVENT
 0x0080

	)

1639 
	#TRACE_BITS
 0x0100

	)

1640 
	#TRACE_ICALLS
 0x0200

	)

1641 
	#TRACE_CCALLS
 0x0400

	)

1642 
	#TRACE_DATABASE
 0x0800

	)

1643 
	#TRACE_ATTRS
 0x1000

	)

1645 
	#TRACE_SHIFT
 13

	)

1646 
	#TRACE_MAXIMUM
 ((1 << 
TRACE_SHIFT
Ë- 1Ë

	)

1648 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

1649 
NCURSES_EXPORT_VAR
(Ë
_nc_›timize_íabÀ
;

1650 
NCURSES_EXPORT
(c⁄° *Ë
_nc_visbuf
 (const *);

1651 
	#OPTIMIZE_MVCUR
 0x01

	)

1652 
	#OPTIMIZE_HASHMAP
 0x02

	)

1653 
	#OPTIMIZE_SCROLL
 0x04

	)

1654 
	#OPTIMIZE_ALL
 0xf‡

	)

1657 
	~<un˘æ.h
>

1659 #ifde‡
__˝lu•lus


1661 #i‚de‡
NCURSES_NOMACROS


1664 #unde‡
box


1665 #unde‡
˛ór


1666 #unde‡
îa£


1667 #unde‡
move


1668 #unde‡
ª‰esh


	@/usr/include/form.h

35 #i‚de‡
FORM_H


36 
	#FORM_H


	)

38 
	~<cur£s.h
>

39 
	~<ëi.h
>

41 #ifde‡
__˝lu•lus


45 #i‚de‡
FORM_PRIV_H


46 *
	tFIELD_CELL
;

49 #i‚de‡
NCURSES_FIELD_INTERNALS


50 
	#NCURSES_FIELD_INTERNALS


	)

53 
	tF‹m_O±i⁄s
;

54 
	tFõld_O±i⁄s
;

61 
	gpmö
;

62 
	gpmax
;

63 
	gsmö
;

64 
	gsmax
;

65 } 
	t_PAGE
;

71 
	sfõldnode
 {

72 
	g°©us
;

73 
	grows
;

74 
	gcﬁs
;

75 
	g‰ow
;

76 
	gfcﬁ
;

77 
	gdrows
;

78 
	gdcﬁs
;

79 
	gmaxgrow
;

80 
	gƒow
;

81 
	gnbuf
;

82 
	gju°
;

83 
	g∑ge
;

84 
	gödex
;

85 
	g∑d
;

86 
chty≥
 
	gf‹e
;

87 
chty≥
 
	gback
;

88 
Fõld_O±i⁄s
 
	g›ts
;

89 
fõldnode
 * 
	g¢ext
;

90 
fõldnode
 * 
	g•ªv
;

91 
fõldnode
 * 
	glök
;

92 
f‹mnode
 * 
	gf‹m
;

93 
ty≥node
 * 
	gty≥
;

94 * 
	g¨g
;

95 
FIELD_CELL
 * 
	gbuf
;

96 * 
	gu§±r
;

105 
	gNCURSES_FIELD_INTERNALS


106 } 
	tFIELD
;

113 
	sf‹mnode
 {

114 
	g°©us
;

115 
	grows
;

116 
	gcﬁs
;

117 
	gcuºow
;

118 
	gcurcﬁ
;

119 
	gt›row
;

120 
	gbegöcﬁ
;

121 
	gmaxfõld
;

122 
	gmax∑ge
;

123 
	gcuΩage
;

124 
F‹m_O±i⁄s
 
	g›ts
;

125 
WINDOW
 * 
	gwö
;

126 
WINDOW
 * 
	gsub
;

127 
WINDOW
 * 
	gw
;

128 
FIELD
 ** 
	gfõld
;

129 
FIELD
 * 
	gcuºít
;

130 
_PAGE
 * 
	g∑ge
;

131 * 
	gu§±r
;

133 (*
	gf‹möô
)(
	gf‹mnode
 *);

134 (*
	gf‹mãrm
)(
	gf‹mnode
 *);

135 (*
	gfõldöô
)(
	gf‹mnode
 *);

136 (*
	gfõldãrm
)(
	gf‹mnode
 *);

138 } 
	tFORM
;

145 
	sty≥node
 {

146 
	g°©us
;

147 
	gªf
;

148 
ty≥node
 * 
	gÀ·
;

149 
ty≥node
 * 
	gright
;

151 * (*
	gmakórg
)(
	gva_li°
 *);

152 * (*
	gc›y¨g
)(const *);

153 (*
	g‰ì¨g
)(*);

155 #i‡
NCURSES_INTEROP_FUNCS


157 
boﬁ
 (*
ofcheck
)(
	gFIELD
 *,const *);

158 
boﬁ
 (*
gfcheck
)(
	gFORM
*,
	gFIELD
 *,const *);

159 } 
	gfõldcheck
;

161 
boﬁ
 (*
occheck
)(,const *);

162 
boﬁ
 (*
gccheck
)(,
	gFORM
*,

163 
	gFIELD
*,const *);

164 } 
	gch¨check
;

166 
boﬁ
 (*
⁄ext
)(
	gFIELD
 *,const *);

167 
boﬁ
 (*
g√xt
)(
	gFORM
*,
	gFIELD
*,const *);

168 } 
	gíum_√xt
;

170 
boﬁ
 (*
›ªv
)(
	gFIELD
 *,const *);

171 
boﬁ
 (*
g¥ev
)(
	gFORM
*,
	gFIELD
*,const *);

172 } 
	gíum_¥ev
;

173 * (*
	ggíîiˇrg
)(*);

175 
boﬁ
 (*
fcheck
)(
	gFIELD
 *,const *);

176 
boﬁ
 (*
ccheck
)(,const *);

178 
boﬁ
 (*
√xt
)(
	gFIELD
 *,const *);

179 
boﬁ
 (*
¥ev
)(
	gFIELD
 *,const *);

181 } 
	tFIELDTYPE
;

183 (*
	gF‹m_Hook
)(
	tFORM
 *);

190 
	#NO_JUSTIFICATION
 (0)

	)

191 
	#JUSTIFY_LEFT
 (1)

	)

192 
	#JUSTIFY_CENTER
 (2)

	)

193 
	#JUSTIFY_RIGHT
 (3)

	)

196 
	#O_VISIBLE
 (0x0001U)

	)

197 
	#O_ACTIVE
 (0x0002U)

	)

198 
	#O_PUBLIC
 (0x0004U)

	)

199 
	#O_EDIT
 (0x0008U)

	)

200 
	#O_WRAP
 (0x0010U)

	)

201 
	#O_BLANK
 (0x0020U)

	)

202 
	#O_AUTOSKIP
 (0x0040U)

	)

203 
	#O_NULLOK
 (0x0080U)

	)

204 
	#O_PASSOK
 (0x0100U)

	)

205 
	#O_STATIC
 (0x0200U)

	)

208 
	#O_NL_OVERLOAD
 (0x0001U)

	)

209 
	#O_BS_OVERLOAD
 (0x0002U)

	)

212 
	#REQ_NEXT_PAGE
 (
KEY_MAX
 + 1Ë

	)

213 
	#REQ_PREV_PAGE
 (
KEY_MAX
 + 2Ë

	)

214 
	#REQ_FIRST_PAGE
 (
KEY_MAX
 + 3Ë

	)

215 
	#REQ_LAST_PAGE
 (
KEY_MAX
 + 4Ë

	)

217 
	#REQ_NEXT_FIELD
 (
KEY_MAX
 + 5Ë

	)

218 
	#REQ_PREV_FIELD
 (
KEY_MAX
 + 6Ë

	)

219 
	#REQ_FIRST_FIELD
 (
KEY_MAX
 + 7Ë

	)

220 
	#REQ_LAST_FIELD
 (
KEY_MAX
 + 8Ë

	)

221 
	#REQ_SNEXT_FIELD
 (
KEY_MAX
 + 9Ë

	)

222 
	#REQ_SPREV_FIELD
 (
KEY_MAX
 + 10Ë

	)

223 
	#REQ_SFIRST_FIELD
 (
KEY_MAX
 + 11Ë

	)

224 
	#REQ_SLAST_FIELD
 (
KEY_MAX
 + 12Ë

	)

225 
	#REQ_LEFT_FIELD
 (
KEY_MAX
 + 13Ë

	)

226 
	#REQ_RIGHT_FIELD
 (
KEY_MAX
 + 14Ë

	)

227 
	#REQ_UP_FIELD
 (
KEY_MAX
 + 15Ë

	)

228 
	#REQ_DOWN_FIELD
 (
KEY_MAX
 + 16Ë

	)

230 
	#REQ_NEXT_CHAR
 (
KEY_MAX
 + 17Ë

	)

231 
	#REQ_PREV_CHAR
 (
KEY_MAX
 + 18Ë

	)

232 
	#REQ_NEXT_LINE
 (
KEY_MAX
 + 19Ë

	)

233 
	#REQ_PREV_LINE
 (
KEY_MAX
 + 20Ë

	)

234 
	#REQ_NEXT_WORD
 (
KEY_MAX
 + 21Ë

	)

235 
	#REQ_PREV_WORD
 (
KEY_MAX
 + 22Ë

	)

236 
	#REQ_BEG_FIELD
 (
KEY_MAX
 + 23Ë

	)

237 
	#REQ_END_FIELD
 (
KEY_MAX
 + 24Ë

	)

238 
	#REQ_BEG_LINE
 (
KEY_MAX
 + 25Ë

	)

239 
	#REQ_END_LINE
 (
KEY_MAX
 + 26Ë

	)

240 
	#REQ_LEFT_CHAR
 (
KEY_MAX
 + 27Ë

	)

241 
	#REQ_RIGHT_CHAR
 (
KEY_MAX
 + 28Ë

	)

242 
	#REQ_UP_CHAR
 (
KEY_MAX
 + 29Ë

	)

243 
	#REQ_DOWN_CHAR
 (
KEY_MAX
 + 30Ë

	)

245 
	#REQ_NEW_LINE
 (
KEY_MAX
 + 31Ë

	)

246 
	#REQ_INS_CHAR
 (
KEY_MAX
 + 32Ë

	)

247 
	#REQ_INS_LINE
 (
KEY_MAX
 + 33Ë

	)

248 
	#REQ_DEL_CHAR
 (
KEY_MAX
 + 34Ë

	)

249 
	#REQ_DEL_PREV
 (
KEY_MAX
 + 35Ë

	)

250 
	#REQ_DEL_LINE
 (
KEY_MAX
 + 36Ë

	)

251 
	#REQ_DEL_WORD
 (
KEY_MAX
 + 37Ë

	)

252 
	#REQ_CLR_EOL
 (
KEY_MAX
 + 38Ë

	)

253 
	#REQ_CLR_EOF
 (
KEY_MAX
 + 39Ë

	)

254 
	#REQ_CLR_FIELD
 (
KEY_MAX
 + 40Ë

	)

255 
	#REQ_OVL_MODE
 (
KEY_MAX
 + 41Ë

	)

256 
	#REQ_INS_MODE
 (
KEY_MAX
 + 42Ë

	)

257 
	#REQ_SCR_FLINE
 (
KEY_MAX
 + 43Ë

	)

258 
	#REQ_SCR_BLINE
 (
KEY_MAX
 + 44Ë

	)

259 
	#REQ_SCR_FPAGE
 (
KEY_MAX
 + 45Ë

	)

260 
	#REQ_SCR_BPAGE
 (
KEY_MAX
 + 46Ë

	)

261 
	#REQ_SCR_FHPAGE
 (
KEY_MAX
 + 47Ë

	)

262 
	#REQ_SCR_BHPAGE
 (
KEY_MAX
 + 48Ë

	)

263 
	#REQ_SCR_FCHAR
 (
KEY_MAX
 + 49Ë

	)

264 
	#REQ_SCR_BCHAR
 (
KEY_MAX
 + 50Ë

	)

265 
	#REQ_SCR_HFLINE
 (
KEY_MAX
 + 51Ë

	)

266 
	#REQ_SCR_HBLINE
 (
KEY_MAX
 + 52Ë

	)

267 
	#REQ_SCR_HFHALF
 (
KEY_MAX
 + 53Ë

	)

268 
	#REQ_SCR_HBHALF
 (
KEY_MAX
 + 54Ë

	)

270 
	#REQ_VALIDATION
 (
KEY_MAX
 + 55Ë

	)

271 
	#REQ_NEXT_CHOICE
 (
KEY_MAX
 + 56Ë

	)

272 
	#REQ_PREV_CHOICE
 (
KEY_MAX
 + 57Ë

	)

274 
	#MIN_FORM_COMMAND
 (
KEY_MAX
 + 1Ë

	)

275 
	#MAX_FORM_COMMAND
 (
KEY_MAX
 + 57Ë

	)

277 #i‡
deföed
(
MAX_COMMAND
)

278 #i‡(
MAX_FORM_COMMAND
 > 
MAX_COMMAND
)

279 #îr‹ 
Somëhög
 
is
 
wr⁄g
 -- 
MAX_FORM_COMMAND
 i†
gª©î
 
th™
 
MAX_COMMAND


280 #ñi‡(
MAX_COMMAND
 !(
KEY_MAX
 + 128))

281 #îr‹ 
Somëhög
 
is
 
wr⁄g
 -- 
MAX_COMMAND
 i†
Æªady
 
öc⁄si°íéy
 
deföed
.

284 
	#MAX_COMMAND
 (
KEY_MAX
 + 128)

	)

290 
NCURSES_EXPORT_VAR
(
FIELDTYPE
 *Ë
TYPE_ALPHA
;

291 
NCURSES_EXPORT_VAR
(
FIELDTYPE
 *Ë
TYPE_ALNUM
;

292 
NCURSES_EXPORT_VAR
(
FIELDTYPE
 *Ë
TYPE_ENUM
;

293 
NCURSES_EXPORT_VAR
(
FIELDTYPE
 *Ë
TYPE_INTEGER
;

294 
NCURSES_EXPORT_VAR
(
FIELDTYPE
 *Ë
TYPE_NUMERIC
;

295 
NCURSES_EXPORT_VAR
(
FIELDTYPE
 *Ë
TYPE_REGEXP
;

301 
NCURSES_EXPORT_VAR
(
FIELDTYPE
 *Ë
TYPE_IPV4
;

306 
NCURSES_EXPORT
(
FIELDTYPE
 *Ë
√w_fõldty≥
 (

307 
boﬁ
 (* c⁄° 
fõld_check
)(
FIELD
 *,const *),

308 
boﬁ
 (* c⁄° 
ch¨_check
)(,const *));

309 
NCURSES_EXPORT
(
FIELDTYPE
 *Ë
lök_fõldty≥
(

310 
FIELDTYPE
 *, FIELDTYPE *);

312 
NCURSES_EXPORT
(Ë
‰ì_fõldty≥
 (
FIELDTYPE
 *);

313 
NCURSES_EXPORT
(Ë
£t_fõldty≥_¨g
 (
FIELDTYPE
 *,

314 * (* c⁄° 
make_¨g
)(
va_li°
 *),

315 * (* c⁄° 
c›y_¨g
)(const *),

316 (* c⁄° 
‰ì_¨g
)(*));

317 
NCURSES_EXPORT
(Ë
£t_fõldty≥_choi˚
 (
FIELDTYPE
 *,

318 
boﬁ
 (* c⁄° 
√xt_choi˚
)(
FIELD
 *,const *),

319 
boﬁ
 (* c⁄° 
¥ev_choi˚
)(
FIELD
 *,const *));

324 
NCURSES_EXPORT
(
FIELD
 *Ë
√w_fõld
 (,,,,,);

325 
NCURSES_EXPORT
(
FIELD
 *Ë
dup_fõld
 (FIELD *,,);

326 
NCURSES_EXPORT
(
FIELD
 *Ë
lök_fõld
 (FIELD *,,);

328 
NCURSES_EXPORT
(Ë
‰ì_fõld
 (
FIELD
 *);

329 
NCURSES_EXPORT
(Ë
fõld_öfo
 (c⁄° 
FIELD
 *,*,*,*,*,*,*);

330 
NCURSES_EXPORT
(Ë
dy«mic_fõld_öfo
 (c⁄° 
FIELD
 *,*,*,*);

331 
NCURSES_EXPORT
(Ë
£t_max_fõld
 ( 
FIELD
 *,);

332 
NCURSES_EXPORT
(Ë
move_fõld
 (
FIELD
 *,,);

333 
NCURSES_EXPORT
(Ë
£t_fõld_ty≥
 (
FIELD
 *,
FIELDTYPE
 *,...);

334 
NCURSES_EXPORT
(Ë
£t_√w_∑ge
 (
FIELD
 *,
boﬁ
);

335 
NCURSES_EXPORT
(Ë
£t_fõld_ju°
 (
FIELD
 *,);

336 
NCURSES_EXPORT
(Ë
fõld_ju°
 (c⁄° 
FIELD
 *);

337 
NCURSES_EXPORT
(Ë
£t_fõld_f‹e
 (
FIELD
 *,
chty≥
);

338 
NCURSES_EXPORT
(Ë
£t_fõld_back
 (
FIELD
 *,
chty≥
);

339 
NCURSES_EXPORT
(Ë
£t_fõld_∑d
 (
FIELD
 *,);

340 
NCURSES_EXPORT
(Ë
fõld_∑d
 (c⁄° 
FIELD
 *);

341 
NCURSES_EXPORT
(Ë
£t_fõld_buf„r
 (
FIELD
 *,,const *);

342 
NCURSES_EXPORT
(Ë
£t_fõld_°©us
 (
FIELD
 *,
boﬁ
);

343 
NCURSES_EXPORT
(Ë
£t_fõld_u£Ωå
 (
FIELD
 *, *);

344 
NCURSES_EXPORT
(Ë
£t_fõld_›ts
 (
FIELD
 *,
Fõld_O±i⁄s
);

345 
NCURSES_EXPORT
(Ë
fõld_›ts_⁄
 (
FIELD
 *,
Fõld_O±i⁄s
);

346 
NCURSES_EXPORT
(Ë
fõld_›ts_off
 (
FIELD
 *,
Fõld_O±i⁄s
);

348 
NCURSES_EXPORT
(
chty≥
Ë
fõld_f‹e
 (c⁄° 
FIELD
 *);

349 
NCURSES_EXPORT
(
chty≥
Ë
fõld_back
 (c⁄° 
FIELD
 *);

351 
NCURSES_EXPORT
(
boﬁ
Ë
√w_∑ge
 (c⁄° 
FIELD
 *);

352 
NCURSES_EXPORT
(
boﬁ
Ë
fõld_°©us
 (c⁄° 
FIELD
 *);

354 
NCURSES_EXPORT
(*Ë
fõld_¨g
 (c⁄° 
FIELD
 *);

356 
NCURSES_EXPORT
(*Ë
fõld_u£Ωå
 (c⁄° 
FIELD
 *);

358 
NCURSES_EXPORT
(
FIELDTYPE
 *Ë
fõld_ty≥
 (c⁄° 
FIELD
 *);

360 
NCURSES_EXPORT
(*Ë
fõld_buf„r
 (c⁄° 
FIELD
 *,);

362 
NCURSES_EXPORT
(
Fõld_O±i⁄s
Ë
fõld_›ts
 (c⁄° 
FIELD
 *);

368 
NCURSES_EXPORT
(
FORM
 *Ë
√w_f‹m
 (
FIELD
 **);

370 
NCURSES_EXPORT
(
FIELD
 **Ë
f‹m_fõlds
 (c⁄° 
FORM
 *);

371 
NCURSES_EXPORT
(
FIELD
 *Ë
cuºít_fõld
 (c⁄° 
FORM
 *);

373 
NCURSES_EXPORT
(
WINDOW
 *Ë
f‹m_wö
 (c⁄° 
FORM
 *);

374 
NCURSES_EXPORT
(
WINDOW
 *Ë
f‹m_sub
 (c⁄° 
FORM
 *);

376 
NCURSES_EXPORT
(
F‹m_Hook
Ë
f‹m_öô
 (c⁄° 
FORM
 *);

377 
NCURSES_EXPORT
(
F‹m_Hook
Ë
f‹m_ãrm
 (c⁄° 
FORM
 *);

378 
NCURSES_EXPORT
(
F‹m_Hook
Ë
fõld_öô
 (c⁄° 
FORM
 *);

379 
NCURSES_EXPORT
(
F‹m_Hook
Ë
fõld_ãrm
 (c⁄° 
FORM
 *);

381 
NCURSES_EXPORT
(Ë
‰ì_f‹m
 (
FORM
 *);

382 
NCURSES_EXPORT
(Ë
£t_f‹m_fõlds
 (
FORM
 *,
FIELD
 **);

383 
NCURSES_EXPORT
(Ë
fõld_cou¡
 (c⁄° 
FORM
 *);

384 
NCURSES_EXPORT
(Ë
£t_f‹m_wö
 (
FORM
 *,
WINDOW
 *);

385 
NCURSES_EXPORT
(Ë
£t_f‹m_sub
 (
FORM
 *,
WINDOW
 *);

386 
NCURSES_EXPORT
(Ë
£t_cuºít_fõld
 (
FORM
 *,
FIELD
 *);

387 
NCURSES_EXPORT
(Ë
fõld_ödex
 (c⁄° 
FIELD
 *);

388 
NCURSES_EXPORT
(Ë
£t_f‹m_∑ge
 (
FORM
 *,);

389 
NCURSES_EXPORT
(Ë
f‹m_∑ge
 (c⁄° 
FORM
 *);

390 
NCURSES_EXPORT
(Ë
sˇÀ_f‹m
 (c⁄° 
FORM
 *,*,*);

391 
NCURSES_EXPORT
(Ë
£t_f‹m_öô
 (
FORM
 *,
F‹m_Hook
);

392 
NCURSES_EXPORT
(Ë
£t_f‹m_ãrm
 (
FORM
 *,
F‹m_Hook
);

393 
NCURSES_EXPORT
(Ë
£t_fõld_öô
 (
FORM
 *,
F‹m_Hook
);

394 
NCURSES_EXPORT
(Ë
£t_fõld_ãrm
 (
FORM
 *,
F‹m_Hook
);

395 
NCURSES_EXPORT
(Ë
po°_f‹m
 (
FORM
 *);

396 
NCURSES_EXPORT
(Ë
u≈o°_f‹m
 (
FORM
 *);

397 
NCURSES_EXPORT
(Ë
pos_f‹m_curs‹
 (
FORM
 *);

398 
NCURSES_EXPORT
(Ë
f‹m_drivî
 (
FORM
 *,);

399 
NCURSES_EXPORT
(Ë
£t_f‹m_u£Ωå
 (
FORM
 *,*);

400 
NCURSES_EXPORT
(Ë
£t_f‹m_›ts
 (
FORM
 *,
F‹m_O±i⁄s
);

401 
NCURSES_EXPORT
(Ë
f‹m_›ts_⁄
 (
FORM
 *,
F‹m_O±i⁄s
);

402 
NCURSES_EXPORT
(Ë
f‹m_›ts_off
 (
FORM
 *,
F‹m_O±i⁄s
);

403 
NCURSES_EXPORT
(Ë
f‹m_ªque°_by_«me
 (const *);

405 
NCURSES_EXPORT
(c⁄° *Ë
f‹m_ªque°_«me
 ();

407 
NCURSES_EXPORT
(*Ë
f‹m_u£Ωå
 (c⁄° 
FORM
 *);

409 
NCURSES_EXPORT
(
F‹m_O±i⁄s
Ë
f‹m_›ts
 (c⁄° 
FORM
 *);

411 
NCURSES_EXPORT
(
boﬁ
Ë
d©a_ahód
 (c⁄° 
FORM
 *);

412 
NCURSES_EXPORT
(
boﬁ
Ë
d©a_behöd
 (c⁄° 
FORM
 *);

414 #i‡
NCURSES_SP_FUNCS


415 
NCURSES_EXPORT
(
FORM
 *Ë
NCURSES_SP_NAME
(
√w_f‹m
Ë(
SCREEN
*, 
FIELD
 **);

418 #ifde‡
__˝lu•lus


	@/usr/include/sqlite3.h

33 #i‚de‡
_SQLITE3_H_


34 
	#_SQLITE3_H_


	)

35 
	~<°d¨g.h
>

40 #ifde‡
__˝lu•lus


48 #i‚de‡
SQLITE_EXTERN


49 
	#SQLITE_EXTERN
 

	)

52 #i‚de‡
SQLITE_API


53 
	#SQLITE_API


	)

70 
	#SQLITE_DEPRECATED


	)

71 
	#SQLITE_EXPERIMENTAL


	)

76 #ifde‡
SQLITE_VERSION


77 #unde‡
SQLITE_VERSION


79 #ifde‡
SQLITE_VERSION_NUMBER


80 #unde‡
SQLITE_VERSION_NUMBER


110 
	#SQLITE_VERSION
 "3.7.9"

	)

111 
	#SQLITE_VERSION_NUMBER
 3007009

	)

112 
	#SQLITE_SOURCE_ID
 "2011-11-01 00:52:41 c7c6050ef060877ebe77b41d959e9df13f8c9b5e"

	)

144 
SQLITE_API
 
SQLITE_EXTERN
 c⁄° 
sqlôe3_vîsi⁄
[];

145 
SQLITE_API
 c⁄° *
sqlôe3_libvîsi⁄
();

146 
SQLITE_API
 c⁄° *
sqlôe3_sour˚id
();

147 
SQLITE_API
 
sqlôe3_libvîsi⁄_numbî
();

171 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


172 
SQLITE_API
 
sqlôe3_compûe›ti⁄_u£d
(c⁄° *
zO±Name
);

173 
SQLITE_API
 c⁄° *
sqlôe3_compûe›ti⁄_gë
(
N
);

212 
SQLITE_API
 
sqlôe3_thªadß„
();

227 
sqlôe3
 
	tsqlôe3
;

245 #ifde‡
SQLITE_INT64_TYPE


246 
SQLITE_INT64_TYPE
 
	tsqlôe_öt64
;

247 
	tSQLITE_INT64_TYPE
 
	tsqlôe_uöt64
;

248 #ñi‡
deföed
(
_MSC_VER
Ë|| deföed(
__BORLANDC__
)

249 
__öt64
 
	tsqlôe_öt64
;

250 
	t__öt64
 
	tsqlôe_uöt64
;

252 
	tsqlôe_öt64
;

253 
	tsqlôe_uöt64
;

255 
sqlôe_öt64
 
	tsqlôe3_öt64
;

256 
sqlôe_uöt64
 
	tsqlôe3_uöt64
;

262 #ifde‡
SQLITE_OMIT_FLOATING_POINT


263 
sqlôe3_öt64


	)

290 
SQLITE_API
 
sqlôe3_˛o£
(
sqlôe3
 *);

297 (*
sqlôe3_ˇŒback
)(*,,**, **);

360 
SQLITE_API
 
sqlôe3_exec
(

361 
sqlôe3
*,

362 c⁄° *
sql
,

363 (*
ˇŒback
)(*,,**,**),

365 **
îrmsg


381 
	#SQLITE_OK
 0

	)

383 
	#SQLITE_ERROR
 1

	)

384 
	#SQLITE_INTERNAL
 2

	)

385 
	#SQLITE_PERM
 3

	)

386 
	#SQLITE_ABORT
 4

	)

387 
	#SQLITE_BUSY
 5

	)

388 
	#SQLITE_LOCKED
 6

	)

389 
	#SQLITE_NOMEM
 7

	)

390 
	#SQLITE_READONLY
 8

	)

391 
	#SQLITE_INTERRUPT
 9

	)

392 
	#SQLITE_IOERR
 10

	)

393 
	#SQLITE_CORRUPT
 11

	)

394 
	#SQLITE_NOTFOUND
 12

	)

395 
	#SQLITE_FULL
 13

	)

396 
	#SQLITE_CANTOPEN
 14

	)

397 
	#SQLITE_PROTOCOL
 15

	)

398 
	#SQLITE_EMPTY
 16

	)

399 
	#SQLITE_SCHEMA
 17

	)

400 
	#SQLITE_TOOBIG
 18

	)

401 
	#SQLITE_CONSTRAINT
 19

	)

402 
	#SQLITE_MISMATCH
 20

	)

403 
	#SQLITE_MISUSE
 21

	)

404 
	#SQLITE_NOLFS
 22

	)

405 
	#SQLITE_AUTH
 23

	)

406 
	#SQLITE_FORMAT
 24

	)

407 
	#SQLITE_RANGE
 25

	)

408 
	#SQLITE_NOTADB
 26

	)

409 
	#SQLITE_ROW
 100

	)

410 
	#SQLITE_DONE
 101

	)

436 
	#SQLITE_IOERR_READ
 (
SQLITE_IOERR
 | (1<<8))

	)

437 
	#SQLITE_IOERR_SHORT_READ
 (
SQLITE_IOERR
 | (2<<8))

	)

438 
	#SQLITE_IOERR_WRITE
 (
SQLITE_IOERR
 | (3<<8))

	)

439 
	#SQLITE_IOERR_FSYNC
 (
SQLITE_IOERR
 | (4<<8))

	)

440 
	#SQLITE_IOERR_DIR_FSYNC
 (
SQLITE_IOERR
 | (5<<8))

	)

441 
	#SQLITE_IOERR_TRUNCATE
 (
SQLITE_IOERR
 | (6<<8))

	)

442 
	#SQLITE_IOERR_FSTAT
 (
SQLITE_IOERR
 | (7<<8))

	)

443 
	#SQLITE_IOERR_UNLOCK
 (
SQLITE_IOERR
 | (8<<8))

	)

444 
	#SQLITE_IOERR_RDLOCK
 (
SQLITE_IOERR
 | (9<<8))

	)

445 
	#SQLITE_IOERR_DELETE
 (
SQLITE_IOERR
 | (10<<8))

	)

446 
	#SQLITE_IOERR_BLOCKED
 (
SQLITE_IOERR
 | (11<<8))

	)

447 
	#SQLITE_IOERR_NOMEM
 (
SQLITE_IOERR
 | (12<<8))

	)

448 
	#SQLITE_IOERR_ACCESS
 (
SQLITE_IOERR
 | (13<<8))

	)

449 
	#SQLITE_IOERR_CHECKRESERVEDLOCK
 (
SQLITE_IOERR
 | (14<<8))

	)

450 
	#SQLITE_IOERR_LOCK
 (
SQLITE_IOERR
 | (15<<8))

	)

451 
	#SQLITE_IOERR_CLOSE
 (
SQLITE_IOERR
 | (16<<8))

	)

452 
	#SQLITE_IOERR_DIR_CLOSE
 (
SQLITE_IOERR
 | (17<<8))

	)

453 
	#SQLITE_IOERR_SHMOPEN
 (
SQLITE_IOERR
 | (18<<8))

	)

454 
	#SQLITE_IOERR_SHMSIZE
 (
SQLITE_IOERR
 | (19<<8))

	)

455 
	#SQLITE_IOERR_SHMLOCK
 (
SQLITE_IOERR
 | (20<<8))

	)

456 
	#SQLITE_IOERR_SHMMAP
 (
SQLITE_IOERR
 | (21<<8))

	)

457 
	#SQLITE_IOERR_SEEK
 (
SQLITE_IOERR
 | (22<<8))

	)

458 
	#SQLITE_LOCKED_SHAREDCACHE
 (
SQLITE_LOCKED
 | (1<<8))

	)

459 
	#SQLITE_BUSY_RECOVERY
 (
SQLITE_BUSY
 | (1<<8))

	)

460 
	#SQLITE_CANTOPEN_NOTEMPDIR
 (
SQLITE_CANTOPEN
 | (1<<8))

	)

461 
	#SQLITE_CORRUPT_VTAB
 (
SQLITE_CORRUPT
 | (1<<8))

	)

462 
	#SQLITE_READONLY_RECOVERY
 (
SQLITE_READONLY
 | (1<<8))

	)

463 
	#SQLITE_READONLY_CANTLOCK
 (
SQLITE_READONLY
 | (2<<8))

	)

472 
	#SQLITE_OPEN_READONLY
 0x00000001

	)

473 
	#SQLITE_OPEN_READWRITE
 0x00000002

	)

474 
	#SQLITE_OPEN_CREATE
 0x00000004

	)

475 
	#SQLITE_OPEN_DELETEONCLOSE
 0x00000008

	)

476 
	#SQLITE_OPEN_EXCLUSIVE
 0x00000010

	)

477 
	#SQLITE_OPEN_AUTOPROXY
 0x00000020

	)

478 
	#SQLITE_OPEN_URI
 0x00000040

	)

479 
	#SQLITE_OPEN_MAIN_DB
 0x00000100

	)

480 
	#SQLITE_OPEN_TEMP_DB
 0x00000200

	)

481 
	#SQLITE_OPEN_TRANSIENT_DB
 0x00000400

	)

482 
	#SQLITE_OPEN_MAIN_JOURNAL
 0x00000800

	)

483 
	#SQLITE_OPEN_TEMP_JOURNAL
 0x00001000

	)

484 
	#SQLITE_OPEN_SUBJOURNAL
 0x00002000

	)

485 
	#SQLITE_OPEN_MASTER_JOURNAL
 0x00004000

	)

486 
	#SQLITE_OPEN_NOMUTEX
 0x00008000

	)

487 
	#SQLITE_OPEN_FULLMUTEX
 0x00010000

	)

488 
	#SQLITE_OPEN_SHAREDCACHE
 0x00020000

	)

489 
	#SQLITE_OPEN_PRIVATECACHE
 0x00040000

	)

490 
	#SQLITE_OPEN_WAL
 0x00080000

	)

514 
	#SQLITE_IOCAP_ATOMIC
 0x00000001

	)

515 
	#SQLITE_IOCAP_ATOMIC512
 0x00000002

	)

516 
	#SQLITE_IOCAP_ATOMIC1K
 0x00000004

	)

517 
	#SQLITE_IOCAP_ATOMIC2K
 0x00000008

	)

518 
	#SQLITE_IOCAP_ATOMIC4K
 0x00000010

	)

519 
	#SQLITE_IOCAP_ATOMIC8K
 0x00000020

	)

520 
	#SQLITE_IOCAP_ATOMIC16K
 0x00000040

	)

521 
	#SQLITE_IOCAP_ATOMIC32K
 0x00000080

	)

522 
	#SQLITE_IOCAP_ATOMIC64K
 0x00000100

	)

523 
	#SQLITE_IOCAP_SAFE_APPEND
 0x00000200

	)

524 
	#SQLITE_IOCAP_SEQUENTIAL
 0x00000400

	)

525 
	#SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN
 0x00000800

	)

534 
	#SQLITE_LOCK_NONE
 0

	)

535 
	#SQLITE_LOCK_SHARED
 1

	)

536 
	#SQLITE_LOCK_RESERVED
 2

	)

537 
	#SQLITE_LOCK_PENDING
 3

	)

538 
	#SQLITE_LOCK_EXCLUSIVE
 4

	)

566 
	#SQLITE_SYNC_NORMAL
 0x00002

	)

567 
	#SQLITE_SYNC_FULL
 0x00003

	)

568 
	#SQLITE_SYNC_DATAONLY
 0x00010

	)

581 
sqlôe3_fûe
 
	tsqlôe3_fûe
;

582 
	ssqlôe3_fûe
 {

583 c⁄° 
sqlôe3_io_mëhods
 *
pMëhods
;

676 
sqlôe3_io_mëhods
 
	tsqlôe3_io_mëhods
;

677 
	ssqlôe3_io_mëhods
 {

678 
iVîsi⁄
;

679 (*
xClo£
)(
sqlôe3_fûe
*);

680 (*
xRód
)(
sqlôe3_fûe
*, *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

681 (*
xWrôe
)(
sqlôe3_fûe
*, c⁄° *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

682 (*
xTrunˇã
)(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
size
);

683 (*
xSync
)(
sqlôe3_fûe
*, 
Êags
);

684 (*
xFûeSize
)(
sqlôe3_fûe
*, 
sqlôe3_öt64
 *
pSize
);

685 (*
xLock
)(
sqlôe3_fûe
*, );

686 (*
xU∆ock
)(
sqlôe3_fûe
*, );

687 (*
xCheckRe£rvedLock
)(
sqlôe3_fûe
*, *
pResOut
);

688 (*
xFûeC⁄åﬁ
)(
sqlôe3_fûe
*, 
›
, *
pArg
);

689 (*
xSe˘‹Size
)(
sqlôe3_fûe
*);

690 (*
xDevi˚Ch¨a˘îi°ics
)(
sqlôe3_fûe
*);

692 (*
xShmM≠
)(
sqlôe3_fûe
*, 
iPg
, 
pgsz
, , volatile**);

693 (*
xShmLock
)(
sqlôe3_fûe
*, 
off£t
, 
n
, 
Êags
);

694 (*
xShmB¨rõr
)(
sqlôe3_fûe
*);

695 (*
xShmUnm≠
)(
sqlôe3_fûe
*, 
dñëeFœg
);

780 
	#SQLITE_FCNTL_LOCKSTATE
 1

	)

781 
	#SQLITE_GET_LOCKPROXYFILE
 2

	)

782 
	#SQLITE_SET_LOCKPROXYFILE
 3

	)

783 
	#SQLITE_LAST_ERRNO
 4

	)

784 
	#SQLITE_FCNTL_SIZE_HINT
 5

	)

785 
	#SQLITE_FCNTL_CHUNK_SIZE
 6

	)

786 
	#SQLITE_FCNTL_FILE_POINTER
 7

	)

787 
	#SQLITE_FCNTL_SYNC_OMITTED
 8

	)

788 
	#SQLITE_FCNTL_WIN32_AV_RETRY
 9

	)

789 
	#SQLITE_FCNTL_PERSIST_WAL
 10

	)

790 
	#SQLITE_FCNTL_OVERWRITE
 11

	)

802 
sqlôe3_muãx
 
	tsqlôe3_muãx
;

961 
sqlôe3_vfs
 
	tsqlôe3_vfs
;

962 (*
sqlôe3_sysˇŒ_±r
)();

963 
	ssqlôe3_vfs
 {

964 
iVîsi⁄
;

965 
szOsFûe
;

966 
mxP©h«me
;

967 
sqlôe3_vfs
 *
pNext
;

968 c⁄° *
zName
;

969 *
pAµD©a
;

970 (*
xO≥n
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
sqlôe3_fûe
*,

971 
Êags
, *
pOutFœgs
);

972 (*
xDñëe
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
syncDú
);

973 (*
xAc˚ss
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
Êags
, *
pResOut
);

974 (*
xFuŒP©h«me
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
nOut
, *
zOut
);

975 *(*
xDlO≥n
)(
sqlôe3_vfs
*, c⁄° *
zFûíame
);

976 (*
xDlEº‹
)(
sqlôe3_vfs
*, 
nByã
, *
zEºMsg
);

977 (*(*
xDlSym
)(
sqlôe3_vfs
*,*, c⁄° *
zSymbﬁ
))();

978 (*
xDlClo£
)(
sqlôe3_vfs
*, *);

979 (*
xR™dom√ss
)(
sqlôe3_vfs
*, 
nByã
, *
zOut
);

980 (*
xSÀï
)(
sqlôe3_vfs
*, 
mi¸o£c⁄ds
);

981 (*
xCuºítTime
)(
sqlôe3_vfs
*, *);

982 (*
xGëLa°Eº‹
)(
sqlôe3_vfs
*, , *);

987 (*
xCuºítTimeI¡64
)(
sqlôe3_vfs
*, 
sqlôe3_öt64
*);

992 (*
xSëSy°emCÆl
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
sqlôe3_sysˇŒ_±r
);

993 
sqlôe3_sysˇŒ_±r
 (*
xGëSy°emCÆl
)(
sqlôe3_vfs
*, c⁄° *
zName
);

994 c⁄° *(*
xNextSy°emCÆl
)(
sqlôe3_vfs
*, c⁄° *
zName
);

1022 
	#SQLITE_ACCESS_EXISTS
 0

	)

1023 
	#SQLITE_ACCESS_READWRITE
 1

	)

1024 
	#SQLITE_ACCESS_READ
 2

	)

1048 
	#SQLITE_SHM_UNLOCK
 1

	)

1049 
	#SQLITE_SHM_LOCK
 2

	)

1050 
	#SQLITE_SHM_SHARED
 4

	)

1051 
	#SQLITE_SHM_EXCLUSIVE
 8

	)

1061 
	#SQLITE_SHM_NLOCK
 8

	)

1139 
SQLITE_API
 
sqlôe3_öôülize
();

1140 
SQLITE_API
 
sqlôe3_shutdown
();

1141 
SQLITE_API
 
sqlôe3_os_öô
();

1142 
SQLITE_API
 
sqlôe3_os_íd
();

1173 
SQLITE_API
 
sqlôe3_c⁄fig
(, ...);

1191 
SQLITE_API
 
sqlôe3_db_c⁄fig
(
sqlôe3
*, 
›
, ...);

1256 
sqlôe3_mem_mëhods
 
	tsqlôe3_mem_mëhods
;

1257 
	ssqlôe3_mem_mëhods
 {

1258 *(*
xMÆloc
)();

1259 (*
xFªe
)(*);

1260 *(*
xRóŒoc
)(*,);

1261 (*
xSize
)(*);

1262 (*
xRoundup
)();

1263 (*
xInô
)(*);

1264 (*
xShutdown
)(*);

1265 *
pAµD©a
;

1488 
	#SQLITE_CONFIG_SINGLETHREAD
 1

	)

1489 
	#SQLITE_CONFIG_MULTITHREAD
 2

	)

1490 
	#SQLITE_CONFIG_SERIALIZED
 3

	)

1491 
	#SQLITE_CONFIG_MALLOC
 4

	)

1492 
	#SQLITE_CONFIG_GETMALLOC
 5

	)

1493 
	#SQLITE_CONFIG_SCRATCH
 6

	)

1494 
	#SQLITE_CONFIG_PAGECACHE
 7

	)

1495 
	#SQLITE_CONFIG_HEAP
 8

	)

1496 
	#SQLITE_CONFIG_MEMSTATUS
 9

	)

1497 
	#SQLITE_CONFIG_MUTEX
 10

	)

1498 
	#SQLITE_CONFIG_GETMUTEX
 11

	)

1500 
	#SQLITE_CONFIG_LOOKASIDE
 13

	)

1501 
	#SQLITE_CONFIG_PCACHE
 14

	)

1502 
	#SQLITE_CONFIG_GETPCACHE
 15

	)

1503 
	#SQLITE_CONFIG_LOG
 16

	)

1504 
	#SQLITE_CONFIG_URI
 17

	)

1564 
	#SQLITE_DBCONFIG_LOOKASIDE
 1001

	)

1565 
	#SQLITE_DBCONFIG_ENABLE_FKEY
 1002

	)

1566 
	#SQLITE_DBCONFIG_ENABLE_TRIGGER
 1003

	)

1576 
SQLITE_API
 
sqlôe3_exãnded_ªsu…_codes
(
sqlôe3
*, 
⁄off
);

1625 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_œ°_ö£π_rowid
(
sqlôe3
*);

1679 
SQLITE_API
 
sqlôe3_ch™ges
(
sqlôe3
*);

1705 
SQLITE_API
 
sqlôe3_tŸÆ_ch™ges
(
sqlôe3
*);

1744 
SQLITE_API
 
sqlôe3_öãºu±
(
sqlôe3
*);

1779 
SQLITE_API
 
sqlôe3_com∂ëe
(c⁄° *
sql
);

1780 
SQLITE_API
 
sqlôe3_com∂ëe16
(c⁄° *
sql
);

1846 
SQLITE_API
 
sqlôe3_busy_h™dÀr
(
sqlôe3
*, (*)(*,), *);

1866 
SQLITE_API
 
sqlôe3_busy_timeout
(
sqlôe3
*, 
ms
);

1940 
SQLITE_API
 
sqlôe3_gë_èbÀ
(

1941 
sqlôe3
 *
db
,

1942 c⁄° *
zSql
,

1943 ***
∑zResu…
,

1944 *
≤Row
,

1945 *
≤Cﬁumn
,

1946 **
pzEºmsg


1948 
SQLITE_API
 
sqlôe3_‰ì_èbÀ
(**
ªsu…
);

2044 
SQLITE_API
 *
sqlôe3_m¥ötf
(const *,...);

2045 
SQLITE_API
 *
sqlôe3_vm¥ötf
(c⁄° *, 
va_li°
);

2046 
SQLITE_API
 *
sqlôe3_¢¥ötf
(,*,const *, ...);

2047 
SQLITE_API
 *
sqlôe3_v¢¥ötf
(,*,c⁄° *, 
va_li°
);

2119 
SQLITE_API
 *
sqlôe3_mÆloc
();

2120 
SQLITE_API
 *
sqlôe3_ªÆloc
(*, );

2121 
SQLITE_API
 
sqlôe3_‰ì
(*);

2146 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_mem‹y_u£d
();

2147 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_mem‹y_highw©î
(
ª£tFœg
);

2167 
SQLITE_API
 
sqlôe3_øndom√ss
(
N
, *
P
);

2249 
SQLITE_API
 
sqlôe3_£t_auth‹izî
(

2250 
sqlôe3
*,

2251 (*
xAuth
)(*,,const *,const *,const *,const *),

2252 *
pU£rD©a


2267 
	#SQLITE_DENY
 1

	)

2268 
	#SQLITE_IGNORE
 2

	)

2290 
	#SQLITE_CREATE_INDEX
 1

	)

2291 
	#SQLITE_CREATE_TABLE
 2

	)

2292 
	#SQLITE_CREATE_TEMP_INDEX
 3

	)

2293 
	#SQLITE_CREATE_TEMP_TABLE
 4

	)

2294 
	#SQLITE_CREATE_TEMP_TRIGGER
 5

	)

2295 
	#SQLITE_CREATE_TEMP_VIEW
 6

	)

2296 
	#SQLITE_CREATE_TRIGGER
 7

	)

2297 
	#SQLITE_CREATE_VIEW
 8

	)

2298 
	#SQLITE_DELETE
 9

	)

2299 
	#SQLITE_DROP_INDEX
 10

	)

2300 
	#SQLITE_DROP_TABLE
 11

	)

2301 
	#SQLITE_DROP_TEMP_INDEX
 12

	)

2302 
	#SQLITE_DROP_TEMP_TABLE
 13

	)

2303 
	#SQLITE_DROP_TEMP_TRIGGER
 14

	)

2304 
	#SQLITE_DROP_TEMP_VIEW
 15

	)

2305 
	#SQLITE_DROP_TRIGGER
 16

	)

2306 
	#SQLITE_DROP_VIEW
 17

	)

2307 
	#SQLITE_INSERT
 18

	)

2308 
	#SQLITE_PRAGMA
 19

	)

2309 
	#SQLITE_READ
 20

	)

2310 
	#SQLITE_SELECT
 21

	)

2311 
	#SQLITE_TRANSACTION
 22

	)

2312 
	#SQLITE_UPDATE
 23

	)

2313 
	#SQLITE_ATTACH
 24

	)

2314 
	#SQLITE_DETACH
 25

	)

2315 
	#SQLITE_ALTER_TABLE
 26

	)

2316 
	#SQLITE_REINDEX
 27

	)

2317 
	#SQLITE_ANALYZE
 28

	)

2318 
	#SQLITE_CREATE_VTABLE
 29

	)

2319 
	#SQLITE_DROP_VTABLE
 30

	)

2320 
	#SQLITE_FUNCTION
 31

	)

2321 
	#SQLITE_SAVEPOINT
 32

	)

2322 
	#SQLITE_COPY
 0

	)

2349 
SQLITE_API
 *
sqlôe3_åa˚
(
sqlôe3
*, (*
xTø˚
)(*,const *), *);

2350 
SQLITE_API
 
SQLITE_EXPERIMENTAL
 *
sqlôe3_¥ofûe
(
sqlôe3
*,

2351 (*
xProfûe
)(*,c⁄° *,
sqlôe3_uöt64
), *);

2383 
SQLITE_API
 
sqlôe3_¥ogªss_h™dÀr
(
sqlôe3
*, , (*)(*), *);

2579 
SQLITE_API
 
sqlôe3_›í
(

2580 c⁄° *
fûíame
,

2581 
sqlôe3
 **
µDb


2583 
SQLITE_API
 
sqlôe3_›í16
(

2584 c⁄° *
fûíame
,

2585 
sqlôe3
 **
µDb


2587 
SQLITE_API
 
sqlôe3_›í_v2
(

2588 c⁄° *
fûíame
,

2589 
sqlôe3
 **
µDb
,

2590 
Êags
,

2591 c⁄° *
zVfs


2611 
SQLITE_API
 c⁄° *
sqlôe3_uri_∑ømëî
(c⁄° *
zFûíame
, c⁄° *
zP¨am
);

2647 
SQLITE_API
 
sqlôe3_îrcode
(
sqlôe3
 *
db
);

2648 
SQLITE_API
 
sqlôe3_exãnded_îrcode
(
sqlôe3
 *
db
);

2649 
SQLITE_API
 c⁄° *
sqlôe3_îrmsg
(
sqlôe3
*);

2650 
SQLITE_API
 c⁄° *
sqlôe3_îrmsg16
(
sqlôe3
*);

2676 
sqlôe3_°mt
 
	tsqlôe3_°mt
;

2717 
SQLITE_API
 
sqlôe3_limô
(
sqlôe3
*, 
id
, 
√wVÆ
);

2771 
	#SQLITE_LIMIT_LENGTH
 0

	)

2772 
	#SQLITE_LIMIT_SQL_LENGTH
 1

	)

2773 
	#SQLITE_LIMIT_COLUMN
 2

	)

2774 
	#SQLITE_LIMIT_EXPR_DEPTH
 3

	)

2775 
	#SQLITE_LIMIT_COMPOUND_SELECT
 4

	)

2776 
	#SQLITE_LIMIT_VDBE_OP
 5

	)

2777 
	#SQLITE_LIMIT_FUNCTION_ARG
 6

	)

2778 
	#SQLITE_LIMIT_ATTACHED
 7

	)

2779 
	#SQLITE_LIMIT_LIKE_PATTERN_LENGTH
 8

	)

2780 
	#SQLITE_LIMIT_VARIABLE_NUMBER
 9

	)

2781 
	#SQLITE_LIMIT_TRIGGER_DEPTH
 10

	)

2864 
SQLITE_API
 
sqlôe3_¥ï¨e
(

2865 
sqlôe3
 *
db
,

2866 c⁄° *
zSql
,

2867 
nByã
,

2868 
sqlôe3_°mt
 **
µStmt
,

2869 c⁄° **
pzTaû


2871 
SQLITE_API
 
sqlôe3_¥ï¨e_v2
(

2872 
sqlôe3
 *
db
,

2873 c⁄° *
zSql
,

2874 
nByã
,

2875 
sqlôe3_°mt
 **
µStmt
,

2876 c⁄° **
pzTaû


2878 
SQLITE_API
 
sqlôe3_¥ï¨e16
(

2879 
sqlôe3
 *
db
,

2880 c⁄° *
zSql
,

2881 
nByã
,

2882 
sqlôe3_°mt
 **
µStmt
,

2883 c⁄° **
pzTaû


2885 
SQLITE_API
 
sqlôe3_¥ï¨e16_v2
(

2886 
sqlôe3
 *
db
,

2887 c⁄° *
zSql
,

2888 
nByã
,

2889 
sqlôe3_°mt
 **
µStmt
,

2890 c⁄° **
pzTaû


2900 
SQLITE_API
 c⁄° *
sqlôe3_sql
(
sqlôe3_°mt
 *
pStmt
);

2931 
SQLITE_API
 
sqlôe3_°mt_ªad⁄ly
(
sqlôe3_°mt
 *
pStmt
);

2970 
Mem
 
	tsqlôe3_vÆue
;

2984 
sqlôe3_c⁄ãxt
 
	tsqlôe3_c⁄ãxt
;

3075 
SQLITE_API
 
sqlôe3_böd_blob
(
sqlôe3_°mt
*, , c⁄° *, 
n
, (*)(*));

3076 
SQLITE_API
 
sqlôe3_böd_doubÀ
(
sqlôe3_°mt
*, , );

3077 
SQLITE_API
 
sqlôe3_böd_öt
(
sqlôe3_°mt
*, , );

3078 
SQLITE_API
 
sqlôe3_böd_öt64
(
sqlôe3_°mt
*, , 
sqlôe3_öt64
);

3079 
SQLITE_API
 
sqlôe3_böd_nuŒ
(
sqlôe3_°mt
*, );

3080 
SQLITE_API
 
sqlôe3_böd_ãxt
(
sqlôe3_°mt
*, , c⁄° *, 
n
, (*)(*));

3081 
SQLITE_API
 
sqlôe3_böd_ãxt16
(
sqlôe3_°mt
*, , const *, , (*)(*));

3082 
SQLITE_API
 
sqlôe3_böd_vÆue
(
sqlôe3_°mt
*, , c⁄° 
sqlôe3_vÆue
*);

3083 
SQLITE_API
 
sqlôe3_böd_zîoblob
(
sqlôe3_°mt
*, , 
n
);

3103 
SQLITE_API
 
sqlôe3_böd_∑ømëî_cou¡
(
sqlôe3_°mt
*);

3130 
SQLITE_API
 c⁄° *
sqlôe3_böd_∑ømëî_«me
(
sqlôe3_°mt
*, );

3146 
SQLITE_API
 
sqlôe3_böd_∑ømëî_ödex
(
sqlôe3_°mt
*, c⁄° *
zName
);

3155 
SQLITE_API
 
sqlôe3_˛ór_bödögs
(
sqlôe3_°mt
*);

3166 
SQLITE_API
 
sqlôe3_cﬁumn_cou¡
(
sqlôe3_°mt
 *
pStmt
);

3194 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_«me
(
sqlôe3_°mt
*, 
N
);

3195 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_«me16
(
sqlôe3_°mt
*, 
N
);

3242 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_d©aba£_«me
(
sqlôe3_°mt
*,);

3243 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_d©aba£_«me16
(
sqlôe3_°mt
*,);

3244 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_èbÀ_«me
(
sqlôe3_°mt
*,);

3245 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_èbÀ_«me16
(
sqlôe3_°mt
*,);

3246 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_‹igö_«me
(
sqlôe3_°mt
*,);

3247 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_‹igö_«me16
(
sqlôe3_°mt
*,);

3278 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_de˛ty≥
(
sqlôe3_°mt
*,);

3279 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_de˛ty≥16
(
sqlôe3_°mt
*,);

3358 
SQLITE_API
 
sqlôe3_°ï
(
sqlôe3_°mt
*);

3378 
SQLITE_API
 
sqlôe3_d©a_cou¡
(
sqlôe3_°mt
 *
pStmt
);

3401 
	#SQLITE_INTEGER
 1

	)

3402 
	#SQLITE_FLOAT
 2

	)

3403 
	#SQLITE_BLOB
 4

	)

3404 
	#SQLITE_NULL
 5

	)

3405 #ifde‡
SQLITE_TEXT


3406 #unde‡
SQLITE_TEXT


3408 
	#SQLITE_TEXT
 3

	)

3410 
	#SQLITE3_TEXT
 3

	)

3574 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_blob
(
sqlôe3_°mt
*, 
iCﬁ
);

3575 
SQLITE_API
 
sqlôe3_cﬁumn_byãs
(
sqlôe3_°mt
*, 
iCﬁ
);

3576 
SQLITE_API
 
sqlôe3_cﬁumn_byãs16
(
sqlôe3_°mt
*, 
iCﬁ
);

3577 
SQLITE_API
 
sqlôe3_cﬁumn_doubÀ
(
sqlôe3_°mt
*, 
iCﬁ
);

3578 
SQLITE_API
 
sqlôe3_cﬁumn_öt
(
sqlôe3_°mt
*, 
iCﬁ
);

3579 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_cﬁumn_öt64
(
sqlôe3_°mt
*, 
iCﬁ
);

3580 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_ãxt
(
sqlôe3_°mt
*, 
iCﬁ
);

3581 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_ãxt16
(
sqlôe3_°mt
*, 
iCﬁ
);

3582 
SQLITE_API
 
sqlôe3_cﬁumn_ty≥
(
sqlôe3_°mt
*, 
iCﬁ
);

3583 
SQLITE_API
 
sqlôe3_vÆue
 *
sqlôe3_cﬁumn_vÆue
(
sqlôe3_°mt
*, 
iCﬁ
);

3610 
SQLITE_API
 
sqlôe3_föÆize
(
sqlôe3_°mt
 *
pStmt
);

3636 
SQLITE_API
 
sqlôe3_ª£t
(
sqlôe3_°mt
 *
pStmt
);

3726 
SQLITE_API
 
sqlôe3_¸óã_fun˘i⁄
(

3727 
sqlôe3
 *
db
,

3728 c⁄° *
zFun˘i⁄Name
,

3729 
nArg
,

3730 
eTextRï
,

3731 *
pAµ
,

3732 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

3733 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

3734 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*)

3736 
SQLITE_API
 
sqlôe3_¸óã_fun˘i⁄16
(

3737 
sqlôe3
 *
db
,

3738 c⁄° *
zFun˘i⁄Name
,

3739 
nArg
,

3740 
eTextRï
,

3741 *
pAµ
,

3742 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

3743 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

3744 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*)

3746 
SQLITE_API
 
sqlôe3_¸óã_fun˘i⁄_v2
(

3747 
sqlôe3
 *
db
,

3748 c⁄° *
zFun˘i⁄Name
,

3749 
nArg
,

3750 
eTextRï
,

3751 *
pAµ
,

3752 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

3753 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

3754 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*),

3755 (*
xDe°roy
)(*)

3764 
	#SQLITE_UTF8
 1

	)

3765 
	#SQLITE_UTF16LE
 2

	)

3766 
	#SQLITE_UTF16BE
 3

	)

3767 
	#SQLITE_UTF16
 4

	)

3768 
	#SQLITE_ANY
 5

	)

3769 
	#SQLITE_UTF16_ALIGNED
 8

	)

3781 #i‚de‡
SQLITE_OMIT_DEPRECATED


3782 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_aggªg©e_cou¡
(
sqlôe3_c⁄ãxt
*);

3783 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_expúed
(
sqlôe3_°mt
*);

3784 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_å™s„r_bödögs
(
sqlôe3_°mt
*, sqlite3_stmt*);

3785 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_globÆ_ªcovî
();

3786 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_thªad_˛ónup
();

3787 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_mem‹y_Æ¨m
((*)(*,
sqlôe3_öt64
,),*,sqlite3_int64);

3835 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_blob
(
sqlôe3_vÆue
*);

3836 
SQLITE_API
 
sqlôe3_vÆue_byãs
(
sqlôe3_vÆue
*);

3837 
SQLITE_API
 
sqlôe3_vÆue_byãs16
(
sqlôe3_vÆue
*);

3838 
SQLITE_API
 
sqlôe3_vÆue_doubÀ
(
sqlôe3_vÆue
*);

3839 
SQLITE_API
 
sqlôe3_vÆue_öt
(
sqlôe3_vÆue
*);

3840 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_vÆue_öt64
(
sqlôe3_vÆue
*);

3841 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_ãxt
(
sqlôe3_vÆue
*);

3842 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_ãxt16
(
sqlôe3_vÆue
*);

3843 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_ãxt16À
(
sqlôe3_vÆue
*);

3844 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_ãxt16be
(
sqlôe3_vÆue
*);

3845 
SQLITE_API
 
sqlôe3_vÆue_ty≥
(
sqlôe3_vÆue
*);

3846 
SQLITE_API
 
sqlôe3_vÆue_numîic_ty≥
(
sqlôe3_vÆue
*);

3887 
SQLITE_API
 *
sqlôe3_aggªg©e_c⁄ãxt
(
sqlôe3_c⁄ãxt
*, 
nByãs
);

3901 
SQLITE_API
 *
sqlôe3_u£r_d©a
(
sqlôe3_c⁄ãxt
*);

3912 
SQLITE_API
 
sqlôe3
 *
sqlôe3_c⁄ãxt_db_h™dÀ
(
sqlôe3_c⁄ãxt
*);

3956 
SQLITE_API
 *
sqlôe3_gë_auxd©a
(
sqlôe3_c⁄ãxt
*, 
N
);

3957 
SQLITE_API
 
sqlôe3_£t_auxd©a
(
sqlôe3_c⁄ãxt
*, 
N
, *, (*)(*));

3974 (*
sqlôe3_de°ru˘‹_ty≥
)(*);

3975 
	#SQLITE_STATIC
 ((
sqlôe3_de°ru˘‹_ty≥
)0)

	)

3976 
	#SQLITE_TRANSIENT
 ((
sqlôe3_de°ru˘‹_ty≥
)-1)

	)

4088 
SQLITE_API
 
sqlôe3_ªsu…_blob
(
sqlôe3_c⁄ãxt
*, const *, , (*)(*));

4089 
SQLITE_API
 
sqlôe3_ªsu…_doubÀ
(
sqlôe3_c⁄ãxt
*, );

4090 
SQLITE_API
 
sqlôe3_ªsu…_îr‹
(
sqlôe3_c⁄ãxt
*, const *, );

4091 
SQLITE_API
 
sqlôe3_ªsu…_îr‹16
(
sqlôe3_c⁄ãxt
*, const *, );

4092 
SQLITE_API
 
sqlôe3_ªsu…_îr‹_toobig
(
sqlôe3_c⁄ãxt
*);

4093 
SQLITE_API
 
sqlôe3_ªsu…_îr‹_nomem
(
sqlôe3_c⁄ãxt
*);

4094 
SQLITE_API
 
sqlôe3_ªsu…_îr‹_code
(
sqlôe3_c⁄ãxt
*, );

4095 
SQLITE_API
 
sqlôe3_ªsu…_öt
(
sqlôe3_c⁄ãxt
*, );

4096 
SQLITE_API
 
sqlôe3_ªsu…_öt64
(
sqlôe3_c⁄ãxt
*, 
sqlôe3_öt64
);

4097 
SQLITE_API
 
sqlôe3_ªsu…_nuŒ
(
sqlôe3_c⁄ãxt
*);

4098 
SQLITE_API
 
sqlôe3_ªsu…_ãxt
(
sqlôe3_c⁄ãxt
*, const *, , (*)(*));

4099 
SQLITE_API
 
sqlôe3_ªsu…_ãxt16
(
sqlôe3_c⁄ãxt
*, const *, , (*)(*));

4100 
SQLITE_API
 
sqlôe3_ªsu…_ãxt16À
(
sqlôe3_c⁄ãxt
*, const *, ,(*)(*));

4101 
SQLITE_API
 
sqlôe3_ªsu…_ãxt16be
(
sqlôe3_c⁄ãxt
*, const *, ,(*)(*));

4102 
SQLITE_API
 
sqlôe3_ªsu…_vÆue
(
sqlôe3_c⁄ãxt
*, 
sqlôe3_vÆue
*);

4103 
SQLITE_API
 
sqlôe3_ªsu…_zîoblob
(
sqlôe3_c⁄ãxt
*, 
n
);

4184 
SQLITE_API
 
sqlôe3_¸óã_cﬁœti⁄
(

4185 
sqlôe3
*,

4186 c⁄° *
zName
,

4187 
eTextRï
,

4188 *
pArg
,

4189 (*
xCom∑ª
)(*,,const *,,const *)

4191 
SQLITE_API
 
sqlôe3_¸óã_cﬁœti⁄_v2
(

4192 
sqlôe3
*,

4193 c⁄° *
zName
,

4194 
eTextRï
,

4195 *
pArg
,

4196 (*
xCom∑ª
)(*,,const *,,const *),

4197 (*
xDe°roy
)(*)

4199 
SQLITE_API
 
sqlôe3_¸óã_cﬁœti⁄16
(

4200 
sqlôe3
*,

4201 c⁄° *
zName
,

4202 
eTextRï
,

4203 *
pArg
,

4204 (*
xCom∑ª
)(*,,const *,,const *)

4233 
SQLITE_API
 
sqlôe3_cﬁœti⁄_√eded
(

4234 
sqlôe3
*,

4236 (*)(*,
sqlôe3
*,
eTextRï
,const *)

4238 
SQLITE_API
 
sqlôe3_cﬁœti⁄_√eded16
(

4239 
sqlôe3
*,

4241 (*)(*,
sqlôe3
*,
eTextRï
,const *)

4244 #ifde‡
SQLITE_HAS_CODEC


4252 
SQLITE_API
 
sqlôe3_key
(

4253 
sqlôe3
 *
db
,

4254 c⁄° *
pKey
, 
nKey


4265 
SQLITE_API
 
sqlôe3_ªkey
(

4266 
sqlôe3
 *
db
,

4267 c⁄° *
pKey
, 
nKey


4274 
SQLITE_API
 
sqlôe3_a˘iv©e_£e
(

4275 c⁄° *
zPassPhø£


4279 #ifde‡
SQLITE_ENABLE_CEROD


4284 
SQLITE_API
 
sqlôe3_a˘iv©e_˚rod
(

4285 c⁄° *
zPassPhø£


4306 
SQLITE_API
 
sqlôe3_¶ìp
();

4337 
SQLITE_API
 
SQLITE_EXTERN
 *
sqlôe3_ãmp_dúe˘‹y
;

4360 
SQLITE_API
 
sqlôe3_gë_autocommô
(
sqlôe3
*);

4372 
SQLITE_API
 
sqlôe3
 *
sqlôe3_db_h™dÀ
(
sqlôe3_°mt
*);

4387 
SQLITE_API
 
sqlôe3_°mt
 *
sqlôe3_√xt_°mt
(
sqlôe3
 *
pDb
, sqlôe3_°mà*
pStmt
);

4433 
SQLITE_API
 *
sqlôe3_commô_hook
(
sqlôe3
*, (*)(*), *);

4434 
SQLITE_API
 *
sqlôe3_rﬁlback_hook
(
sqlôe3
*, (*)(*), *);

4482 
SQLITE_API
 *
sqlôe3_upd©e_hook
(

4483 
sqlôe3
*,

4484 (*)(*,,c⁄° *,c⁄° *,
sqlôe3_öt64
),

4515 
SQLITE_API
 
sqlôe3_íabÀ_sh¨ed_ˇche
();

4529 
SQLITE_API
 
sqlôe3_ªÀa£_mem‹y
();

4580 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_so·_hóp_limô64
(sqlôe3_öt64 
N
);

4591 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_so·_hóp_limô
(
N
);

4656 
SQLITE_API
 
sqlôe3_èbÀ_cﬁumn_mëad©a
(

4657 
sqlôe3
 *
db
,

4658 c⁄° *
zDbName
,

4659 c⁄° *
zTabÀName
,

4660 c⁄° *
zCﬁumnName
,

4661 c⁄° **
pzD©aTy≥
,

4662 c⁄° **
pzCﬁlSeq
,

4663 *
pNŸNuŒ
,

4664 *
pPrim¨yKey
,

4665 *
pAutoöc


4693 
SQLITE_API
 
sqlôe3_lﬂd_exãnsi⁄
(

4694 
sqlôe3
 *
db
,

4695 c⁄° *
zFûe
,

4696 c⁄° *
zProc
,

4697 **
pzEºMsg


4713 
SQLITE_API
 
sqlôe3_íabÀ_lﬂd_exãnsi⁄
(
sqlôe3
 *
db
, 
⁄off
);

4750 
SQLITE_API
 
sqlôe3_auto_exãnsi⁄
((*
xE¡ryPoöt
)());

4758 
SQLITE_API
 
sqlôe3_ª£t_auto_exãnsi⁄
();

4772 
sqlôe3_vèb
 
	tsqlôe3_vèb
;

4773 
sqlôe3_ödex_öfo
 
	tsqlôe3_ödex_öfo
;

4774 
sqlôe3_vèb_curs‹
 
	tsqlôe3_vèb_curs‹
;

4775 
sqlôe3_moduÀ
 
	tsqlôe3_moduÀ
;

4793 
	ssqlôe3_moduÀ
 {

4794 
iVîsi⁄
;

4795 (*
xCª©e
)(
sqlôe3
*, *
pAux
,

4796 
¨gc
, c⁄° *c⁄°*
¨gv
,

4797 
sqlôe3_vèb
 **
µVTab
, **);

4798 (*
xC⁄√˘
)(
sqlôe3
*, *
pAux
,

4799 
¨gc
, c⁄° *c⁄°*
¨gv
,

4800 
sqlôe3_vèb
 **
µVTab
, **);

4801 (*
xBe°Index
)(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_ödex_öfo
*);

4802 (*
xDisc⁄√˘
)(
sqlôe3_vèb
 *
pVTab
);

4803 (*
xDe°roy
)(
sqlôe3_vèb
 *
pVTab
);

4804 (*
xO≥n
)(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
);

4805 (*
xClo£
)(
sqlôe3_vèb_curs‹
*);

4806 (*
xFûãr
)(
sqlôe3_vèb_curs‹
*, 
idxNum
, c⁄° *
idxSå
,

4807 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
);

4808 (*
xNext
)(
sqlôe3_vèb_curs‹
*);

4809 (*
xEof
)(
sqlôe3_vèb_curs‹
*);

4810 (*
xCﬁumn
)(
sqlôe3_vèb_curs‹
*, 
sqlôe3_c⁄ãxt
*, );

4811 (*
xRowid
)(
sqlôe3_vèb_curs‹
*, 
sqlôe3_öt64
 *
pRowid
);

4812 (*
xUpd©e
)(
sqlôe3_vèb
 *, , 
sqlôe3_vÆue
 **, 
sqlôe3_öt64
 *);

4813 (*
xBegö
)(
sqlôe3_vèb
 *
pVTab
);

4814 (*
xSync
)(
sqlôe3_vèb
 *
pVTab
);

4815 (*
xCommô
)(
sqlôe3_vèb
 *
pVTab
);

4816 (*
xRﬁlback
)(
sqlôe3_vèb
 *
pVTab
);

4817 (*
xFödFun˘i⁄
)(
sqlôe3_vèb
 *
pVèb
, 
nArg
, c⁄° *
zName
,

4818 (**
pxFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4819 **
µArg
);

4820 (*
xRíame
)(
sqlôe3_vèb
 *
pVèb
, c⁄° *
zNew
);

4823 (*
xSavïoöt
)(
sqlôe3_vèb
 *
pVTab
, );

4824 (*
xRñó£
)(
sqlôe3_vèb
 *
pVTab
, );

4825 (*
xRﬁlbackTo
)(
sqlôe3_vèb
 *
pVTab
, );

4881 
	ssqlôe3_ödex_öfo
 {

4883 
nC⁄°øöt
;

4884 
	ssqlôe3_ödex_c⁄°øöt
 {

4885 
iCﬁumn
;

4886 
›
;

4887 
ußbÀ
;

4888 
iTîmOff£t
;

4889 } *
aC⁄°øöt
;

4890 
nOrdîBy
;

4891 
	ssqlôe3_ödex_‹dîby
 {

4892 
iCﬁumn
;

4893 
desc
;

4894 } *
aOrdîBy
;

4896 
	ssqlôe3_ödex_c⁄°øöt_ußge
 {

4897 
¨gvIndex
;

4898 
omô
;

4899 } *
aC⁄°øötUßge
;

4900 
idxNum
;

4901 *
idxSå
;

4902 
√edToFªeIdxSå
;

4903 
‹dîByC⁄sumed
;

4904 
e°im©edCo°
;

4915 
	#SQLITE_INDEX_CONSTRAINT_EQ
 2

	)

4916 
	#SQLITE_INDEX_CONSTRAINT_GT
 4

	)

4917 
	#SQLITE_INDEX_CONSTRAINT_LE
 8

	)

4918 
	#SQLITE_INDEX_CONSTRAINT_LT
 16

	)

4919 
	#SQLITE_INDEX_CONSTRAINT_GE
 32

	)

4920 
	#SQLITE_INDEX_CONSTRAINT_MATCH
 64

	)

4947 
SQLITE_API
 
sqlôe3_¸óã_moduÀ
(

4948 
sqlôe3
 *
db
,

4949 c⁄° *
zName
,

4950 c⁄° 
sqlôe3_moduÀ
 *
p
,

4951 *
pClõ¡D©a


4953 
SQLITE_API
 
sqlôe3_¸óã_moduÀ_v2
(

4954 
sqlôe3
 *
db
,

4955 c⁄° *
zName
,

4956 c⁄° 
sqlôe3_moduÀ
 *
p
,

4957 *
pClõ¡D©a
,

4958 (*
xDe°roy
)(*)

4979 
	ssqlôe3_vèb
 {

4980 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
;

4981 
nRef
;

4982 *
zEºMsg
;

5003 
	ssqlôe3_vèb_curs‹
 {

5004 
sqlôe3_vèb
 *
pVèb
;

5016 
SQLITE_API
 
sqlôe3_de˛¨e_vèb
(
sqlôe3
*, c⁄° *
zSQL
);

5034 
SQLITE_API
 
sqlôe3_ovîlﬂd_fun˘i⁄
(
sqlôe3
*, c⁄° *
zFuncName
, 
nArg
);

5058 
sqlôe3_blob
 
	tsqlôe3_blob
;

5116 
SQLITE_API
 
sqlôe3_blob_›í
(

5117 
sqlôe3
*,

5118 c⁄° *
zDb
,

5119 c⁄° *
zTabÀ
,

5120 c⁄° *
zCﬁumn
,

5121 
sqlôe3_öt64
 
iRow
,

5122 
Êags
,

5123 
sqlôe3_blob
 **
µBlob


5148 
SQLITE_API
 
SQLITE_EXPERIMENTAL
 
sqlôe3_blob_ª›í
(
sqlôe3_blob
 *, 
sqlôe3_öt64
);

5172 
SQLITE_API
 
sqlôe3_blob_˛o£
(
sqlôe3_blob
 *);

5187 
SQLITE_API
 
sqlôe3_blob_byãs
(
sqlôe3_blob
 *);

5215 
SQLITE_API
 
sqlôe3_blob_ªad
(
sqlôe3_blob
 *, *
Z
, 
N
, 
iOff£t
);

5253 
SQLITE_API
 
sqlôe3_blob_wrôe
(
sqlôe3_blob
 *, c⁄° *
z
, 
n
, 
iOff£t
);

5284 
SQLITE_API
 
sqlôe3_vfs
 *
sqlôe3_vfs_föd
(c⁄° *
zVfsName
);

5285 
SQLITE_API
 
sqlôe3_vfs_ªgi°î
(
sqlôe3_vfs
*, 
makeDÊt
);

5286 
SQLITE_API
 
sqlôe3_vfs_uƒegi°î
(
sqlôe3_vfs
*);

5402 
SQLITE_API
 
sqlôe3_muãx
 *
sqlôe3_muãx_Æloc
();

5403 
SQLITE_API
 
sqlôe3_muãx_‰ì
(
sqlôe3_muãx
*);

5404 
SQLITE_API
 
sqlôe3_muãx_íãr
(
sqlôe3_muãx
*);

5405 
SQLITE_API
 
sqlôe3_muãx_åy
(
sqlôe3_muãx
*);

5406 
SQLITE_API
 
sqlôe3_muãx_Àave
(
sqlôe3_muãx
*);

5473 
sqlôe3_muãx_mëhods
 
	tsqlôe3_muãx_mëhods
;

5474 
	ssqlôe3_muãx_mëhods
 {

5475 (*
xMuãxInô
)();

5476 (*
xMuãxEnd
)();

5477 
sqlôe3_muãx
 *(*
xMuãxAŒoc
)();

5478 (*
xMuãxFªe
)(
sqlôe3_muãx
 *);

5479 (*
xMuãxE¡î
)(
sqlôe3_muãx
 *);

5480 (*
xMuãxTry
)(
sqlôe3_muãx
 *);

5481 (*
xMuãxLóve
)(
sqlôe3_muãx
 *);

5482 (*
xMuãxHñd
)(
sqlôe3_muãx
 *);

5483 (*
xMuãxNŸhñd
)(
sqlôe3_muãx
 *);

5515 #i‚de‡
NDEBUG


5516 
SQLITE_API
 
sqlôe3_muãx_hñd
(
sqlôe3_muãx
*);

5517 
SQLITE_API
 
sqlôe3_muãx_nŸhñd
(
sqlôe3_muãx
*);

5530 
	#SQLITE_MUTEX_FAST
 0

	)

5531 
	#SQLITE_MUTEX_RECURSIVE
 1

	)

5532 
	#SQLITE_MUTEX_STATIC_MASTER
 2

	)

5533 
	#SQLITE_MUTEX_STATIC_MEM
 3

	)

5534 
	#SQLITE_MUTEX_STATIC_MEM2
 4

	)

5535 
	#SQLITE_MUTEX_STATIC_OPEN
 4

	)

5536 
	#SQLITE_MUTEX_STATIC_PRNG
 5

	)

5537 
	#SQLITE_MUTEX_STATIC_LRU
 6

	)

5538 
	#SQLITE_MUTEX_STATIC_LRU2
 7

	)

5539 
	#SQLITE_MUTEX_STATIC_PMEM
 7

	)

5550 
SQLITE_API
 
sqlôe3_muãx
 *
sqlôe3_db_muãx
(
sqlôe3
*);

5584 
SQLITE_API
 
sqlôe3_fûe_c⁄åﬁ
(
sqlôe3
*, c⁄° *
zDbName
, 
›
, *);

5603 
SQLITE_API
 
sqlôe3_ã°_c⁄åﬁ
(
›
, ...);

5616 
	#SQLITE_TESTCTRL_FIRST
 5

	)

5617 
	#SQLITE_TESTCTRL_PRNG_SAVE
 5

	)

5618 
	#SQLITE_TESTCTRL_PRNG_RESTORE
 6

	)

5619 
	#SQLITE_TESTCTRL_PRNG_RESET
 7

	)

5620 
	#SQLITE_TESTCTRL_BITVEC_TEST
 8

	)

5621 
	#SQLITE_TESTCTRL_FAULT_INSTALL
 9

	)

5622 
	#SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS
 10

	)

5623 
	#SQLITE_TESTCTRL_PENDING_BYTE
 11

	)

5624 
	#SQLITE_TESTCTRL_ASSERT
 12

	)

5625 
	#SQLITE_TESTCTRL_ALWAYS
 13

	)

5626 
	#SQLITE_TESTCTRL_RESERVE
 14

	)

5627 
	#SQLITE_TESTCTRL_OPTIMIZATIONS
 15

	)

5628 
	#SQLITE_TESTCTRL_ISKEYWORD
 16

	)

5629 
	#SQLITE_TESTCTRL_PGHDRSZ
 17

	)

5630 
	#SQLITE_TESTCTRL_SCRATCHMALLOC
 18

	)

5631 
	#SQLITE_TESTCTRL_LOCALTIME_FAULT
 19

	)

5632 
	#SQLITE_TESTCTRL_LAST
 19

	)

5663 
SQLITE_API
 
sqlôe3_°©us
(
›
, *
pCuºít
, *
pHighw©î
, 
ª£tFœg
);

5748 
	#SQLITE_STATUS_MEMORY_USED
 0

	)

5749 
	#SQLITE_STATUS_PAGECACHE_USED
 1

	)

5750 
	#SQLITE_STATUS_PAGECACHE_OVERFLOW
 2

	)

5751 
	#SQLITE_STATUS_SCRATCH_USED
 3

	)

5752 
	#SQLITE_STATUS_SCRATCH_OVERFLOW
 4

	)

5753 
	#SQLITE_STATUS_MALLOC_SIZE
 5

	)

5754 
	#SQLITE_STATUS_PARSER_STACK
 6

	)

5755 
	#SQLITE_STATUS_PAGECACHE_SIZE
 7

	)

5756 
	#SQLITE_STATUS_SCRATCH_SIZE
 8

	)

5757 
	#SQLITE_STATUS_MALLOC_COUNT
 9

	)

5781 
SQLITE_API
 
sqlôe3_db_°©us
(
sqlôe3
*, 
›
, *
pCur
, *
pHiwå
, 
ª£tFlg
);

5856 
	#SQLITE_DBSTATUS_LOOKASIDE_USED
 0

	)

5857 
	#SQLITE_DBSTATUS_CACHE_USED
 1

	)

5858 
	#SQLITE_DBSTATUS_SCHEMA_USED
 2

	)

5859 
	#SQLITE_DBSTATUS_STMT_USED
 3

	)

5860 
	#SQLITE_DBSTATUS_LOOKASIDE_HIT
 4

	)

5861 
	#SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE
 5

	)

5862 
	#SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL
 6

	)

5863 
	#SQLITE_DBSTATUS_CACHE_HIT
 7

	)

5864 
	#SQLITE_DBSTATUS_CACHE_MISS
 8

	)

5865 
	#SQLITE_DBSTATUS_MAX
 8

	)

5891 
SQLITE_API
 
sqlôe3_°mt_°©us
(
sqlôe3_°mt
*, 
›
,
ª£tFlg
);

5921 
	#SQLITE_STMTSTATUS_FULLSCAN_STEP
 1

	)

5922 
	#SQLITE_STMTSTATUS_SORT
 2

	)

5923 
	#SQLITE_STMTSTATUS_AUTOINDEX
 3

	)

5936 
sqlôe3_pˇche
 
	tsqlôe3_pˇche
;

6088 
sqlôe3_pˇche_mëhods
 
	tsqlôe3_pˇche_mëhods
;

6089 
	ssqlôe3_pˇche_mëhods
 {

6090 *
pArg
;

6091 (*
xInô
)(*);

6092 (*
xShutdown
)(*);

6093 
sqlôe3_pˇche
 *(*
xCª©e
)(
szPage
, 
bPurgóbÀ
);

6094 (*
xCachesize
)(
sqlôe3_pˇche
*, 
nCachesize
);

6095 (*
xPagecou¡
)(
sqlôe3_pˇche
*);

6096 *(*
xFëch
)(
sqlôe3_pˇche
*, 
key
, 
¸óãFœg
);

6097 (*
xU≈ö
)(
sqlôe3_pˇche
*, *, 
disˇrd
);

6098 (*
xRekey
)(
sqlôe3_pˇche
*, *, 
ﬁdKey
, 
√wKey
);

6099 (*
xTrunˇã
)(
sqlôe3_pˇche
*, 
iLimô
);

6100 (*
xDe°roy
)(
sqlôe3_pˇche
*);

6113 
sqlôe3_backup
 
	tsqlôe3_backup
;

6297 
SQLITE_API
 
sqlôe3_backup
 *
sqlôe3_backup_öô
(

6298 
sqlôe3
 *
pDe°
,

6299 c⁄° *
zDe°Name
,

6300 
sqlôe3
 *
pSour˚
,

6301 c⁄° *
zSour˚Name


6303 
SQLITE_API
 
sqlôe3_backup_°ï
(
sqlôe3_backup
 *
p
, 
nPage
);

6304 
SQLITE_API
 
sqlôe3_backup_föish
(
sqlôe3_backup
 *
p
);

6305 
SQLITE_API
 
sqlôe3_backup_ªmaöög
(
sqlôe3_backup
 *
p
);

6306 
SQLITE_API
 
sqlôe3_backup_∑gecou¡
(
sqlôe3_backup
 *
p
);

6422 
SQLITE_API
 
sqlôe3_u∆ock_nŸify
(

6423 
sqlôe3
 *
pBlocked
,

6424 (*
xNŸify
)(**
≠Arg
, 
nArg
),

6425 *
pNŸifyArg


6437 
SQLITE_API
 
sqlôe3_°∫icmp
(const *, const *, );

6460 
SQLITE_API
 
sqlôe3_log
(
iEºCode
, c⁄° *
zF‹m©
, ...);

6497 
SQLITE_API
 *
sqlôe3_wÆ_hook
(

6498 
sqlôe3
*,

6499 (*)(*,
sqlôe3
*,const *,),

6528 
SQLITE_API
 
sqlôe3_wÆ_autocheckpoöt
(
sqlôe3
 *
db
, 
N
);

6546 
SQLITE_API
 
sqlôe3_wÆ_checkpoöt
(
sqlôe3
 *
db
, c⁄° *
zDb
);

6618 
SQLITE_API
 
sqlôe3_wÆ_checkpoöt_v2
(

6619 
sqlôe3
 *
db
,

6620 c⁄° *
zDb
,

6621 
eMode
,

6622 *
≤Log
,

6623 *
≤Ck±


6634 
	#SQLITE_CHECKPOINT_PASSIVE
 0

	)

6635 
	#SQLITE_CHECKPOINT_FULL
 1

	)

6636 
	#SQLITE_CHECKPOINT_RESTART
 2

	)

6652 
SQLITE_API
 
sqlôe3_vèb_c⁄fig
(
sqlôe3
*, 
›
, ...);

6693 
	#SQLITE_VTAB_CONSTRAINT_SUPPORT
 1

	)

6705 
SQLITE_API
 
sqlôe3_vèb_⁄_c⁄Êi˘
(
sqlôe3
 *);

6718 
	#SQLITE_ROLLBACK
 1

	)

6720 
	#SQLITE_FAIL
 3

	)

6722 
	#SQLITE_REPLACE
 5

	)

6730 #ifde‡
SQLITE_OMIT_FLOATING_POINT


6734 #ifde‡
__˝lu•lus


6752 #i‚de‡
_SQLITE3RTREE_H_


6753 
	#_SQLITE3RTREE_H_


	)

6756 #ifde‡
__˝lu•lus


6760 
sqlôe3_πªe_geomëry
 
	tsqlôe3_πªe_geomëry
;

6768 
SQLITE_API
 
sqlôe3_πªe_geomëry_ˇŒback
(

6769 
sqlôe3
 *
db
,

6770 c⁄° *
zGeom
,

6771 (*
xGeom
)(
sqlôe3_πªe_geomëry
 *, 
nCo‹d
, *
aCo‹d
, *
pRes
),

6772 *
pC⁄ãxt


6780 
	ssqlôe3_πªe_geomëry
 {

6781 *
pC⁄ãxt
;

6782 
nP¨am
;

6783 *
aP¨am
;

6784 *
pU£r
;

6785 (*
xDñU£r
)(*);

6789 #ifde‡
__˝lu•lus


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


148 
	#P_tmpdú
 "/tmp"

	)

161 
	~<bôs/°dio_lim.h
>

165 
_IO_FILE
 *
°dö
;

166 
_IO_FILE
 *
°dout
;

167 
_IO_FILE
 *
°dîr
;

169 
	#°dö
 
°dö


	)

170 
	#°dout
 
°dout


	)

171 
	#°dîr
 
°dîr


	)

173 
__BEGIN_NAMESPACE_STD


175 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

177 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

178 
__END_NAMESPACE_STD


180 #ifde‡
__USE_ATFILE


182 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

183 
__c⁄°
 *
__√w
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


191 #i‚de‡
__USE_FILE_OFFSET64


192 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

194 #ifde‡
__REDIRECT


195 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

197 
	#tmpfûe
 
tmpfûe64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

206 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

207 
__END_NAMESPACE_STD


209 #ifde‡
__USE_MISC


212 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

216 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


224 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

225 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

229 
__BEGIN_NAMESPACE_STD


234 
	`f˛o£
 (
FILE
 *
__°ªam
);

239 
	`fÊush
 (
FILE
 *
__°ªam
);

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_MISC


249 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

252 #ifde‡
__USE_GNU


259 
	`f˛o£Æl
 ();

263 
__BEGIN_NAMESPACE_STD


264 #i‚de‡
__USE_FILE_OFFSET64


269 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

270 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

275 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

276 
__c⁄°
 *
__ª°ri˘
 
__modes
,

277 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

279 #ifde‡
__REDIRECT


280 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

281 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

282 
__wur
;

283 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

284 
__c⁄°
 *
__ª°ri˘
 
__modes
,

285 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

286 
__wur
;

288 
	#f›í
 
f›í64


	)

289 
	#‰e›í
 
‰e›í64


	)

292 
__END_NAMESPACE_STD


293 #ifde‡
__USE_LARGEFILE64


294 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

295 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

296 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

297 
__c⁄°
 *
__ª°ri˘
 
__modes
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 #ifdef 
__USE_POSIX


303 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

306 #ifdef 
__USE_GNU


309 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

310 
__c⁄°
 *
__ª°ri˘
 
__modes
,

311 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

314 #ifde‡
__USE_XOPEN2K8


316 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

317 
__THROW
 
__wur
;

322 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

326 
__BEGIN_NAMESPACE_STD


329 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

333 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

334 
__modes
, 
size_t
 
__n
Ë
__THROW
;

335 
__END_NAMESPACE_STD


337 #ifdef 
__USE_BSD


340 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

341 
size_t
 
__size
Ë
__THROW
;

344 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

348 
__BEGIN_NAMESPACE_STD


353 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

354 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

359 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

361 
	$•rötf
 (*
__ª°ri˘
 
__s
,

362 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

368 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

369 
_G_va_li°
 
__¨g
);

374 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

376 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

377 
_G_va_li°
 
__¨g
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


381 
__BEGIN_NAMESPACE_C99


383 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

384 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

385 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

387 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

389 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

390 
__END_NAMESPACE_C99


393 #ifde‡
__USE_GNU


396 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

397 
_G_va_li°
 
__¨g
)

398 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

399 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

400 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

401 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

402 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

403 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

404 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

407 #ifde‡
__USE_XOPEN2K8


414 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

415 
_G_va_li°
 
__¨g
)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

417 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

418 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

422 
__BEGIN_NAMESPACE_STD


427 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

428 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

435 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

436 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

438 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

439 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

440 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

441 #ifde‡
__REDIRECT


445 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

446 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_fsˇnf
Ë
__wur
;

448 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

449 
__isoc99_sˇnf
Ë
__wur
;

450 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

451 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

452 
__isoc99_ssˇnf
);

454 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

456 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

457 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

458 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

459 
	#fsˇnf
 
__isoc99_fsˇnf


	)

460 
	#sˇnf
 
__isoc99_sˇnf


	)

461 
	#ssˇnf
 
__isoc99_ssˇnf


	)

465 
__END_NAMESPACE_STD


467 #ifdef 
__USE_ISOC99


468 
__BEGIN_NAMESPACE_C99


473 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

474 
_G_va_li°
 
__¨g
)

475 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

481 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

482 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

485 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

486 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

487 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

489 #i‡!
deföed
 
__USE_GNU
 \

490 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

491 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

492 #ifde‡
__REDIRECT


496 
	`__REDIRECT
 (
vfsˇnf
,

497 (
FILE
 *
__ª°ri˘
 
__s
,

498 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

499 
__isoc99_vfsˇnf
)

500 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

501 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

502 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

503 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

504 
	`__REDIRECT_NTH
 (
vssˇnf
,

505 (
__c⁄°
 *
__ª°ri˘
 
__s
,

506 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

507 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

508 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

510 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

511 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

514 
_G_va_li°
 
__¨g
Ë
__wur
;

515 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

516 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

517 
_G_va_li°
 
__¨g
Ë
__THROW
;

518 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

519 
	#vsˇnf
 
__isoc99_vsˇnf


	)

520 
	#vssˇnf
 
__isoc99_vssˇnf


	)

524 
__END_NAMESPACE_C99


528 
__BEGIN_NAMESPACE_STD


533 
	`fgëc
 (
FILE
 *
__°ªam
);

534 
	`gëc
 (
FILE
 *
__°ªam
);

540 
	`gëch¨
 ();

541 
__END_NAMESPACE_STD


545 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

547 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


552 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

553 
	`gëch¨_u∆ocked
 ();

556 #ifde‡
__USE_MISC


563 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

567 
__BEGIN_NAMESPACE_STD


575 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

576 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

582 
	`putch¨
 (
__c
);

583 
__END_NAMESPACE_STD


587 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

589 #ifde‡
__USE_MISC


596 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

599 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


604 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

605 
	`putch¨_u∆ocked
 (
__c
);

609 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

610 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

612 
	`gëw
 (
FILE
 *
__°ªam
);

615 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

619 
__BEGIN_NAMESPACE_STD


624 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

625 
__wur
;

632 *
	$gës
 (*
__s
Ë
__wur
;

633 
__END_NAMESPACE_STD


635 #ifde‡
__USE_GNU


642 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

643 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

647 #ifdef 
__USE_XOPEN2K8


658 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

659 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

660 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

661 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

662 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

663 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

671 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

672 
size_t
 *
__ª°ri˘
 
__n
,

673 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

677 
__BEGIN_NAMESPACE_STD


682 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

688 
	`puts
 (
__c⁄°
 *
__s
);

695 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

702 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

703 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

708 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

709 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

710 
__END_NAMESPACE_STD


712 #ifde‡
__USE_GNU


719 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

720 
FILE
 *
__ª°ri˘
 
__°ªam
);

723 #ifde‡
__USE_MISC


730 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

731 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

732 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

733 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

737 
__BEGIN_NAMESPACE_STD


742 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

747 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

752 
	`ªwöd
 (
FILE
 *
__°ªam
);

753 
__END_NAMESPACE_STD


760 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


761 #i‚de‡
__USE_FILE_OFFSET64


766 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

771 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

773 #ifde‡
__REDIRECT


774 
	`__REDIRECT
 (
f£eko
,

775 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

776 
f£eko64
);

777 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

779 
	#f£eko
 
f£eko64


	)

780 
	#·ñlo
 
·ñlo64


	)

785 
__BEGIN_NAMESPACE_STD


786 #i‚de‡
__USE_FILE_OFFSET64


791 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

796 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

798 #ifde‡
__REDIRECT


799 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

800 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

801 
	`__REDIRECT
 (
f£ços
,

802 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

804 
	#fgëpos
 
fgëpos64


	)

805 
	#f£ços
 
f£ços64


	)

808 
__END_NAMESPACE_STD


810 #ifde‡
__USE_LARGEFILE64


811 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

812 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

813 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

814 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

817 
__BEGIN_NAMESPACE_STD


819 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

821 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

823 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

824 
__END_NAMESPACE_STD


826 #ifde‡
__USE_MISC


828 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

829 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
__BEGIN_NAMESPACE_STD


839 
	`≥º‹
 (
__c⁄°
 *
__s
);

840 
__END_NAMESPACE_STD


846 
	~<bôs/sys_îæi°.h
>

849 #ifdef 
__USE_POSIX


851 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

854 #ifde‡
__USE_MISC


856 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

860 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

861 
deföed
 
__USE_MISC
)

866 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

872 
	`p˛o£
 (
FILE
 *
__°ªam
);

876 #ifdef 
__USE_POSIX


878 *
	$˘îmid
 (*
__s
Ë
__THROW
;

882 #ifde‡
__USE_XOPEN


884 *
	`cu£rid
 (*
__s
);

888 #ifdef 
__USE_GNU


889 
ob°ack
;

892 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

893 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

894 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

895 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

896 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

897 
_G_va_li°
 
__¨gs
)

898 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

902 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


906 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

910 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

913 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


920 
	#__√ed_gë›t


	)

921 
	~<gë›t.h
>

926 #ifde‡
__USE_EXTERN_INLINES


927 
	~<bôs/°dio.h
>

929 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


930 
	~<bôs/°dio2.h
>

932 #ifde‡
__LDBL_COMPAT


933 
	~<bôs/°dio-ldbl.h
>

936 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@controlador/callbacks.h

8 #i‚de‡
_CALLBACKS_H


9 
	#_CALLBACKS_H


	)

10 
	~<cdk/m©rix.h
>

11 
	~<cdk/ÆphÆi°.h
>

12 
	~"../d©os/d©os.h
"

13 
	#£t_cﬁ
(
n
, 
width
, 
°rög
) \

14 
cﬁtôÀ
[
n
] = 
°rög
; 
cﬁwidth
[n] = 
width
 ; 
cﬁvÆue
[n] = 
vMIXED


	)

15 
	#£t_row
(
n
, 
°rög
) \

16 
rowtôÀ
[
n
] = "</B/6>" 
°rög


	)

17 
	#vcﬁs
 1

	)

18 
CDKMATRIX
 *
	gm©riz
;

19 
CDKALPHALIST
 *
	gli°ado
;

20 
ˇŒback_ªg
(*
NŸU£d
, 
¨gc
, **
¨gv
, **
azCﬁName
);

21 
ˇŒ_cﬁum«s
(*
NŸU£d
, 
¨gc
, **
¨gv
, **
azCﬁName
);

22 
ˇŒ_èbœ
(*
nombª
, 
¨gc
, **
¨gv
, **
azCﬁName
);

23 
ˇŒback_ªgi°ro
(*
nombª
, 
¨gc
, **
¨gv
, **
azCﬁName
);

24 
ˇŒback_li°a
(*
nombª
, 
¨gc
, **
¨gv
, **
azCﬁName
);

26 #ifdef 
__˝lu•lus


33 #ifdef 
__˝lu•lus


	@controlador/config.h

8 #i‚de‡
_CONFIG_H


9 
	#_CONFIG_H


	)

10 
	~<cdk.h
>

11 
	~<cdk_utû.h
>

14 
CDKSCREEN
 *
	gcdkS¸ìn
;

15 #ifdef 
__˝lu•lus


22 #ifdef 
__˝lu•lus


	@controlador/formularios.h

8 #i‚de‡
_FORMULARIOS_H


9 
	#_FORMULARIOS_H


	)

10 
	~<cdk/cdk.h
>

11 
	~"../d©os/d©os.h
"

12 
	#£t_cﬁ
(
n
, 
width
, 
°rög
) \

13 
cﬁtôÀ
[
n
] = 
°rög
; 
cﬁwidth
[n] = 
width
 ; 
cﬁvÆue
[n] = 
vMIXED


14 
	#£t_row
(
n
, 
°rög
) \

15 
rowtôÀ
[
n
] = "</B/6>" 
°rög


	)

16 
	#vcﬁs
 1

	)

19 
	gfûas
;

20 
	gcﬁum«s
 ;

21 
	gvrows
 ;

22 *
	gcﬁtôÀ
[10], *
	growtôÀ
[10], *
	gmesg
[10];

23 
	gcﬁwidth
[10], 
	gcﬁvÆue
[10];

27 
vî_èbœ
(*
nombª
);

28 
CDKMATRIX
 *
f‹muœrio
(*
èbœ
);

31 #ifdef 
__˝lu•lus


38 #ifdef 
__˝lu•lus


	@controlador/principal.h

8 #i‚de‡
_PRINCIPAL_H


9 
	#_PRINCIPAL_H


	)

10 
	~<cur£s.h
>

11 
	~<cdk.h
>

12 
	~"c⁄fig.h
"

13 
íåada
();

15 
¥oducci⁄
();

16 
admöi°øci⁄
();

18 #ifdef 
__˝lu•lus


25 #ifdef 
__˝lu•lus


	@datos/clientes.h

8 #i‚de‡
_CLIENTES_H


9 
	#_CLIENTES_H


	)

10 
	~"tùos.h
"

12 
agªg¨_˛õ¡e
(
CLIENTE
 *
˛õ¡e
);

13 
b‹ør_˛õ¡e
(*
˛õ¡e_id
);

14 
modifiˇr_˛õ¡e
(*
˛õ¡e_id
, 
CLIENTE
 *
nuevo
);

15 
busˇr_˛õ¡e
(*
ˇmpo
, *
vÆ‹
);

16 
CLIENTE
 *
li°¨_˛õ¡es
();

17 
mo°ør
(*
NŸU£d
, 
¨gc
, **
¨gv
, **
azCﬁName
);

18 #ifdef 
__˝lu•lus


25 #ifdef 
__˝lu•lus


	@datos/datos.h

8 #i‚de‡
_DATOS_H


9 
	#_DATOS_H


	)

10 #i‚de‡
_CONSULTAS_H


11 
	~<cdk/ÆphÆi°.h
>

12 
	~"c⁄su…as.h
"

14 
	~<sqlôe3.h
>

15 
	#BASE
 "ba£.sqlôe"

	)

16 
sqlôe3
 *
	gc⁄exi⁄
;

17 
sqlôe3
 *
c⁄e˘¨
(* 
nombª
);

18 *
	gîr‹
;

19 
desc⁄e˘¨
();

20 
busˇr_ªgi°ro
(*
èbœ
,*
nombª
,*
vÆ‹
,*
ˇŒback
,*
exåa
);

21 
b‹ør_ªgi°ro
(*
èbœ
,*
id
);

22 
li°¨_ªgi°ros
(*
èbœ
,* 
ˇŒback
,*
exåa
);

25 #ifdef 
__˝lu•lus


32 #ifdef 
__˝lu•lus


	@datos/tipos.h

8 #i‚de‡
_TIPOS_H


9 
	#_TIPOS_H


	)

11 
	st_˛õ¡e


15 
	m˛õ¡e_id
[15];

16 
	mnombª
[255];

17 
	mãÀf⁄o
[15];

18 
	mdúecci⁄
[255];

20 
	memaû
[63];

23 } 
	tCLIENTE
;

26 
	st_¥odu˘o_ãrmöado
 {

27 
	m¥odu˘o_ãrmöado_id
[15];

28 
	mlŸe
[255];

29 
	mm©îül
[255];

30 
	mˇ¡idad
;

31 
	mIR
[255];

32 
	mRMP
[15] ;

33 
	mCC
[255];

34 
	mIO
[255] ;

35 
	mid_¥odu˘o
[15] ;

36 
	mdes¸ùci⁄
 [510];

37 
	mid_‹dí_¥oducci⁄
[15];

38 
	memisi⁄_¨ó_¥odu˘iva
[510];

39 
	mª•⁄ßbÀ_¨ó_¥odu˘iva
[15];

40 
	memisi⁄_¨ó_ã˙iˇ
[255];

41 
	mª•⁄ßbÀ_¨ó_ã˙iˇ
[15];

42 
	mvícimõ¡o
[31] ;

43 } 
	tPRODUCTO_TERMINADO
;

47 
	st_¥ogøma_¥oducci⁄
 {

48 
	m¥ogøma_¥oducci⁄_id
[15];

49 
	mid_‹dí_¥oducci⁄
[15];

50 
	mˇ¡idad
 ;

51 
	m„cha_com¥omëida
[15];

52 
	mid_˛õ¡e
[15];

53 
	mª•⁄ßbÀ
[255] ;

54 
	m¥oducci⁄
[255];

60 } 
	tPROGRAMA_PRODUCCION
;

62 
	st_¥ovìd‹


64 
	m¥ovìd‹_id
[15];

65 
	mnombª
[255];

66 
	mãÀf⁄o
[15];

67 
	mdúecci⁄
[255];

68 
	memaû
[63];

70 } 
	tPROVEEDOR
;

72 
	st_ã˙ico


74 
	mã˙ico_id
[15];

75 
	mnombª
[255];

76 
	mãÀf⁄o
[15];

77 
	mdúecci⁄
[255];

78 
	memaû
[63];

80 
	m¨ó
[255];

82 } 
	tTECNICO
;

90 
	st_rmp


92 
	m¥odu˘o_id
[15];

93 
	mª„ªncüs
[255];

94 
	mc⁄åﬁ_ˇlidad
[255];

95 
	mö°rucci⁄_›î©iva
[255];

96 
	mdes¸ùci⁄
[255];

97 
	mˇ¡idad_m©îü_¥ima
;

98 
	mdes¸ùci⁄_m©îü_¥ima
[255];

99 
	mˇ¡idad_ösumo
;

100 
	mdes¸ùci⁄_ösumo_¥odu˘ivo
[255];

101 
	mdes¸ùci⁄_¥odu˘o_£mõœb‹ado
[255];

103 } 
	tRMP
;

130 
	st_ösumo
{

131 
	mIR
[15];

132 
	mösumo_¥odu˘ivo
;

133 
	m¥odu˘o_£mi_ñab‹ado
;

134 
	m„cha_ögªso
[31];

135 
	mdes¸ùci⁄
[510];

136 
	mˇ¡idad
;

137 
	mob£vaci⁄_sim∂e_vi°a
[510];

138 
	membÆaje
[255];

139 
	må™•‹ã
[255];

140 
	mdocumítos_m©îül_adju¡o
[255];

141 
	m„cha_de_c⁄åﬁ
[31];

142 
	mª•⁄ßbÀ
[15];

143 
	mid_¥ovìd‹
[15];

145 } 
	tINSUMO
;

148 #ifdef 
__˝lu•lus


168 #ifdef 
__˝lu•lus


	@vista/clientes/clientes.h

8 #i‚de‡
_CLIENTES_H


10 
	#_CLIENTES_H


	)

11 
	~<cdk.h
>

12 
	~"../../c⁄åﬁad‹/c⁄fig.h
"

14 
míu_˛õ¡es
(
CDKSCREEN
 *
∑¡Æœ
);

15 
Æè_˛õ¡e
(
CDKSCREEN
 *
∑¡Æœ
);

16 
baja_˛õ¡e
(
CDKSCREEN
 *
∑¡Æœ
);

18 
˛õ¡es
();

20 #ifdef 
__˝lu•lus


27 #ifdef 
__˝lu•lus


	@vista/info.h

8 #i‚de‡
_INFO_H


9 
	#_INFO_H


	)

10 
	~<cdk/cdk.h
>

11 
mo°ør_öfo
(
CDKSCREEN
 *
cdkS¸ìn
 );

12 #ifdef 
__˝lu•lus


19 #ifdef 
__˝lu•lus


	@vista/proveedores/proveedores.h

8 #i‚de‡
_PROVEEDORES_H


9 
	#_PROVEEDORES_H


	)

10 
	~<cdk.h
>

11 
	~"../../c⁄åﬁad‹/c⁄fig.h
"

13 
míu_¥ovìd‹es
(
CDKSCREEN
 *
cdkS¸ìn
);

14 
Æè_¥ovìd‹
(
CDKSCREEN
 *
∑¡Æœ
);

15 
baja_¥ovìd‹
(
CDKSCREEN
 *
∑¡Æœ
);

16 
¥ovìd‹es
();

19 #ifdef 
__˝lu•lus


26 #ifdef 
__˝lu•lus


	@vista/scroll.h

8 #i‚de‡
_SCROLL_H


9 
	#_SCROLL_H


	)

10 
	~"../c⁄åﬁad‹/c⁄fig.h
"

11 
míu_s¸ﬁl
(
CDKSCREEN
 *
cdkS¸ìn
);

12 
mo°ør_s¸ﬁl
(
CDKSCREEN
 *
cdkS¸ìn
);

13 #ifdef 
__˝lu•lus


20 #ifdef 
__˝lu•lus


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), 
__s2_Àn
 = __buûtö_°æí (
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`__buûtö_°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

58  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

59 
	}
}

61 #ifde‡
__USE_GNU


62 
__exã∫_Æways_ölöe
 *

63 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

64 
size_t
 
__Àn
))

66  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

67 
	}
}

76 
__exã∫_Æways_ölöe
 *

77 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

80 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__Àn
))

92 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

93 
	}
}

95 
__exã∫_Æways_ölöe
 

96 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

98 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

99 
	}
}

102 
__exã∫_Æways_ölöe
 *

103 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

105  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

106 
	}
}

108 #ifde‡
__USE_GNU


109 
__exã∫_Æways_ölöe
 *

110 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

112  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

113 
	}
}

117 
__exã∫_Æways_ölöe
 *

118 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

119 
size_t
 
__Àn
))

121  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

122 
	}
}

125 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

128 
__c⁄°
 *
__§c
,

129 
size_t
 
__n
), 
°≤˝y
);

131 
__exã∫_Æways_ölöe
 *

132 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

134 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

135 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

136  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

137  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

138 
	}
}

141 
__exã∫_Æways_ölöe
 *

142 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

144  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

145 
	}
}

148 
__exã∫_Æways_ölöe
 *

149 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

150 
size_t
 
__Àn
))

152  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

153 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/cdk/alphalist.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKALPHALIST_H


7 
	#CDKALPHALIST_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

57 
	~<cdk/íåy.h
>

58 
	~<cdk/s¸ﬁl.h
>

63 
	sSAÕhÆi°
 {

64 
CDKOBJS
 
obj
;

65 
WINDOW
 * 
∑ª¡
;

66 
WINDOW
 * 
wö
;

67 
WINDOW
 * 
shadowWö
;

68 
CDKENTRY
 * 
íåyFõld
;

69 
CDKSCROLL
 * 
s¸ﬁlFõld
;

70 ** 
li°
;

71 
li°Size
;

72 
xpos
;

73 
ypos
;

74 
height
;

75 
width
;

76 
boxHeight
;

77 
boxWidth
;

78 
chty≥
 
highlight
;

79 
chty≥
 
fûÀrCh¨
;

80 
boﬁón
 
shadow
;

81 
EExôTy≥
 
exôTy≥
;

83 
SAÕhÆi°
 
	tCDKALPHALIST
;

88 
CDKALPHALIST
 *
√wCDKAÕhÆi°
 (

89 
CDKSCREEN
 * ,

98 
chty≥
 ,

99 
chty≥
 ,

100 
boﬁón
 ,

101 
boﬁón
 );

106 *
a˘iv©eCDKAÕhÆi°
 (

107 
CDKALPHALIST
 * ,

108 
chty≥
 * );

113 
	#öje˘CDKAÕhÆi°
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
Såög
)

	)

118 
£tCDKAÕhÆi°
 (

119 
CDKALPHALIST
 * ,

122 
chty≥
 ,

123 
chty≥
 ,

124 
boﬁón
 );

129 
£tCDKAÕhÆi°C⁄ã¡s
 (

130 
CDKALPHALIST
 * ,

134 **
gëCDKAÕhÆi°C⁄ã¡s
 (

135 
CDKALPHALIST
 * ,

141 
gëCDKAÕhÆi°CuºítIãm
(

142 
CDKALPHALIST
 * );

144 
£tCDKAÕhÆi°CuºítIãm
(

145 
CDKALPHALIST
 * ,

151 
£tCDKAÕhÆi°FûÀrCh¨
 (

152 
CDKALPHALIST
 * ,

153 
chty≥
 );

155 
chty≥
 
gëCDKAÕhÆi°FûÀrCh¨
 (

156 
CDKALPHALIST
 * );

161 
£tCDKAÕhÆi°Highlight
 (

162 
CDKALPHALIST
 * ,

163 
chty≥
 );

165 
chty≥
 
gëCDKAÕhÆi°Highlight
 (

166 
CDKALPHALIST
 * );

171 
£tCDKAÕhÆi°Box
 (

172 
CDKALPHALIST
 * ,

173 
boﬁón
 );

175 
boﬁón
 
gëCDKAÕhÆi°Box
 (

176 
CDKALPHALIST
 * );

181 
	#£tCDKAÕhÆi°ULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

182 
	#£tCDKAÕhÆi°URCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

183 
	#£tCDKAÕhÆi°LLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

184 
	#£tCDKAÕhÆi°LRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

185 
	#£tCDKAÕhÆi°VîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

186 
	#£tCDKAÕhÆi°H‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

187 
	#£tCDKAÕhÆi°BoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

192 
	#£tCDKAÕhÆi°BackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

197 
	#£tCDKAÕhÆi°BackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

202 
	#døwCDKAÕhÆi°
(
obj
,
box
Ë
	`døwCDKObje˘
(obj,box)

	)

207 
	#îa£CDKAÕhÆi°
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

212 
	#moveCDKAÕhÆi°
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

217 
	#posôi⁄CDKAÕhÆi°
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

222 
	#de°royCDKAÕhÆi°
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

227 
£tCDKAÕhÆi°PªPro˚ss
 (

228 
CDKALPHALIST
 * ,

229 
PROCESSFN
 ,

232 
£tCDKAÕhÆi°Po°Pro˚ss
 (

233 
CDKALPHALIST
 * ,

234 
PROCESSFN
 ,

237 #ifde‡
__˝lu•lus


	@/usr/include/cdk/binding.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKBINDING_H


7 
	#CDKBINDING_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


61 
	#BINDFN_PROTO
(
func
) \

62 (
func
) ( \

63 
EObje˘Ty≥
 , \

66 
chty≥
 )

	)

68 
BINDFN_PROTO
(*
	tBINDFN
);

74 
BINDFN_PROTO
(
gëcCDKBöd
);

79 (*
	gPROCESSFN
) (

80 
	tEObje˘Ty≥
 ,

83 
	tchty≥
 );

88 
bödCDKObje˘
 (

89 
EObje˘Ty≥
 ,

91 
chty≥
 ,

92 
BINDFN
 ,

98 
unbödCDKObje˘
 (

99 
EObje˘Ty≥
 ,

101 
chty≥
 );

107 
checkCDKObje˘Böd
 (

108 
EObje˘Ty≥
 ,

110 
chty≥
 );

115 
boﬁ
 
isCDKObje˘Böd
 (

116 
EObje˘Ty≥
 ,

118 
chty≥
 );

123 
˛ónCDKObje˘Bödögs
 (

124 
EObje˘Ty≥
 ,

127 #ifde‡
__˝lu•lus


	@/usr/include/cdk/button.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKBUTTON_H


7 
	#CDKBUTTON_H
 1

	)

9 
	~"cdk.h
"

11 #i‚de‡
CDK_H


12 
	#CDKINCLUDES


	)

13 
	~<cdk/cdk.h
>

14 #unde‡
CDKINCLUDES


15 
	~<cdk/bödög.h
>

16 
	~<cdk/cdks¸ìn.h
>

17 
	~<cdk/cdk_objs.h
>

62 
	sSBuâ⁄
 {

63 
CDKOBJS
 
	mobj
;

64 
WINDOW
 * 
	m∑ª¡
;

65 
WINDOW
 * 
	mwö
;

66 
WINDOW
 * 
	mshadowWö
;

67 
chty≥
 * 
	möfo
;

68 (*
	mˇŒback
)(
SBuâ⁄
 *
	mbuâ⁄
);

69 
	möfoLí
;

70 
	möfoPos
;

71 
	mboxWidth
;

72 
	mboxHeight
;

73 
	mxpos
;

74 
	mypos
;

75 
	mrows
;

76 
EExôTy≥
 
	mexôTy≥
;

77 
boﬁón
 
	mshadow
;

80 
SBuâ⁄
 
	tCDKBUTTON
;

82 (*
	ttBuâ⁄CÆlback
)(
	tSBuâ⁄
 *
	tbuâ⁄
);

87 
CDKBUTTON
 *
	`√wCDKBuâ⁄
 (

88 
CDKSCREEN
 * ,

92 
tBuâ⁄CÆlback
 ,

93 
boﬁón
 ,

94 
boﬁón
 );

100 
	`a˘iv©eCDKBuâ⁄
 (

101 
CDKBUTTON
 * ,

102 
chty≥
 * );

107 
	#öje˘CDKBuâ⁄
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
I¡
)

	)

112 
	`£tCDKBuâ⁄
 (

113 
CDKBUTTON
 * ,

115 
boﬁón
 );

120 
	`£tCDKBuâ⁄Mesßge
 (

121 
CDKBUTTON
 * ,

124 
chty≥
 *
	`gëCDKBuâ⁄Mesßge
 (

125 
CDKBUTTON
 *);

130 
	`£tCDKBuâ⁄Box
 (

131 
CDKBUTTON
 * ,

132 
boﬁón
 );

134 
boﬁón
 
	`gëCDKBuâ⁄Box
 (

135 
CDKBUTTON
 * );

140 
	#døwCDKBuâ⁄
(
obj
,
Box
Ë
	`døwCDKObje˘
(obj,Box)

	)

145 
	#£tCDKBuâ⁄ULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

146 
	#£tCDKBuâ⁄URCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

147 
	#£tCDKBuâ⁄LLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

148 
	#£tCDKBuâ⁄LRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

149 
	#£tCDKBuâ⁄VîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

150 
	#£tCDKBuâ⁄H‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

151 
	#£tCDKBuâ⁄BoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

156 
	#£tCDKBuâ⁄BackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

161 
	#£tCDKBuâ⁄BackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

166 
	#îa£CDKBuâ⁄
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

171 
	#de°royCDKBuâ⁄
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

176 
	#moveCDKBuâ⁄
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

181 
	`posôi⁄CDKBuâ⁄
 (
CDKBUTTON
 *);

	@/usr/include/cdk/buttonbox.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKBUTTONBOX_H


7 
	#CDKBUTTONBOX_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

60 
	sSBuâ⁄Box
 {

61 
CDKOBJS
 
obj
;

62 
WINDOW
 * 
∑ª¡
;

63 
WINDOW
 * 
wö
;

64 
WINDOW
 * 
shadowWö
;

65 
tôÀAdj
;

66 
chty≥
 ** 
buâ⁄
;

67 * 
buâ⁄Lí
;

68 * 
buâ⁄Pos
;

69 * 
cﬁumnWidths
;

70 
buâ⁄Cou¡
;

71 
buâ⁄Width
;

72 
cuºítBuâ⁄
;

73 
rows
;

74 
cﬁs
;

75 
cﬁAdju°
;

76 
rowAdju°
;

77 
boxWidth
;

78 
boxHeight
;

79 
chty≥
 
Buâ⁄Aârib
;

80 
EExôTy≥
 
exôTy≥
;

81 
boﬁón
 
shadow
;

82 
chty≥
 
highlight
;

84 
SBuâ⁄Box
 
	tCDKBUTTONBOX
;

89 
CDKBUTTONBOX
 *
√wCDKBuâ⁄box
 (

90 
CDKSCREEN
 * ,

100 
chty≥
 ,

101 
boﬁón
 ,

102 
boﬁón
 );

107 
a˘iv©eCDKBuâ⁄box
 (

108 
CDKBUTTONBOX
 * ,

109 
chty≥
 * );

114 
	#öje˘CDKBuâ⁄box
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
I¡
)

	)

119 
£tCDKBuâ⁄box
 (

120 
CDKBUTTONBOX
 * ,

121 
chty≥
 ,

122 
boﬁón
 );

124 
£tCDKBuâ⁄boxCuºítBuâ⁄
 (

125 
CDKBUTTONBOX
 * ,

128 
gëCDKBuâ⁄boxCuºítBuâ⁄
 (

129 
CDKBUTTONBOX
 * );

131 
gëCDKBuâ⁄boxBuâ⁄Cou¡
 (

132 
CDKBUTTONBOX
 * );

137 
£tCDKBuâ⁄boxHighlight
 (

138 
CDKBUTTONBOX
 * ,

139 
chty≥
 );

141 
chty≥
 
gëCDKBuâ⁄boxHighlight
 (

142 
CDKBUTTONBOX
 * );

147 
£tCDKBuâ⁄boxBox
 (

148 
CDKBUTTONBOX
 * ,

149 
boﬁón
 );

151 
boﬁón
 
gëCDKBuâ⁄boxBox
 (

152 
CDKBUTTONBOX
 * );

157 
	#£tCDKBuâ⁄boxULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

158 
	#£tCDKBuâ⁄boxURCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

159 
	#£tCDKBuâ⁄boxLLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

160 
	#£tCDKBuâ⁄boxLRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

161 
	#£tCDKBuâ⁄boxVîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

162 
	#£tCDKBuâ⁄boxH‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

163 
	#£tCDKBuâ⁄boxBoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

168 
	#£tCDKBuâ⁄boxBackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

173 
	#£tCDKBuâ⁄boxBackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

178 
	#døwCDKBuâ⁄box
(
obj
,
box
Ë
	`døwCDKObje˘
(obj,box)

	)

180 
døwCDKBuâ⁄boxBuâ⁄s
 (

181 
CDKBUTTONBOX
 * );

186 
	#îa£CDKBuâ⁄box
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

191 
	#moveCDKBuâ⁄box
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

196 
	#posôi⁄CDKBuâ⁄box
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

201 
	#de°royCDKBuâ⁄box
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

206 
ªdøwCDKBuâ⁄boxBuâ⁄boxs
 (

207 
CDKBUTTONBOX
 * );

212 
	#£tCDKBuâ⁄boxPªPro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘PªPro˚ss
(
	`ObjOf
(w),f,d)

	)

213 
	#£tCDKBuâ⁄boxPo°Pro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘Po°Pro˚ss
(
	`ObjOf
(w),f,d)

	)

215 #ifde‡
__˝lu•lus


	@/usr/include/cdk/calendar.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKCALENDAR_H


7 
	#CDKCALENDAR_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

60 
	#MAX_DAYS
 32

	)

61 
	#MAX_MONTHS
 13

	)

62 
	#MAX_YEARS
 140

	)

64 
	#CALENDAR_LIMIT
 (
MAX_DAYS
 * 
MAX_MONTHS
 * 
MAX_YEARS
)

	)

66 
	#CALENDAR_INDEX
(
d
,
m
,
y
Ë((((yË* 
MAX_MONTHS
Ë+ (m)Ë* 
MAX_DAYS
 + (d))

	)

67 
	#CALENDAR_CELL
(
c
,
d
,
m
,
y
Ë((c)->
m¨kî
[
	`CALENDAR_INDEX
(d,m,y)])

	)

72 
	sSCÆíd¨
 {

73 
CDKOBJS
 
obj
;

74 
WINDOW
 * 
∑ª¡
;

75 
WINDOW
 * 
wö
;

76 
WINDOW
 * 
œbñWö
;

77 
WINDOW
 * 
fõldWö
;

78 
WINDOW
 * 
shadowWö
;

79 
tôÀAdj
;

80 
xpos
;

81 
ypos
;

82 
height
;

83 
width
;

84 
fõldWidth
;

85 
œbñLí
;

86 
chty≥
 
yórAârib
;

87 
chty≥
 
m⁄thAârib
;

88 
chty≥
 
dayAârib
;

89 
chty≥
 
highlight
;

90 
chty≥
 * 
m¨kî
;

91 
day
;

92 
m⁄th
;

93 
yór
;

94 
wìkDay
;

95 
boxWidth
;

96 
boxHeight
;

97 
xOff£t
;

98 
EExôTy≥
 
exôTy≥
;

99 
boﬁón
 
shadow
;

100 * 
DayName
;

101 * 
M⁄thName
[
MAX_MONTHS
];

103 
SCÆíd¨
 
	tCDKCALENDAR
;

108 
CDKCALENDAR
 *
√wCDKCÆíd¨
 (

109 
CDKSCREEN
 * ,

116 
chty≥
 ,

117 
chty≥
 ,

118 
chty≥
 ,

119 
chty≥
 ,

120 
boﬁón
 ,

121 
boﬁón
 );

126 
time_t
 
a˘iv©eCDKCÆíd¨
 (

127 
CDKCALENDAR
 * ,

128 
chty≥
 * );

133 
	#öje˘CDKCÆíd¨
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
I¡
)

	)

138 
£tCDKCÆíd¨
 (

139 
CDKCALENDAR
 * ,

143 
chty≥
 ,

144 
chty≥
 ,

145 
chty≥
 ,

146 
chty≥
 ,

147 
boﬁón
 );

152 
£tCDKCÆíd¨D©e
 (

153 
CDKCALENDAR
 * ,

158 
gëCDKCÆíd¨D©e
 (

159 
CDKCALENDAR
 * ,

167 
£tCDKCÆíd¨DayAâribuã
 (

168 
CDKCALENDAR
 * ,

169 
chty≥
 );

171 
chty≥
 
gëCDKCÆíd¨DayAâribuã
 (

172 
CDKCALENDAR
 * );

177 
£tCDKCÆíd¨M⁄thAâribuã
 (

178 
CDKCALENDAR
 * ,

179 
chty≥
 );

181 
chty≥
 
gëCDKCÆíd¨M⁄thAâribuã
 (

182 
CDKCALENDAR
 * );

187 
£tCDKCÆíd¨YórAâribuã
 (

188 
CDKCALENDAR
 * ,

189 
chty≥
 );

191 
chty≥
 
gëCDKCÆíd¨YórAâribuã
 (

192 
CDKCALENDAR
 * );

197 
£tCDKCÆíd¨Highlight
 (

198 
CDKCALENDAR
 * ,

199 
chty≥
 );

201 
chty≥
 
gëCDKCÆíd¨Highlight
 (

202 
CDKCALENDAR
 * );

207 
£tCDKCÆíd¨Box
 (

208 
CDKCALENDAR
 * ,

209 
boﬁón
 );

211 
boﬁón
 
gëCDKCÆíd¨Box
 (

212 
CDKCALENDAR
 * );

217 
	#£tCDKCÆíd¨ULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

218 
	#£tCDKCÆíd¨URCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

219 
	#£tCDKCÆíd¨LLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

220 
	#£tCDKCÆíd¨LRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

221 
	#£tCDKCÆíd¨VîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

222 
	#£tCDKCÆíd¨H‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

223 
	#£tCDKCÆíd¨BoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

228 
	#£tCDKCÆíd¨BackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

233 
	#£tCDKCÆíd¨BackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

238 
£tCDKCÆíd¨M¨kî
 (

239 
CDKCALENDAR
 * ,

243 
chty≥
 );

247 
chty≥
 
gëCDKCÆíd¨M¨kî
 (

248 
CDKCALENDAR
 * ,

256 
ªmoveCDKCÆíd¨M¨kî
 (

257 
CDKCALENDAR
 * ,

265 
	#døwCDKCÆíd¨
(
obj
,
box
Ë
	`døwCDKObje˘
(obj,box)

	)

270 
	#îa£CDKCÆíd¨
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

275 
	#moveCDKCÆíd¨
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

280 
	#posôi⁄CDKCÆíd¨
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

285 
	#de°royCDKCÆíd¨
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

290 
	#£tCDKCÆíd¨PªPro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘PªPro˚ss
(
	`ObjOf
(w),f,d)

	)

291 
	#£tCDKCÆíd¨Po°Pro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘Po°Pro˚ss
(
	`ObjOf
(w),f,d)

	)

296 
£tCDKCÆíd¨M⁄thsNames
 (

297 
CDKCALENDAR
 * ,

300 
£tCDKCÆíd¨DaysNames
 (

301 
CDKCALENDAR
 * ,

304 #ifde‡
__˝lu•lus


	@/usr/include/cdk/cdk_config.h

6 #i‚de‡
CDK_CONFIG_H


7 
	#CDK_CONFIG_H
 1

	)

10 
	#CDK_CC_HAS_PROTOS
 1

	)

11 
	#CDK_PATCHDATE
 20060507

	)

12 
	#CDK_VERSION
 "5.0"

	)

13 
	#CDK_HAVE_CURSES_H
 1

	)

14 
	#CDK_HAVE_CURSES_H
 1

	)

15 
	#CDK_HAVE_DIRENT_H
 1

	)

16 
	#CDK_HAVE_GETBEGX
 1

	)

17 
	#CDK_HAVE_GETBEGY
 1

	)

18 
	#CDK_HAVE_GETCWD
 1

	)

19 
	#CDK_HAVE_GETMAXX
 1

	)

20 
	#CDK_HAVE_GETMAXY
 1

	)

21 
	#CDK_HAVE_GETOPT_H
 1

	)

22 
	#CDK_HAVE_GETOPT_HEADER
 1

	)

23 
	#CDK_HAVE_LIMITS_H
 1

	)

24 
	#CDK_HAVE_LSTAT
 1

	)

25 
	#CDK_HAVE_MKTIME
 1

	)

26 
	#CDK_HAVE_SETLOCALE
 1

	)

27 
	#CDK_HAVE_START_COLOR
 1

	)

28 
	#CDK_HAVE_STRDUP
 1

	)

29 
	#CDK_HAVE_STRERROR
 1

	)

30 
	#CDK_HAVE_TERM_H
 1

	)

31 
	#CDK_HAVE_TYPE_CHTYPE
 1

	)

32 
	#CDK_HAVE_UNISTD_H
 1

	)

33 
	#CDK_MIXEDCASE_FILENAMES
 1

	)

34 
	#CDK_NCURSES
 1

	)

35 
	#CDK_PACKAGE
 "cdk"

	)

36 
	#CDK_STDC_HEADERS
 1

	)

37 
	#CDK_SYSTEM_NAME
 "löux-gnu"

	)

38 
	#CDK_TYPE_CHTYPE_IS_SCALAR
 1

	)

39 
	#£tbegyx
(
wö
,
y
,
x
Ë((wö)->
_begy
 = (y), (wö)->
_begx
 = (x), 
OK
)

	)

41 #i‡!
deföed
(
CDK_HAVE_LSTAT
Ë&& !deföed(
l°©
)

42 
	#l°©
(
f
,
b
Ë
	`°©
(f,b)

	)

	@/usr/include/cdk/cdk_objs.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDK_OBJS_H


7 
	#CDK_OBJS_H


	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

54 
	sCDKBINDING
 {

55 
BINDFN
 
bödFun˘i⁄
;

56 * 
bödD©a
;

57 
PROCESSFN
 
ˇŒback‚
;

58 } 
	tCDKBINDING
;

60 
CDKOBJS
;

66 
D©aTy≥Unknown
 = 0

67 , 
D©aTy≥Såög


68 , 
D©aTy≥I¡


69 , 
D©aTy≥Flﬂt


70 , 
D©aTy≥DoubÀ


71 , 
D©aTy≥Unsig√d


72 } 
	tCDKD©aTy≥
;

75 * 
vÆueSåög
;

76 
vÆueI¡
;

77 
vÆueFlﬂt
;

78 
vÆueDoubÀ
;

79 
vÆueUnsig√d
;

80 } 
	tCDKD©aUni⁄
;

82 
	#unknownSåög
 (*)0

	)

83 
	#unknownI¡
 (-1)

	)

84 
	#unknownFlﬂt
 (0.0)

	)

85 
	#unknownDoubÀ
 (0.0)

	)

86 
	#unknownUnsig√d
 (0)

	)

91 
	sCDKFUNCS
 {

92 
EObje˘Ty≥
 
obje˘Ty≥
;

93 
CDKD©aTy≥
 
ªtu∫Ty≥
;

94 (*
døwObj
Ë(
CDKOBJS
 *, 
boﬁón
);

95 (*
îa£Obj
Ë(
CDKOBJS
 *);

96 (*
moveObj
Ë(
CDKOBJS
 *, , , 
boﬁón
, boolean);

97 (*
öje˘Obj
Ë(
CDKOBJS
 *, 
chty≥
);

98 (*
focusObj
Ë(
CDKOBJS
 *);

99 (*
unfocusObj
Ë(
CDKOBJS
 *);

100 (*
ßveD©aObj
Ë(
CDKOBJS
 *);

101 (*
ª‰eshD©aObj
Ë(
CDKOBJS
 *);

102 (*
de°royObj
Ë(
CDKOBJS
 *);

104 (*
£tULch¨Obj
Ë(
CDKOBJS
 *, 
chty≥
);

105 (*
£tURch¨Obj
Ë(
CDKOBJS
 *, 
chty≥
);

106 (*
£tLLch¨Obj
Ë(
CDKOBJS
 *, 
chty≥
);

107 (*
£tLRch¨Obj
Ë(
CDKOBJS
 *, 
chty≥
);

108 (*
£tVTch¨Obj
Ë(
CDKOBJS
 *, 
chty≥
);

109 (*
£tHZch¨Obj
Ë(
CDKOBJS
 *, 
chty≥
);

110 (*
£tBX©åObj
Ë(
CDKOBJS
 *, 
chty≥
);

112 (*
£tBK©åObj
Ë(
CDKOBJS
 *, 
chty≥
);

113 } 
	tCDKFUNCS
;

116 
	#ObjPå
(
p
Ë((
CDKOBJS
*)’))

	)

118 
	#MëhodPå
(
p
,
m
Ë((
	`ObjPå
’))->
‚
->m)

	)

121 
	#ObjTy≥Of
(
p
Ë
	`MëhodPå
’,
obje˘Ty≥
)

	)

122 
	#D©aTy≥Of
(
p
Ë
	`MëhodPå
’,
ªtu∫Ty≥
)

	)

123 
	#DøwObj
(
p
Ë
	`MëhodPå
’,
døwObj
Ë’,p->
box
)

	)

124 
	#Eø£Obj
(
p
Ë
	`MëhodPå
’,
îa£Obj
Ë’)

	)

125 
	#De°royObj
(
p
Ë
	`MëhodPå
’,
de°royObj
Ë’)

	)

126 
	#Inje˘Obj
(
p
,
k
Ë
	`MëhodPå
’,
öje˘Obj
Ë’,(k))

	)

127 
	#I≈utWödowObj
(
p
Ë
	`MëhodPå
’,
öputWödowObj
Ë’)

	)

128 
	#FocusObj
(
p
Ë
	`MëhodPå
’,
focusObj
Ë’)

	)

129 
	#UnfocusObj
(
p
Ë
	`MëhodPå
’,
unfocusObj
Ë’)

	)

130 
	#SaveD©aObj
(
p
Ë
	`MëhodPå
’,
ßveD©aObj
Ë’)

	)

131 
	#Re‰eshD©aObj
(
p
Ë
	`MëhodPå
’,
ª‰eshD©aObj
Ë’)

	)

132 
	#SëBackAârObj
(
p
,
c
Ë
	`MëhodPå
’,
£tBK©åObj
Ë’,c)

	)

134 
	#Ac˚±sFocusObj
(
p
Ë(
	`ObjPå
’)->
ac˚±sFocus
)

	)

135 
	#HasFocusObj
(
p
Ë(
	`ObjPå
’)->
hasFocus
)

	)

136 
	#IsVisibÀObj
(
p
Ë(
	`ObjPå
’)->
isVisibÀ
)

	)

137 
	#I≈utWödowOf
(
p
Ë(
	`ObjPå
’)->
öputWödow
)

	)

144 
	sCDKOBJS
 {

145 
s¸ìnIndex
;

146 
CDKSCREEN
 * 
s¸ìn
;

147 c⁄° 
CDKFUNCS
 * 
‚
;

148 
boﬁón
 
box
;

149 
b‹dîSize
;

150 
boﬁón
 
ac˚±sFocus
;

151 
boﬁón
 
hasFocus
;

152 
boﬁón
 
isVisibÀ
;

153 
WINDOW
 * 
öputWödow
;

154 * 
d©aPå
;

155 
CDKD©aUni⁄
 
ªsu…D©a
;

156 
bödögCou¡
;

157 
CDKBINDING
 * 
bödögLi°
;

159 
chty≥
 ** 
tôÀ
;

160 * 
tôÀPos
;

161 * 
tôÀLí
;

162 
tôÀLöes
;

164 
chty≥
 
ULCh¨
;

165 
chty≥
 
URCh¨
;

166 
chty≥
 
LLCh¨
;

167 
chty≥
 
LRCh¨
;

168 
chty≥
 
VTCh¨
;

169 
chty≥
 
HZCh¨
;

170 
chty≥
 
BXAâr
;

172 
EExôTy≥
 
exôTy≥
;

173 
EExôTy≥
 
óæyExô
;

175 
PROCESSFN
 
¥ePro˚ssFun˘i⁄
;

176 * 
¥ePro˚ssD©a
;

177 
PROCESSFN
 
po°Pro˚ssFun˘i⁄
;

178 * 
po°Pro˚ssD©a
;

179 } 
	tCDKOBJS
;

181 
	#ObjOf
(
±r
Ë(&’å)->
obj
)

	)

182 
	#MëhodOf
(
±r
Ë(
	`ObjOf
’å)->
‚
)

	)

183 
	#S¸ìnOf
(
±r
Ë(
	`ObjOf
’å)->
s¸ìn
)

	)

184 
	#WödowOf
(
±r
Ë(
	`S¸ìnOf
’å)->
wödow
)

	)

185 
	#B‹dîOf
(
p
Ë(
	`ObjOf
’)->
b‹dîSize
)

	)

186 
	#Resu…Of
(
p
Ë(
	`ObjOf
’)->
ªsu…D©a
)

	)

187 
	#ExôTy≥Of
(
p
Ë(
	`ObjOf
’)->
exôTy≥
)

	)

188 
	#E¨lyExôOf
(
p
Ë(
	`ObjOf
’)->
óæyExô
)

	)

191 
	#TôÀOf
(
w
Ë
	`ObjOf
(w)->
tôÀ


	)

192 
	#TôÀPosOf
(
w
Ë
	`ObjOf
(w)->
tôÀPos


	)

193 
	#TôÀLíOf
(
w
Ë
	`ObjOf
(w)->
tôÀLí


	)

194 
	#TôÀLöesOf
(
w
Ë
	`ObjOf
(w)->
tôÀLöes


	)

197 
	#ULCh¨Of
(
w
Ë
	`ObjOf
(w)->
ULCh¨


	)

198 
	#URCh¨Of
(
w
Ë
	`ObjOf
(w)->
URCh¨


	)

199 
	#LLCh¨Of
(
w
Ë
	`ObjOf
(w)->
LLCh¨


	)

200 
	#LRCh¨Of
(
w
Ë
	`ObjOf
(w)->
LRCh¨


	)

201 
	#VTCh¨Of
(
w
Ë
	`ObjOf
(w)->
VTCh¨


	)

202 
	#HZCh¨Of
(
w
Ë
	`ObjOf
(w)->
HZCh¨


	)

203 
	#BXAârOf
(
w
Ë
	`ObjOf
(w)->
BXAâr


	)

205 
	#£tULCh¨Of
(
o
,
c
Ë
	`MëhodOf
(o)->
	`£tULch¨Obj
(
	`ObjOf
(o),c)

	)

206 
	#£tURCh¨Of
(
o
,
c
Ë
	`MëhodOf
(o)->
	`£tURch¨Obj
(
	`ObjOf
(o),c)

	)

207 
	#£tLLCh¨Of
(
o
,
c
Ë
	`MëhodOf
(o)->
	`£tLLch¨Obj
(
	`ObjOf
(o),c)

	)

208 
	#£tLRCh¨Of
(
o
,
c
Ë
	`MëhodOf
(o)->
	`£tLRch¨Obj
(
	`ObjOf
(o),c)

	)

209 
	#£tVTCh¨Of
(
o
,
c
Ë
	`MëhodOf
(o)->
	`£tVTch¨Obj
(
	`ObjOf
(o),c)

	)

210 
	#£tHZCh¨Of
(
o
,
c
Ë
	`MëhodOf
(o)->
	`£tHZch¨Obj
(
	`ObjOf
(o),c)

	)

211 
	#£tBXAârOf
(
o
,
c
Ë
	`MëhodOf
(o)->
	`£tBX©åObj
(
	`ObjOf
(o),c)

	)

212 
	#£tBKAârOf
(
o
,
c
Ë
	`MëhodOf
(o)->
	`£tBK©åObj
(
	`ObjOf
(o),c)

	)

215 
	#PªPro˚ssFuncOf
(
w
Ë(
	`ObjOf
(w)->
¥ePro˚ssFun˘i⁄
)

	)

216 
	#PªPro˚ssD©aOf
(
w
Ë(
	`ObjOf
(w)->
¥ePro˚ssD©a
)

	)

217 
	#Po°Pro˚ssFuncOf
(
w
Ë(
	`ObjOf
(w)->
po°Pro˚ssFun˘i⁄
)

	)

218 
	#Po°Pro˚ssD©aOf
(
w
Ë(
	`ObjOf
(w)->
po°Pro˚ssD©a
)

	)

221 
	#Rëu∫Of
(
p
Ë(
	`ObjPå
’)->
d©aPå
)

	)

223 
boﬁ
 
vÆidCDKObje˘
 (
CDKOBJS
 *);

225 * 
_√wCDKObje˘
(, c⁄° 
CDKFUNCS
 *);

226 
	#√wCDKObje˘
(
ty≥
,
funcs
Ë—y≥ *)
	`_√wCDKObje˘
(—y≥),funcs)

	)

228 
_de°royCDKObje˘
 (
CDKOBJS
 *);

229 
	#de°royCDKObje˘
(
o
Ë
	`_de°royCDKObje˘
(
	`ObjOf
(o))

	)

232 
	#døwCDKObje˘
(
o
,
box
Ë
	`MëhodOf
(o)->
	`døwObj
 (
	`ObjOf
(o),box)

	)

233 
	#îa£CDKObje˘
(
o
Ë
	`MëhodOf
(o)->
	`îa£Obj
 (
	`ObjOf
(o))

	)

234 
	#moveCDKObje˘
(
o
,
x
,
y
,
ªl
,
ªf
Ë
	`MëhodOf
(o)->
	`moveObj
 (
	`ObjOf
(o),x,y,ªl,ªf)

	)

235 
	#öje˘CDKObje˘
(
o
,
c
,
ty≥
Ë(
	`MëhodOf
(o)->
	`öje˘Obj
 (
	`ObjOf
(o),cË? 
	`Resu…Of
(o).
vÆue
 ##Åy≥ : 
unknown
 ##Åy≥)

	)

240 
	#De˛¨eSëXXch¨
(
°‹age
,
löe
) \

241 
°‹age
 
löe
 ## 
	`ULch¨
(
CDKOBJS
 *, 
chty≥
); \

242 
°‹age
 
löe
 ## 
	`URch¨
(
CDKOBJS
 *, 
chty≥
); \

243 
°‹age
 
löe
 ## 
	`LLch¨
(
CDKOBJS
 *, 
chty≥
); \

244 
°‹age
 
löe
 ## 
	`LRch¨
(
CDKOBJS
 *, 
chty≥
); \

245 
°‹age
 
löe
 ## 
	`VTch¨
(
CDKOBJS
 *, 
chty≥
); \

246 
°‹age
 
löe
 ## 
	`HZch¨
(
CDKOBJS
 *, 
chty≥
); \

247 
°‹age
 
löe
 ## 
	`BX©å
(
CDKOBJS
 *, 
chty≥
)

	)

249 
De˛¨eSëXXch¨
(,
£tCdk
);

251 
	#De˛¨eCDKObje˘s
(
uµî
, 
mixed
, 
löe
, 
ty≥
) \

252 
_öje˘CDK
 ## 
	`mixed
 (
CDKOBJS
 *, 
chty≥
); \

253 
_de°royCDK
 ## 
	`mixed
 (
CDKOBJS
 *); \

254 
_døwCDK
 ## 
	`mixed
 (
CDKOBJS
 *, 
boﬁón
); \

255 
_îa£CDK
 ## 
	`mixed
 (
CDKOBJS
 *); \

256 
_focusCDK
 ## 
	`mixed
 (
CDKOBJS
 *); \

257 
_moveCDK
 ## 
	`mixed
 (
CDKOBJS
 *, , , 
boﬁón
, boolean); \

258 
_ª‰eshD©aCDK
 ## 
	`mixed
 (
CDKOBJS
 *); \

259 
_ßveD©aCDK
 ## 
	`mixed
 (
CDKOBJS
 *); \

260 
_unfocusCDK
 ## 
	`mixed
 (
CDKOBJS
 *); \

261 
_£tBK©å
 ## 
	`mixed
 (
CDKOBJS
 *, 
chty≥
); \

262 c⁄° 
CDKFUNCS
 
my_funcs
 = { \

263 
v
 ## 
uµî
, \

264 
D©aTy≥
 ## 
ty≥
, \

265 
_døwCDK
 ## 
mixed
, \

266 
_îa£CDK
 ## 
mixed
, \

267 
_moveCDK
 ## 
mixed
, \

268 
_öje˘CDK
 ## 
mixed
, \

269 
_focusCDK
 ## 
mixed
, \

270 
_unfocusCDK
 ## 
mixed
, \

271 
_ßveD©aCDK
 ## 
mixed
, \

272 
_ª‰eshD©aCDK
 ## 
mixed
, \

273 
_de°royCDK
 ## 
mixed
, \

274 
löe
 ## 
ULch¨
, \

275 
löe
 ## 
URch¨
, \

276 
löe
 ## 
LLch¨
, \

277 
löe
 ## 
LRch¨
, \

278 
löe
 ## 
VTch¨
, \

279 
löe
 ## 
HZch¨
, \

280 
löe
 ## 
BX©å
, \

281 
_£tBK©å
 ## 
mixed
, \

282 }

	)

288 
	#dummyInje˘
(
mixed
) \

289 
_öje˘CDK
 ## 
	`mixed
 (
CDKOBJS
 * 
obje˘
 
GCC_UNUSED
, 
chty≥
 
öput
 GCC_UNUSED) \

292 }

	)

294 
	#dummyFocus
(
mixed
) \

295 
_focusCDK
 ## 
	`mixed
 (
CDKOBJS
 * 
obje˘
 
GCC_UNUSED
) \

297 }

	)

299 
	#dummyUnfocus
(
mixed
) \

300 
_unfocusCDK
 ## 
	`mixed
 (
CDKOBJS
 * 
obje˘
 
GCC_UNUSED
) \

302 }

	)

304 
	#dummySaveD©a
(
mixed
) \

305 
_ßveD©aCDK
 ## 
	`mixed
 (
CDKOBJS
 * 
obje˘
 
GCC_UNUSED
) \

307 }

	)

309 
	#dummyRe‰eshD©a
(
mixed
) \

310 
_ª‰eshD©aCDK
 ## 
	`mixed
 (
CDKOBJS
 * 
obje˘
 
GCC_UNUSED
) \

312 }

	)

318 
gëcCDKObje˘
 (

319 
CDKOBJS
 * );

325 
gëchCDKObje˘
 (

326 
CDKOBJS
 * ,

327 
boﬁón
 * );

332 
posôi⁄CDKObje˘
 (

333 
CDKOBJS
 * ,

334 
WINDOW
 * );

339 
£tCDKObje˘PªPro˚ss
 (

340 
CDKOBJS
 * ,

341 
PROCESSFN
 ,

344 
£tCDKObje˘Po°Pro˚ss
 (

345 
CDKOBJS
 * ,

346 
PROCESSFN
 ,

352 
£tCDKObje˘BackgroundCﬁ‹
 (

353 
CDKOBJS
 * ,

357 
£tCdkTôÀ
 (
CDKOBJS
 *, *, );

358 
døwCdkTôÀ
 (
WINDOW
 *, 
CDKOBJS
 *);

359 
˛ónCdkTôÀ
 (
CDKOBJS
 *);

361 
	#£tCdkE¨lyExô
(
p
,
q
Ë
	`E¨lyExôOf
’Ë
	)
q

363 
£tCdkExôTy≥
(

364 
CDKOBJS
 * ,

365 
EExôTy≥
 * ,

366 
chty≥
 );

368 #ifde‡
__˝lu•lus


	@/usr/include/cdk/cdk_params.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDK_PARAMS_H


7 
	#CDK_PARAMS_H


	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


52 
	#MAX_CDK_PARAMS
 256

	)

59 
	#CDK_MIN_PARAMS
 "NSX:Y:"

	)

60 
	#CDK_CLI_PARAMS
 "NSX:Y:H:W:"

	)

68 
	#CLI_ERROR
 255

	)

73 
	sCDK_PARAMS
 {

74 * 
ÆlP¨ams
[
MAX_CDK_PARAMS
];

75 
boﬁ
 
Box
;

76 
boﬁ
 
Shadow
;

77 
hVÆue
;

78 
wVÆue
;

79 
xVÆue
;

80 
yVÆue
;

81 } 
	tCDK_PARAMS
;

87 
CDK∑r£P¨ams
 (

90 
CDK_PARAMS
 * ,

97 
CDK∑r£Posôi⁄
 (

103 
CDK∑ømNumbî
 (

104 
CDK_PARAMS
 * ,

110 
CDK∑ømNumbî2
 (

111 
CDK_PARAMS
 * ,

118 * 
CDK∑ømSåög
 (

119 
CDK_PARAMS
 * ,

125 * 
CDK∑ømSåög2
 (

126 
CDK_PARAMS
 * ,

133 
CDK∑ømVÆue
 (

134 
CDK_PARAMS
 * ,

138 #ifde‡
__˝lu•lus


	@/usr/include/cdk/cdk_util.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKUTIL_H


7 
	#CDKUTIL_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

61 
Bìp
();

67 
Æignxy
 (

68 
WINDOW
 * ,

78 
ju°ifySåög
 (

86 
p›upLabñ
 (

87 
CDKSCREEN
 * ,

94 
p›upLabñAârib
 (

95 
CDKSCREEN
 * ,

98 
chty≥
 );

103 
p›upDülog
 (

104 
CDKSCREEN
 * ,

113 
gëLi°Index
 (

114 
CDKSCREEN
 * ,

118 
boﬁón
 );

123 *
gëSåög
 (

124 
CDKSCREEN
 * ,

132 
võwFûe
 (

133 
CDKSCREEN
 * ,

142 *
£À˘Fûe
 (

143 
CDKSCREEN
 * ,

149 
võwInfo
 (

150 
CDKSCREEN
 * ,

156 
boﬁón
 );

161 
s‹tLi°
 (

169 
CDKªadFûe
 (

177 
°rùWhôeS∑˚
 (

178 
ESåùTy≥
 ,

185 **
CDK•lôSåög
(

189 
CDKÆlocSåögs
(

195 
CDKcou¡Såögs
(

198 
CDK‰ìSåögs
(

204 
CDK‰ìChty≥s
(

205 
chty≥
 ** );

210 
öéí
 (

217 
CDKgëDúe˘‹yC⁄ã¡s
 (

224 
£¨chLi°
 (

232 *
ba£Name
 (

238 *
dúName
 (

244 
‰ìCh¨
 (

250 
‰ìChty≥
 (

251 
chty≥
 * );

256 
‰ìCh¨Li°
 (

263 
‰ìChty≥Li°
 (

264 
chty≥
 ** ,

270 
˛ónCh¨
 (

278 
˛ónChty≥
 (

279 
chty≥
 * ,

281 
chty≥
 );

286 *
chty≥2Ch¨
 (

287 
chty≥
 * );

293 *
chty≥2Såög
 (

294 
chty≥
 * );

299 
chty≥
 *
ch¨2Chty≥
 (

307 
cmpSåCh°r
(* ,

308 
chty≥
 * );

314 
ch°∫˝y
(* ,

315 
chty≥
 * ,

321 
EDi•œyTy≥
 
ch¨2Di•œyTy≥
 (

327 
boﬁón
 
isHiddíDi•œyTy≥
 (

328 
EDi•œyTy≥
 );

333 
fûãrByDi•œyTy≥
(

334 
EDi•œyTy≥
 ,

335 
chty≥
 );

340 
chty≥
 *
c›yChty≥
 (

341 
chty≥
 * );

346 *
c›yCh¨
 (

352 **
c›yCh¨Li°
 (

358 
chty≥
 **
c›yChty≥Li°
 (

359 
chty≥
 ** );

364 
chÀn
 (

365 
chty≥
 * );

370 
ÀnCh¨Li°
 (

373 
ÀnChty≥Li°
 (

374 
chty≥
 ** );

380 
mode2Fûëy≥
 (

381 
mode_t
 );

388 
mode2Ch¨
 (

390 
mode_t
 );

395 
checkF‹Lök
 (

402 
£tWidgëDimísi⁄
 (

410 
îa£Cur£sWödow
 (

411 
WINDOW
 * );

416 
dñëeCur£sWödow
 (

417 
WINDOW
 * );

422 
moveCur£sWödow
 (

423 
WINDOW
 * ,

430 
Êo‹CDK
();

435 
˚ûCDK
();

437 #ifde‡
__˝lu•lus


	@/usr/include/cdk/cdk_version.h

5 #i‚de‡
CDK_VERSION_H


6 
	#CDK_VERSION_H


	)

8 #ifde‡
__˝lu•lus


12 
	#CDK_VERSION_MAJOR
 "5"

	)

13 
	#CDK_VERSION_MINOR
 "0"

	)

14 
	#CDK_VERSION_PATCH
 "20060507"

	)

19 * 
CDKVîsi⁄
 ();

21 #ifde‡
__˝lu•lus


	@/usr/include/cdk/cdkscreen.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKSCREEN_H


7 
	#CDKSCREEN_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


57 
	#MAX_OBJECTS
 1000

	)

59 
CDKOBJS
;

62 
CDKSCREEN_NOEXIT
 = 0

63 , 
CDKSCREEN_EXITOK


64 , 
CDKSCREEN_EXITCANCEL


65 } 
	tEExôSètus
;

70 
	sSS¸ìn
 {

71 
WINDOW
 * 
wödow
;

72 
CDKOBJS
 ** 
obje˘
;

73 
obje˘Cou¡
;

74 
obje˘Limô
;

75 
EExôSètus
 
exôSètus
;

76 
obje˘Focus
;

78 
SS¸ìn
 
	tCDKSCREEN
;

83 
CDKSCREEN
 *
öôCDKS¸ìn
 (

84 
WINDOW
 * );

90 
CDKSCREEN
 *
£tDeÁu…CDKS¸ìn
 (

96 
ªgi°îCDKObje˘
 (

97 
CDKSCREEN
 * ,

98 
EObje˘Ty≥
 ,

104 
uƒegi°îCDKObje˘
 (

105 
EObje˘Ty≥
 ,

114 
øi£CDKObje˘
 (

115 
EObje˘Ty≥
 ,

124 
lowîCDKObje˘
 (

125 
EObje˘Ty≥
 ,

131 
ª‰eshCDKWödow
 (

132 
WINDOW
 * );

137 
ª‰eshCDKS¸ìn
 (

138 
CDKSCREEN
 * );

144 
døwCDKS¸ìn
 (

145 
CDKSCREEN
 * );

150 
îa£CDKS¸ìn
 (

151 
CDKSCREEN
 * );

157 
de°royCDKS¸ìnObje˘s
 (
CDKSCREEN
 *
cdks¸ìn
);

162 
de°royCDKS¸ìn
 (

163 
CDKSCREEN
 * );

169 
ídCDK
();

174 
öôCDKCﬁ‹
();

176 #ifde‡
__˝lu•lus


	@/usr/include/cdk/curdefs.h

1 #i‚de‡
CDKINCLUDES


2 #i‚de‡
CURDEF_H


3 
	#CURDEF_H


	)

5 #i‚de‡
CDK_H


6 
	#CDKINCLUDES


	)

7 
	~<cdk/cdk.h
>

8 #unde‡
CDKINCLUDES


51 #unde‡
CTRL


52 
	#CTRL
(
c
Ë((c)&0x1f)

	)

54 #unde‡
CDK_REFRESH


55 
	#CDK_REFRESH
 
	`CTRL
('L')

	)

56 #unde‡
CDK_PASTE


57 
	#CDK_PASTE
 
	`CTRL
('V')

	)

58 #unde‡
CDK_COPY


59 
	#CDK_COPY
 
	`CTRL
('Y')

	)

60 #unde‡
CDK_ERASE


61 
	#CDK_ERASE
 
	`CTRL
('U')

	)

62 #unde‡
CDK_CUT


63 
	#CDK_CUT
 
	`CTRL
('X')

	)

64 #unde‡
CDK_BEGOFLINE


65 
	#CDK_BEGOFLINE
 
	`CTRL
('A')

	)

66 #unde‡
CDK_ENDOFLINE


67 
	#CDK_ENDOFLINE
 
	`CTRL
('E')

	)

68 #unde‡
CDK_BACKCHAR


69 
	#CDK_BACKCHAR
 
	`CTRL
('B')

	)

70 #unde‡
CDK_FORCHAR


71 
	#CDK_FORCHAR
 
	`CTRL
('F')

	)

72 #unde‡
CDK_TRANSPOSE


73 
	#CDK_TRANSPOSE
 
	`CTRL
('T')

	)

74 #unde‡
CDK_NEXT


75 
	#CDK_NEXT
 
	`CTRL
('N')

	)

76 #unde‡
CDK_PREV


77 
	#CDK_PREV
 
	`CTRL
('P')

	)

78 #unde‡
SPACE


79 
	#SPACE
 ' '

	)

80 #unde‡
DELETE


81 
	#DELETE
 '\177'

	)

82 #unde‡
TAB


83 
	#TAB
 '\t'

	)

84 #unde‡
KEY_ESC


85 
	#KEY_ESC
 '\033'

	)

86 #unde‡
KEY_RETURN


87 
	#KEY_RETURN
 '\012'

	)

88 #unde‡
KEY_TAB


89 
	#KEY_TAB
 '\t'

	)

90 #unde‡
KEY_F1


91 
	#KEY_F1
 
	`KEY_F
(1)

	)

92 #unde‡
KEY_F2


93 
	#KEY_F2
 
	`KEY_F
(2)

	)

94 #unde‡
KEY_F3


95 
	#KEY_F3
 
	`KEY_F
(3)

	)

96 #unde‡
KEY_F4


97 
	#KEY_F4
 
	`KEY_F
(4)

	)

98 #unde‡
KEY_F5


99 
	#KEY_F5
 
	`KEY_F
(5)

	)

100 #unde‡
KEY_F6


101 
	#KEY_F6
 
	`KEY_F
(6)

	)

102 #unde‡
KEY_F7


103 
	#KEY_F7
 
	`KEY_F
(7)

	)

104 #unde‡
KEY_F8


105 
	#KEY_F8
 
	`KEY_F
(8)

	)

106 #unde‡
KEY_F9


107 
	#KEY_F9
 
	`KEY_F
(9)

	)

108 #unde‡
KEY_F10


109 
	#KEY_F10
 
	`KEY_F
(10)

	)

110 #unde‡
KEY_F11


111 
	#KEY_F11
 
	`KEY_F
(11)

	)

112 #unde‡
KEY_F12


113 
	#KEY_F12
 
	`KEY_F
(12)

	)

116 #if !
deföed
(
HAVE_GETBEGYX
Ë&& !deföed(
gëbegyx
)

117 
	#gëbegyx
(
wö
,
y
,
x
Ë(y = (wö)?(wö)->
_begy
:
ERR
, x = (wö)?(wö)->
_begx
:ERR)

	)

120 #if !
deföed
(
HAVE_GETMAXYX
Ë&& !deföed(
gëmaxyx
)

121 
	#gëmaxyx
(
wö
,
y
,
x
Ë(y = (wö)?(wö)->
_maxy
:
ERR
, x = (wö)?(wö)->
_maxx
:ERR)

	)

125 #i‡!(
deföed
(
CDK_HAVE_GETBEGX
Ë&& deföed(
CDK_HAVE_GETBEGY
))

126 #unde‡
gëbegx


127 #unde‡
gëbegy


128 
	#gëbegx
(
wö
Ë
	`cdk_gëbegx
(wö)

	)

129 
	#gëbegy
(
wö
Ë
	`cdk_gëbegy
(wö)

	)

130 
cdk_gëbegx
(
WINDOW
 *);

131 
cdk_gëbegy
(
WINDOW
 *);

134 #i‡!(
deföed
(
CDK_HAVE_GETMAXX
Ë&& deföed(
CDK_HAVE_GETMAXY
))

135 #unde‡
gëmaxx


136 #unde‡
gëmaxy


137 
	#gëmaxx
(
wö
Ë
	`cdk_gëmaxx
(wö)

	)

138 
	#gëmaxy
(
wö
Ë
	`cdk_gëmaxy
(wö)

	)

139 
cdk_gëmaxx
(
WINDOW
 *);

140 
cdk_gëmaxy
(
WINDOW
 *);

146 
	#gëídx
(
a
Ë(
	`gëbegx
◊Ë+ 
	`gëmaxx
◊))

	)

147 
	#gëídy
(
a
Ë(
	`gëbegy
◊Ë+ 
	`gëmaxy
◊))

	)

	@/usr/include/cdk/dialog.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKDIALOG_H


7 
	#CDKDIALOG_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

60 
	#MAX_DIALOG_ROWS
 50

	)

61 
	#MAX_DIALOG_BUTTONS
 25

	)

62 
	#MIN_DIALOG_WIDTH
 10

	)

67 
	sSDülogBox
 {

68 
CDKOBJS
 
obj
;

69 
WINDOW
 * 
∑ª¡
;

70 
WINDOW
 * 
wö
;

71 
WINDOW
 * 
shadowWö
;

72 
chty≥
 ** 
öfo
;

73 * 
öfoLí
;

74 * 
öfoPos
;

75 
chty≥
 ** 
buâ⁄Labñ
;

76 * 
buâ⁄Lí
;

77 * 
buâ⁄Pos
;

78 
mesßgeRows
;

79 
buâ⁄Cou¡
;

80 
cuºítBuâ⁄
;

81 
boxWidth
;

82 
boxHeight
;

83 
EExôTy≥
 
exôTy≥
;

84 
boﬁón
 
£∑øt‹
;

85 
boﬁón
 
shadow
;

86 
chty≥
 
highlight
;

88 
SDülogBox
 
	tCDKDIALOG
;

93 
CDKDIALOG
 *
√wCDKDülog
 (

94 
CDKSCREEN
 * ,

101 
chty≥
 ,

102 
boﬁón
 ,

103 
boﬁón
 ,

104 
boﬁón
 );

109 
a˘iv©eCDKDülog
 (

110 
CDKDIALOG
 * ,

111 
chty≥
 * );

116 
	#öje˘CDKDülog
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
I¡
)

	)

121 
£tCDKDülog
 (

122 
CDKDIALOG
 * ,

123 
chty≥
 ,

124 
boﬁón
 ,

125 
boﬁón
 );

130 
£tCDKDülogHighlight
 (

131 
CDKDIALOG
 * ,

132 
chty≥
 );

134 
chty≥
 
gëCDKDülogHighlight
 (

135 
CDKDIALOG
 * );

140 
£tCDKDülogSï¨©‹
 (

141 
CDKDIALOG
 * ,

142 
boﬁón
 );

144 
boﬁón
 
gëCDKDülogSï¨©‹
 (

145 
CDKDIALOG
 * );

150 
£tCDKDülogBox
 (

151 
CDKDIALOG
 * ,

152 
boﬁón
 );

154 
boﬁón
 
gëCDKDülogBox
 (

155 
CDKDIALOG
 * );

160 
	#£tCDKDülogULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

161 
	#£tCDKDülogURCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

162 
	#£tCDKDülogLLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

163 
	#£tCDKDülogLRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

164 
	#£tCDKDülogVîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

165 
	#£tCDKDülogH‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

166 
	#£tCDKDülogBoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

171 
	#£tCDKDülogBackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

176 
	#£tCDKDülogBackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

181 
	#døwCDKDülog
(
obj
,
box
Ë
	`døwCDKObje˘
(obj,box)

	)

186 
	#îa£CDKDülog
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

191 
	#moveCDKDülog
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

196 
	#posôi⁄CDKDülog
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

201 
	#de°royCDKDülog
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

206 
døwCDKDülogBuâ⁄s
 (

207 
CDKDIALOG
 * );

212 
	#£tCDKDülogPªPro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘PªPro˚ss
(
	`ObjOf
(w),f,d)

	)

213 
	#£tCDKDülogPo°Pro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘Po°Pro˚ss
(
	`ObjOf
(w),f,d)

	)

215 #ifde‡
__˝lu•lus


	@/usr/include/cdk/draw.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKDRAW_H


7 
	#CDKDRAW_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

60 
boxWödow
 (

61 
WINDOW
 * ,

62 
chty≥
 );

67 
døwLöe
 (

68 
WINDOW
 * ,

73 
chty≥
 );

78 
wrôeBœnks
 (

79 
WINDOW
 * ,

89 
wrôeCh¨
 (

90 
WINDOW
 * ,

101 
wrôeCh¨Aârib
 (

102 
WINDOW
 * ,

106 
chty≥
 ,

114 
wrôeChty≥
 (

115 
WINDOW
 * ,

118 
chty≥
 * ,

126 
wrôeChty≥Aârib
 (

127 
WINDOW
 * ,

130 
chty≥
 * ,

131 
chty≥
 ,

139 
©åbox
 (

140 
WINDOW
 * ,

141 
chty≥
 ,

142 
chty≥
 ,

143 
chty≥
 ,

144 
chty≥
 ,

145 
chty≥
 ,

146 
chty≥
 ,

147 
chty≥
 );

152 
døwObjBox
 (

153 
WINDOW
 * ,

154 
CDKOBJS
 * );

159 
døwShadow
 (

160 
WINDOW
 * );

162 #ifde‡
__˝lu•lus


	@/usr/include/cdk/dscale.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKDSCALE_H


7 
	#CDKDSCALE_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

58 
	sSDSˇÀ
 {

59 
CDKOBJS
 
obj
;

60 
WINDOW
 * 
∑ª¡
;

61 
WINDOW
 * 
wö
;

62 
WINDOW
 * 
shadowWö
;

63 
WINDOW
 * 
fõldWö
;

64 
WINDOW
 * 
œbñWö
;

65 
tôÀAdj
;

66 
chty≥
 * 
œbñ
;

67 
œbñLí
;

68 
boxHeight
;

69 
boxWidth
;

70 
fõldWidth
;

71 
fõldEdô
;

72 
chty≥
 
fõldAâr
;

73 
low
;

74 
high
;

75 
öc
;

76 
Á°öc
;

77 
cuºít
;

78 
digôs
;

79 
EExôTy≥
 
exôTy≥
;

80 
boﬁón
 
shadow
;

82 
SDSˇÀ
 
	tCDKDSCALE
;

87 
CDKDSCALE
 *
√wCDKDSˇÀ
 (

88 
CDKSCREEN
 * ,

93 
chty≥
 ,

101 
boﬁón
 ,

102 
boﬁón
 );

107 
a˘iv©eCDKDSˇÀ
 (

108 
CDKDSCALE
 * ,

109 
chty≥
 * );

114 
	#öje˘CDKDSˇÀ
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
DoubÀ
)

	)

119 
£tCDKDSˇÀ
 (

120 
CDKDSCALE
 * ,

124 
boﬁón
 );

129 
£tCDKDSˇÀLowHigh
 (

130 
CDKDSCALE
 * ,

134 
gëCDKDSˇÀLowVÆue
 (

135 
CDKDSCALE
 * );

137 
gëCDKDSˇÀHighVÆue
 (

138 
CDKDSCALE
 * );

143 
£tCDKDSˇÀDigôs
 (

144 
CDKDSCALE
 * ,

147 
gëCDKDSˇÀDigôs
 (

148 
CDKDSCALE
 * );

153 
£tCDKDSˇÀVÆue
 (

154 
CDKDSCALE
 * ,

157 
gëCDKDSˇÀVÆue
 (

158 
CDKDSCALE
 * );

163 
£tCDKDSˇÀBox
 (

164 
CDKDSCALE
 * ,

165 
boﬁón
 );

167 
boﬁón
 
gëCDKDSˇÀBox
 (

168 
CDKDSCALE
 * );

173 
	#£tCDKDSˇÀULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

174 
	#£tCDKDSˇÀURCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

175 
	#£tCDKDSˇÀLLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

176 
	#£tCDKDSˇÀLRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

177 
	#£tCDKDSˇÀVîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

178 
	#£tCDKDSˇÀH‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

179 
	#£tCDKDSˇÀBoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

184 
	#£tCDKDSˇÀBackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

189 
	#£tCDKDSˇÀBackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

194 
	#døwCDKDSˇÀ
(
obj
,
Box
Ë
	`døwCDKObje˘
(obj,Box)

	)

199 
	#îa£CDKDSˇÀ
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

204 
	#moveCDKDSˇÀ
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

209 
	#posôi⁄CDKDSˇÀ
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

214 
	#de°royCDKDSˇÀ
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

219 
	#£tCDKDSˇÀPªPro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘PªPro˚ss
(
	`ObjOf
(w),f,d)

	)

220 
	#£tCDKDSˇÀPo°Pro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘Po°Pro˚ss
(
	`ObjOf
(w),f,d)

	)

222 #ifde‡
__˝lu•lus


	@/usr/include/cdk/entry.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKENTRY_H


7 
	#CDKENTRY_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

60 
SE¡ry
 
	tCDKENTRY
;

61 (*
ENTRYCB
Ë(
	tSE¡ry
 *
	tíåy
, 
	tchty≥
 
	tch¨a˘î
);

63 
	sSE¡ry
 {

64 
CDKOBJS
 
obj
;

65 
WINDOW
 * 
∑ª¡
;

66 
WINDOW
 * 
wö
;

67 
WINDOW
 * 
shadowWö
;

68 
WINDOW
 * 
œbñWö
;

69 
WINDOW
 * 
fõldWö
;

70 
chty≥
 * 
œbñ
;

71 
œbñLí
;

72 
tôÀAdj
;

73 
chty≥
 
fõldAâr
;

74 
fõldWidth
;

75 * 
öfo
;

76 
öfoWidth
;

77 
s¸ìnCﬁ
;

78 
À·Ch¨
;

79 
mö
;

80 
max
;

81 
boxWidth
;

82 
boxHeight
;

83 
EExôTy≥
 
exôTy≥
;

84 
EDi•œyTy≥
 
di•Ty≥
;

85 
boﬁón
 
shadow
;

86 
chty≥
 
fûÀr
;

87 
chty≥
 
hiddí
;

88 
ENTRYCB
 
ˇŒback‚
;

94 
CDKENTRY
 *
√wCDKE¡ry
 (

95 
CDKSCREEN
 * ,

100 
chty≥
 ,

101 
chty≥
 ,

102 
EDi•œyTy≥
 ,

106 
boﬁón
 ,

107 
boﬁón
 );

112 *
a˘iv©eCDKE¡ry
 (

113 
CDKENTRY
 * ,

114 
chty≥
 * );

119 
	#öje˘CDKE¡ry
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
Såög
)

	)

124 
£tCDKE¡ry
 (

125 
CDKENTRY
 * ,

129 
boﬁón
 );

134 
£tCDKE¡ryVÆue
 (

135 
CDKENTRY
 * ,

137 *
gëCDKE¡ryVÆue
 (

138 
CDKENTRY
 * );

144 
£tCDKE¡ryMax
 (

145 
CDKENTRY
 * ,

147 
gëCDKE¡ryMax
 (

148 
CDKENTRY
 * );

154 
£tCDKE¡ryMö
 (

155 
CDKENTRY
 * ,

157 
gëCDKE¡ryMö
 (

158 
CDKENTRY
 * );

163 
£tCDKE¡ryFûÀrCh¨
 (

164 
CDKENTRY
 * ,

165 
chty≥
 );

166 
chty≥
 
gëCDKE¡ryFûÀrCh¨
 (

167 
CDKENTRY
 * );

172 
£tCDKE¡ryHiddíCh¨
 (

173 
CDKENTRY
 * ,

174 
chty≥
 );

175 
chty≥
 
gëCDKE¡ryHiddíCh¨
 (

176 
CDKENTRY
 * );

181 
£tCDKE¡ryBox
 (

182 
CDKENTRY
 * ,

183 
boﬁón
 );

184 
boﬁón
 
gëCDKE¡ryBox
 (

185 
CDKENTRY
 * );

190 
	#£tCDKE¡ryULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

191 
	#£tCDKE¡ryURCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

192 
	#£tCDKE¡ryLLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

193 
	#£tCDKE¡ryLRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

194 
	#£tCDKE¡ryVîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

195 
	#£tCDKE¡ryH‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

196 
	#£tCDKE¡ryBoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

201 
	#£tCDKE¡ryBackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

206 
	#£tCDKE¡ryBackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

211 
£tCDKE¡ryHighlight
 (

212 
CDKENTRY
 * ,

213 
chty≥
 ,

214 
boﬁón
 );

219 
	#døwCDKE¡ry
(
obj
,
box
Ë
	`døwCDKObje˘
(obj,box)

	)

224 
	#îa£CDKE¡ry
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

229 
˛ónCDKE¡ry
 (

230 
CDKENTRY
 * );

235 
	#moveCDKE¡ry
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

240 
	#posôi⁄CDKE¡ry
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

245 
	#de°royCDKE¡ry
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

250 
£tCDKE¡ryCB
 (

251 
CDKENTRY
 * ,

252 
ENTRYCB
 );

257 
	#£tCDKE¡ryPªPro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘PªPro˚ss
(
	`ObjOf
(w),f,d)

	)

258 
	#£tCDKE¡ryPo°Pro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘Po°Pro˚ss
(
	`ObjOf
(w),f,d)

	)

260 #ifde‡
__˝lu•lus


	@/usr/include/cdk/fscale.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKFSCALE_H


7 
	#CDKFSCALE_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

58 
	sSFSˇÀ
 {

59 
CDKOBJS
 
obj
;

60 
WINDOW
 * 
∑ª¡
;

61 
WINDOW
 * 
wö
;

62 
WINDOW
 * 
shadowWö
;

63 
WINDOW
 * 
fõldWö
;

64 
WINDOW
 * 
œbñWö
;

65 
tôÀAdj
;

66 
chty≥
 * 
œbñ
;

67 
œbñLí
;

68 
boxHeight
;

69 
boxWidth
;

70 
fõldWidth
;

71 
fõldEdô
;

72 
chty≥
 
fõldAâr
;

73 
low
;

74 
high
;

75 
öc
;

76 
Á°öc
;

77 
cuºít
;

78 
digôs
;

79 
EExôTy≥
 
exôTy≥
;

80 
boﬁón
 
shadow
;

82 
SFSˇÀ
 
	tCDKFSCALE
;

87 
CDKFSCALE
 *
√wCDKFSˇÀ
 (

88 
CDKSCREEN
 * ,

93 
chty≥
 ,

101 
boﬁón
 ,

102 
boﬁón
 );

107 
a˘iv©eCDKFSˇÀ
 (

108 
CDKFSCALE
 * ,

109 
chty≥
 * );

114 
	#öje˘CDKFSˇÀ
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
Flﬂt
)

	)

119 
£tCDKFSˇÀ
 (

120 
CDKFSCALE
 * ,

124 
boﬁón
 );

129 
£tCDKFSˇÀLowHigh
 (

130 
CDKFSCALE
 * ,

134 
gëCDKFSˇÀLowVÆue
 (

135 
CDKFSCALE
 * );

137 
gëCDKFSˇÀHighVÆue
 (

138 
CDKFSCALE
 * );

143 
£tCDKFSˇÀDigôs
 (

144 
CDKFSCALE
 * ,

147 
gëCDKFSˇÀDigôs
 (

148 
CDKFSCALE
 * );

153 
£tCDKFSˇÀVÆue
 (

154 
CDKFSCALE
 * ,

157 
gëCDKFSˇÀVÆue
 (

158 
CDKFSCALE
 * );

163 
£tCDKFSˇÀBox
 (

164 
CDKFSCALE
 * ,

165 
boﬁón
 );

167 
boﬁón
 
gëCDKFSˇÀBox
 (

168 
CDKFSCALE
 * );

173 
	#£tCDKFSˇÀULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

174 
	#£tCDKFSˇÀURCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

175 
	#£tCDKFSˇÀLLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

176 
	#£tCDKFSˇÀLRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

177 
	#£tCDKFSˇÀVîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

178 
	#£tCDKFSˇÀH‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

179 
	#£tCDKFSˇÀBoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

184 
	#£tCDKFSˇÀBackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

189 
	#£tCDKFSˇÀBackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

194 
	#døwCDKFSˇÀ
(
obj
,
Box
Ë
	`døwCDKObje˘
(obj,Box)

	)

199 
	#îa£CDKFSˇÀ
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

204 
	#moveCDKFSˇÀ
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

209 
	#posôi⁄CDKFSˇÀ
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

214 
	#de°royCDKFSˇÀ
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

219 
	#£tCDKFSˇÀPªPro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘PªPro˚ss
(
	`ObjOf
(w),f,d)

	)

220 
	#£tCDKFSˇÀPo°Pro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘Po°Pro˚ss
(
	`ObjOf
(w),f,d)

	)

222 #ifde‡
__˝lu•lus


	@/usr/include/cdk/fselect.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKFSELECT_H


7 
	#CDKFSELECT_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

20 
	~<cdk/íåy.h
>

21 
	~<cdk/s¸ﬁl.h
>

62 
	sSFûeSñe˘‹
 {

63 
CDKOBJS
 
obj
;

64 
WINDOW
 * 
∑ª¡
;

65 
WINDOW
 * 
wö
;

66 
WINDOW
 * 
shadowWö
;

67 
CDKENTRY
 * 
íåyFõld
;

68 
CDKSCROLL
 * 
s¸ﬁlFõld
;

69 ** 
dúC⁄ã¡s
;

70 
fûeCou¡î
;

71 * 
pwd
;

72 * 
∑th«me
;

73 
xpos
;

74 
ypos
;

75 
boxHeight
;

76 
boxWidth
;

77 
chty≥
 
fõldAâribuã
;

78 
chty≥
 
fûÀrCh¨a˘î
;

79 
chty≥
 
highlight
;

80 * 
dúAâribuã
;

81 * 
fûeAâribuã
;

82 * 
lökAâribuã
;

83 * 
sockAâribuã
;

84 
EExôTy≥
 
exôTy≥
;

85 
boﬁón
 
shadow
;

87 
SFûeSñe˘‹
 
	tCDKFSELECT
;

92 
CDKFSELECT
 *
√wCDKF£À˘
 (

93 
CDKSCREEN
 * ,

100 
chty≥
 ,

101 
chty≥
 ,

102 
chty≥
 ,

107 
boﬁón
 ,

108 
boﬁón
 );

113 *
a˘iv©eCDKF£À˘
 (

114 
CDKFSELECT
 * ,

115 
chty≥
 * );

120 
	#öje˘CDKF£À˘
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
Såög
)

	)

125 
£tCDKF£À˘
 (

126 
CDKFSELECT
 * ,

128 
chty≥
 ,

129 
chty≥
 ,

130 
chty≥
 ,

135 
boﬁón
 );

140 
£tCDKF£À˘Dúe˘‹y
 (

141 
CDKFSELECT
 * ,

144 *
gëCDKF£À˘Dúe˘‹y
 (

145 
CDKFSELECT
 * );

150 
£tCDKF£À˘FûÀrCh¨
 (

151 
CDKFSELECT
 * ,

152 
chty≥
 );

154 
chty≥
 
gëCDKF£À˘FûÀrCh¨
 (

155 
CDKFSELECT
 * );

160 
£tCDKF£À˘Highlight
 (

161 
CDKFSELECT
 * ,

162 
chty≥
 );

164 
chty≥
 
gëCDKF£À˘Highlight
 (

165 
CDKFSELECT
 * );

172 
£tCDKF£À˘DúAâribuã
 (

173 
CDKFSELECT
 * ,

176 
£tCDKF£À˘LökAâribuã
 (

177 
CDKFSELECT
 * ,

180 
£tCDKF£À˘FûeAâribuã
 (

181 
CDKFSELECT
 * ,

184 
£tCDKF£À˘SockëAâribuã
 (

185 
CDKFSELECT
 * ,

193 *
gëCDKF£À˘DúAâribuã
 (

194 
CDKFSELECT
 * );

196 *
gëCDKF£À˘LökAâribuã
 (

197 
CDKFSELECT
 * );

199 *
gëCDKF£À˘FûeAâribuã
 (

200 
CDKFSELECT
 * );

202 *
gëCDKF£À˘SockëAâribuã
 (

203 
CDKFSELECT
 * );

208 
£tCDKF£À˘Box
 (

209 
CDKFSELECT
 * ,

210 
boﬁón
 );

212 
boﬁón
 
gëCDKF£À˘Box
 (

213 
CDKFSELECT
 * );

218 
£tCDKF£À˘DúC⁄ã¡s
 (

219 
CDKFSELECT
 * );

221 **
gëCDKF£À˘DúC⁄ã¡s
 (

222 
CDKFSELECT
 * ,

228 
£tCDKF£À˘C⁄ã¡s
 (

229 
CDKFSELECT
 * ,

233 **
gëCDKF£À˘C⁄ã¡s
 (

234 
CDKFSELECT
 * ,

240 
gëCDKF£À˘CuºítIãm
(

241 
CDKFSELECT
 * );

243 
£tCDKF£À˘CuºítIãm
(

244 
CDKFSELECT
 * ,

250 
	#£tCDKF£À˘ULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

251 
	#£tCDKF£À˘URCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

252 
	#£tCDKF£À˘LLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

253 
	#£tCDKF£À˘LRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

254 
	#£tCDKF£À˘VîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

255 
	#£tCDKF£À˘H‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

256 
	#£tCDKF£À˘BoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

261 
	#£tCDKF£À˘BackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

266 
	#£tCDKF£À˘BackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

271 
	#døwCDKF£À˘
(
obj
,
Box
Ë
	`døwCDKObje˘
(obj,Box)

	)

276 
	#îa£CDKF£À˘
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

281 
	#moveCDKF£À˘
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

286 
	#posôi⁄CDKF£À˘
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

291 
	#de°royCDKF£À˘
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

298 
dñëeFûeCB
 (

299 
EObje˘Ty≥
 ,

306 
£tCDKF£À˘PªPro˚ss
 (

307 
CDKFSELECT
 * ,

308 
PROCESSFN
 ,

314 
£tCDKF£À˘Po°Pro˚ss
 (

315 
CDKFSELECT
 * ,

316 
PROCESSFN
 ,

319 #ifde‡
__˝lu•lus


	@/usr/include/cdk/fslider.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKFSLIDER_H


7 
	#CDKFSLIDER_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

58 
	sSFSlidî
 {

59 
CDKOBJS
 
obj
;

60 
WINDOW
 * 
∑ª¡
;

61 
WINDOW
 * 
wö
;

62 
WINDOW
 * 
shadowWö
;

63 
WINDOW
 * 
fõldWö
;

64 
WINDOW
 * 
œbñWö
;

65 
tôÀAdj
;

66 
chty≥
 * 
œbñ
;

67 
œbñLí
;

68 
boxHeight
;

69 
boxWidth
;

70 
fõldWidth
;

71 
fõldEdô
;

72 
chty≥
 
fûÀr
;

73 
low
;

74 
high
;

75 
öc
;

76 
Á°öc
;

77 
cuºít
;

78 
digôs
;

79 
EExôTy≥
 
exôTy≥
;

80 
boﬁón
 
shadow
;

82 
SFSlidî
 
	tCDKFSLIDER
;

87 
CDKFSLIDER
 *
√wCDKFSlidî
 (

88 
CDKSCREEN
 * ,

93 
chty≥
 ,

101 
boﬁón
 ,

102 
boﬁón
 );

107 
a˘iv©eCDKFSlidî
 (

108 
CDKFSLIDER
 * ,

109 
chty≥
 * );

114 
	#öje˘CDKFSlidî
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
Flﬂt
)

	)

119 
£tCDKFSlidî
 (

120 
CDKFSLIDER
 * ,

124 
boﬁón
 );

129 
£tCDKFSlidîLowHigh
 (

130 
CDKFSLIDER
 * ,

134 
gëCDKFSlidîLowVÆue
 (

135 
CDKFSLIDER
 * );

137 
gëCDKFSlidîHighVÆue
 (

138 
CDKFSLIDER
 * );

143 
£tCDKFSlidîDigôs
 (

144 
CDKFSLIDER
 * ,

147 
gëCDKFSlidîDigôs
 (

148 
CDKFSLIDER
 * );

153 
£tCDKFSlidîVÆue
 (

154 
CDKFSLIDER
 * ,

157 
gëCDKFSlidîVÆue
 (

158 
CDKFSLIDER
 * );

163 
£tCDKFSlidîBox
 (

164 
CDKFSLIDER
 * ,

165 
boﬁón
 );

167 
boﬁón
 
gëCDKFSlidîBox
 (

168 
CDKFSLIDER
 * );

173 
	#£tCDKFSlidîULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

174 
	#£tCDKFSlidîURCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

175 
	#£tCDKFSlidîLLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

176 
	#£tCDKFSlidîLRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

177 
	#£tCDKFSlidîVîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

178 
	#£tCDKFSlidîH‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

179 
	#£tCDKFSlidîBoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

184 
	#£tCDKFSlidîBackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

189 
	#£tCDKFSlidîBackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

194 
	#døwCDKFSlidî
(
obj
,
Box
Ë
	`døwCDKObje˘
(obj,Box)

	)

199 
	#îa£CDKFSlidî
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

204 
	#moveCDKFSlidî
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

209 
	#posôi⁄CDKFSlidî
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

214 
	#de°royCDKFSlidî
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

219 
	#£tCDKFSlidîPªPro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘PªPro˚ss
(
	`ObjOf
(w),f,d)

	)

220 
	#£tCDKFSlidîPo°Pro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘Po°Pro˚ss
(
	`ObjOf
(w),f,d)

	)

222 #ifde‡
__˝lu•lus


	@/usr/include/cdk/graph.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKGRAPH_H


7 
	#CDKGRAPH_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

60 
	sSGøph
 {

61 
CDKOBJS
 
obj
;

62 
WINDOW
 * 
∑ª¡
;

63 
WINDOW
 * 
wö
;

64 
WINDOW
 * 
shadowWö
;

65 
tôÀAdj
;

66 
chty≥
 * 
gøphCh¨
;

67 
boﬁón
 
shadow
;

68 
boxHeight
;

69 
boxWidth
;

70 
chty≥
 * 
xtôÀ
;

71 
xtôÀPos
;

72 
xtôÀLí
;

73 * 
vÆues
;

74 
cou¡
;

75 
möx
;

76 
maxx
;

77 
xsˇÀ
;

78 
txpos
;

79 
chty≥
 * 
ytôÀ
;

80 
ytôÀPos
;

81 
ytôÀLí
;

82 
ysˇÀ
;

83 
typos
;

84 
EGøphDi•œyTy≥
 
di•œyTy≥
;

86 
SGøph
 
	tCDKGRAPH
;

91 
CDKGRAPH
 *
√wCDKGøph
 (

92 
CDKSCREEN
 * ,

105 
a˘iv©eCDKGøph
 (

106 
CDKGRAPH
 * ,

107 
chty≥
 * );

112 
£tCDKGøph
 (

113 
CDKGRAPH
 * ,

117 
boﬁón
 ,

118 
EGøphDi•œyTy≥
 );

123 
£tCDKGøphVÆues
 (

124 
CDKGRAPH
 * ,

127 
boﬁón
 );

129 
£tCDKGøphVÆue
 (

130 
CDKGRAPH
 * ,

133 
boﬁón
 );

135 *
gëCDKGøphVÆues
 (

136 
CDKGRAPH
 * ,

139 
gëCDKGøphVÆue
 (

140 
CDKGRAPH
 * ,

146 
£tCDKGøphCh¨a˘îs
 (

147 
CDKGRAPH
 * ,

150 
£tCDKGøphCh¨a˘î
 (

151 
CDKGRAPH
 * ,

155 
chty≥
 *
gëCDKGøphCh¨a˘îs
 (

156 
CDKGRAPH
 * );

158 
chty≥
 
gëCDKGøphCh¨a˘î
 (

159 
CDKGRAPH
 * ,

165 
£tCDKGøphDi•œyTy≥
 (

166 
CDKGRAPH
 * ,

167 
EGøphDi•œyTy≥
 );

169 
EGøphDi•œyTy≥
 
gëCDKGøphDi•œyTy≥
 (

170 
CDKGRAPH
 * );

175 
£tCDKGøphBox
 (

176 
CDKGRAPH
 * ,

177 
boﬁón
 );

179 
boﬁón
 
gëCDKGøphBox
 (

180 
CDKGRAPH
 * );

185 
	#£tCDKGøphULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

186 
	#£tCDKGøphURCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

187 
	#£tCDKGøphLLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

188 
	#£tCDKGøphLRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

189 
	#£tCDKGøphVîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

190 
	#£tCDKGøphH‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

191 
	#£tCDKGøphBoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

196 
	#£tCDKGøphBackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

201 
	#£tCDKGøphBackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

206 
	#døwCDKGøph
(
obj
,
Box
Ë
	`døwCDKObje˘
(obj,Box)

	)

211 
	#îa£CDKGøph
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

216 
	#moveCDKGøph
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

221 
	#posôi⁄CDKGøph
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

226 
	#de°royCDKGøph
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

228 #ifde‡
__˝lu•lus


	@/usr/include/cdk/histogram.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKHISTOGRAM_H


7 
	#CDKHISTOGRAM_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

60 
	sSHi°ogøm
 {

61 
CDKOBJS
 
obj
;

62 
WINDOW
 * 
∑ª¡
;

63 
WINDOW
 * 
wö
;

64 
WINDOW
 * 
shadowWö
;

65 
tôÀAdj
;

66 * 
curSåög
;

67 * 
lowSåög
;

68 * 
highSåög
;

69 
chty≥
 
fûÀr
;

70 
≥r˚¡
;

71 
fõldHeight
;

72 
fõldWidth
;

73 
b¨Size
;

74 
‹õ¡
;

75 
°©sPos
;

76 
chty≥
 
°©sAâr
;

77 
EHi°ogømDi•œyTy≥
 
võwTy≥
;

78 
high
;

79 
low
;

80 
vÆue
;

81 
lowx
;

82 
lowy
;

83 
curx
;

84 
cury
;

85 
highx
;

86 
highy
;

87 
boxWidth
;

88 
boxHeight
;

89 
boﬁón
 
shadow
;

91 
SHi°ogøm
 
	tCDKHISTOGRAM
;

96 
CDKHISTOGRAM
 *
√wCDKHi°ogøm
 (

97 
CDKSCREEN
 * ,

104 
boﬁón
 ,

105 
boﬁón
 );

111 
a˘iv©eCDKHi°ogøm
 (

112 
CDKHISTOGRAM
 * ,

113 
chty≥
 * );

118 
£tCDKHi°ogøm
 (

119 
CDKHISTOGRAM
 * ,

120 
EHi°ogømDi•œyTy≥
 ,

122 
chty≥
 ,

126 
chty≥
 ,

127 
boﬁón
 );

132 
£tCDKHi°ogømVÆue
 (

133 
CDKHISTOGRAM
 * ,

138 
gëCDKHi°ogømVÆue
 (

139 
CDKHISTOGRAM
 * );

141 
gëCDKHi°ogømLowVÆue
 (

142 
CDKHISTOGRAM
 * );

144 
gëCDKHi°ogømHighVÆue
 (

145 
CDKHISTOGRAM
 * );

150 
£tCDKHi°ogømDi•œyTy≥
 (

151 
CDKHISTOGRAM
 * ,

152 
EHi°ogømDi•œyTy≥
 );

154 
EHi°ogømDi•œyTy≥
 
gëCDKHi°ogømVõwTy≥
 (

155 
CDKHISTOGRAM
 * );

160 
£tCDKHi°ogømFûÀrCh¨
 (

161 
CDKHISTOGRAM
 * ,

162 
chty≥
 );

164 
chty≥
 
gëCDKHi°ogømFûÀrCh¨
 (

165 
CDKHISTOGRAM
 * );

170 
£tCDKHi°ogømSètsPos
 (

171 
CDKHISTOGRAM
 * ,

174 
gëCDKHi°ogømSètsPos
 (

175 
CDKHISTOGRAM
 * );

180 
£tCDKHi°ogømSètsAâr
 (

181 
CDKHISTOGRAM
 * ,

182 
chty≥
 );

184 
chty≥
 
gëCDKHi°ogømSètsAâr
 (

185 
CDKHISTOGRAM
 * );

190 
£tCDKHi°ogømBox
 (

191 
CDKHISTOGRAM
 * ,

192 
boﬁón
 );

194 
boﬁón
 
gëCDKHi°ogømBox
 (

195 
CDKHISTOGRAM
 * );

200 
	#£tCDKHi°ogømULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

201 
	#£tCDKHi°ogømURCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

202 
	#£tCDKHi°ogømLLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

203 
	#£tCDKHi°ogømLRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

204 
	#£tCDKHi°ogømVîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

205 
	#£tCDKHi°ogømH‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

206 
	#£tCDKHi°ogømBoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

211 
	#£tCDKHi°ogømBackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

216 
	#£tCDKHi°ogømBackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

221 
	#døwCDKHi°ogøm
(
obj
,
Box
Ë
	`døwCDKObje˘
(obj,Box)

	)

226 
	#îa£CDKHi°ogøm
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

231 
	#moveCDKHi°ogøm
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

236 
	#posôi⁄CDKHi°ogøm
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

241 
	#de°royCDKHi°ogøm
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

243 #ifde‡
__˝lu•lus


	@/usr/include/cdk/itemlist.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKITEMLIST_H


7 
	#CDKITEMLIST_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

60 
	sSIãmLi°
 {

61 
CDKOBJS
 
obj
;

62 
WINDOW
 * 
∑ª¡
;

63 
WINDOW
 * 
wö
;

64 
WINDOW
 * 
shadowWö
;

65 
WINDOW
 * 
œbñWö
;

66 
WINDOW
 * 
fõldWö
;

67 
tôÀAdj
;

68 
chty≥
 * 
œbñ
;

69 
œbñLí
;

70 
fõldWidth
;

71 
chty≥
 ** 
ôem
;

72 * 
ôemPos
;

73 * 
ôemLí
;

74 
li°Size
;

75 
cuºítIãm
;

76 
deÁu…Iãm
;

77 
boxWidth
;

78 
boxHeight
;

79 
EExôTy≥
 
exôTy≥
;

80 
boﬁón
 
shadow
;

82 
SIãmLi°
 
	tCDKITEMLIST
;

87 
CDKITEMLIST
 *
√wCDKIãmli°
 (

88 
CDKSCREEN
 * ,

96 
boﬁón
 ,

97 
boﬁón
 );

102 
a˘iv©eCDKIãmli°
 (

103 
CDKITEMLIST
 * ,

104 
chty≥
 * );

109 
	#öje˘CDKIãmli°
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
I¡
)

	)

114 
£tCDKIãmli°
 (

115 
CDKITEMLIST
 * ,

119 
boﬁón
 );

124 
£tCDKIãmli°VÆues
 (

125 
CDKITEMLIST
 * ,

130 
chty≥
 **
gëCDKIãmli°VÆues
 (

131 
CDKITEMLIST
 * ,

137 
£tCDKIãmli°DeÁu…Iãm
 (

138 
CDKITEMLIST
 * ,

141 
gëCDKIãmli°DeÁu…Iãm
 (

142 
CDKITEMLIST
 * );

147 
£tCDKIãmli°CuºítIãm
 (

148 
CDKITEMLIST
 * ,

151 
gëCDKIãmli°CuºítIãm
 (

152 
CDKITEMLIST
 * );

157 
£tCDKIãmli°Box
 (

158 
CDKITEMLIST
 * ,

159 
boﬁón
 );

161 
boﬁón
 
gëCDKIãmli°Box
 (

162 
CDKITEMLIST
 * );

167 
	#£tCDKIãmli°ULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

168 
	#£tCDKIãmli°URCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

169 
	#£tCDKIãmli°LLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

170 
	#£tCDKIãmli°LRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

171 
	#£tCDKIãmli°VîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

172 
	#£tCDKIãmli°H‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

173 
	#£tCDKIãmli°BoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

178 
	#£tCDKIãmli°BackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

183 
	#£tCDKIãmli°BackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

188 
	#døwCDKIãmli°
(
obj
,
Box
Ë
	`døwCDKObje˘
(obj,Box)

	)

193 
døwCDKIãmli°Fõld
 (

194 
CDKITEMLIST
 * ,

195 
boﬁón
 );

200 
	#îa£CDKIãmli°
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

205 
	#moveCDKIãmli°
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

210 
	#posôi⁄CDKIãmli°
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

215 
	#de°royCDKIãmli°
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

220 
	#£tCDKIãmli°PªPro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘PªPro˚ss
(
	`ObjOf
(w),f,d)

	)

221 
	#£tCDKIãmli°Po°Pro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘Po°Pro˚ss
(
	`ObjOf
(w),f,d)

	)

223 #ifde‡
__˝lu•lus


	@/usr/include/cdk/label.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKLABEL_H


7 
	#CDKLABEL_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

60 
	#MAX_LABEL_ROWS
 300

	)

65 
	sSLabñ
 {

66 
CDKOBJS
 
obj
;

67 
WINDOW
 * 
∑ª¡
;

68 
WINDOW
 * 
wö
;

69 
WINDOW
 * 
shadowWö
;

70 
chty≥
 ** 
öfo
;

71 * 
öfoLí
;

72 * 
öfoPos
;

73 
boxWidth
;

74 
boxHeight
;

75 
xpos
;

76 
ypos
;

77 
rows
;

78 
boﬁón
 
shadow
;

80 
SLabñ
 
	tCDKLABEL
;

85 
CDKLABEL
 *
√wCDKLabñ
 (

86 
CDKSCREEN
 * ,

91 
boﬁón
 ,

92 
boﬁón
 );

98 
a˘iv©eCDKLabñ
 (

99 
CDKLABEL
 * ,

100 
chty≥
 * );

105 
£tCDKLabñ
 (

106 
CDKLABEL
 * ,

109 
boﬁón
 );

114 
£tCDKLabñMesßge
 (

115 
CDKLABEL
 * ,

118 
chty≥
 **
gëCDKLabñMesßge
 (

119 
CDKLABEL
 * ,

125 
£tCDKLabñBox
 (

126 
CDKLABEL
 * ,

127 
boﬁón
 );

128 
boﬁón
 
gëCDKLabñBox
 (

129 
CDKLABEL
 * );

134 
	#døwCDKLabñ
(
obj
,
Box
Ë
	`døwCDKObje˘
(obj,Box)

	)

139 
	#£tCDKLabñULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

140 
	#£tCDKLabñURCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

141 
	#£tCDKLabñLLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

142 
	#£tCDKLabñLRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

143 
	#£tCDKLabñVîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

144 
	#£tCDKLabñH‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

145 
	#£tCDKLabñBoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

150 
	#£tCDKLabñBackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

155 
	#£tCDKLabñBackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

160 
	#îa£CDKLabñ
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

165 
	#de°royCDKLabñ
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

171 
waôCDKLabñ
 (

172 
CDKLABEL
 * ,

178 
	#moveCDKLabñ
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

183 
	#posôi⁄CDKLabñ
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

185 #ifde‡
__˝lu•lus


	@/usr/include/cdk/marquee.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKMARQUEE_H


7 
	#CDKMARQUEE_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

60 
	sSM¨quì
 {

61 
CDKOBJS
 
obj
;

62 
WINDOW
 * 
∑ª¡
;

63 
WINDOW
 * 
wö
;

64 
WINDOW
 * 
shadowWö
;

65 
a˘ive
;

66 
width
;

67 
boxWidth
;

68 
boxHeight
;

69 
boﬁón
 
shadow
;

71 
SM¨quì
 
	tCDKMARQUEE
;

76 
CDKMARQUEE
 *
√wCDKM¨quì
 (

77 
CDKSCREEN
 * ,

81 
boﬁón
 ,

82 
boﬁón
 );

87 
a˘iv©eCDKM¨quì
 (

88 
CDKMARQUEE
 * ,

92 
boﬁón
 );

97 
dó˘iv©eCDKM¨quì
 (

98 
CDKMARQUEE
 * );

103 
	#døwCDKM¨quì
(
obj
,
Box
Ë
	`døwCDKObje˘
(obj,Box)

	)

108 
	#îa£CDKM¨quì
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

113 
	#moveCDKM¨quì
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

118 
	#posôi⁄CDKM¨quì
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

123 
	#de°royCDKM¨quì
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

128 
	#£tCDKM¨quìULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

129 
	#£tCDKM¨quìURCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

130 
	#£tCDKM¨quìLLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

131 
	#£tCDKM¨quìLRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

132 
	#£tCDKM¨quìVîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

133 
	#£tCDKM¨quìH‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

134 
	#£tCDKM¨quìBoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

139 
£tCDKM¨quìBox
 (

140 
CDKMARQUEE
 * ,

141 
boﬁón
 );

143 
boﬁón
 
gëCDKM¨quìBox
 (

144 
CDKMARQUEE
 * );

149 
	#£tCDKM¨quìBackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

154 
	#£tCDKM¨quìBackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

156 #ifde‡
__˝lu•lus


	@/usr/include/cdk/matrix.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKMATRIX_H


7 
	#CDKMATRIX_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

60 
	#MAX_MATRIX_ROWS
 1000

	)

61 
	#MAX_MATRIX_COLS
 1000

	)

66 
SM©rix
 
	tCDKMATRIX
;

67 (*
MATRIXCB
Ë(
	tCDKMATRIX
 *
	tm©rix
, 
	tchty≥
 
	töput
);

69 
	#CELL_LIMIT
 
MAX_MATRIX_ROWS
][
MAX_MATRIX_COLS


	)

71 
	#NEW_CDKMATRIX
 1

	)

73 #i‡
NEW_CDKMATRIX


74 
	#CELL_INDEX
(
m©rix
, 
row
,
cﬁ
Ë((‘owË* ((m©rix)->
cﬁs
 + 1)Ë+ (cﬁ))

	)

76 
	#CELL_INDEX
(
m©rix
, 
row
,
cﬁ
Ë‘ow)][(cﬁ)

	)

79 
	#MATRIX_CELL
(
m©rix
,
row
,
cﬁ
Ë((m©rix)->
˚Œ
[
	`CELL_INDEX
(m©rix,Ñow, cﬁ)])

	)

80 
	#MATRIX_INFO
(
m©rix
,
row
,
cﬁ
Ë((m©rix)->
öfo
[
	`CELL_INDEX
(m©rix,Ñow, cﬁ)])

	)

82 
	sSM©rix
 {

83 
CDKOBJS
 
obj
;

84 
WINDOW
 * 
∑ª¡
;

85 
WINDOW
 * 
wö
;

86 
WINDOW
 * 
shadowWö
;

87 #i‡
NEW_CDKMATRIX


88 
WINDOW
 ** 
˚Œ
;

89 ** 
öfo
;

91 
WINDOW
 * 
˚Œ
[
CELL_LIMIT
];

92 * 
öfo
[
CELL_LIMIT
];

94 
tôÀAdj
;

95 
rows
;

96 
cﬁs
;

97 
vrows
;

98 
vcﬁs
;

99 * 
cﬁwidths
;

100 * 
cﬁvÆues
;

101 
chty≥
 ** 
cﬁtôÀ
;

102 * 
cﬁtôÀLí
;

103 * 
cﬁtôÀPos
;

104 
max˘
;

105 
chty≥
 ** 
rowtôÀ
;

106 * 
rowtôÀLí
;

107 * 
rowtôÀPos
;

108 
maxπ
;

109 
boxHeight
;

110 
boxWidth
;

111 
rowS∑˚
;

112 
cﬁS∑˚
;

113 
row
;

114 
cﬁ
;

115 
¸ow
;

116 
ccﬁ
;

117 
åow
;

118 
lcﬁ
;

119 
ﬁd¸ow
;

120 
ﬁdccﬁ
;

121 
ﬁdvrow
;

122 
ﬁdvcﬁ
;

123 
EExôTy≥
 
exôTy≥
;

124 
boﬁón
 
boxCñl
;

125 
boﬁón
 
shadow
;

126 
chty≥
 
highlight
;

127 
domö™t
;

128 
chty≥
 
fûÀr
;

129 
MATRIXCB
 
ˇŒback‚
;

135 
CDKMATRIX
 *
√wCDKM©rix
 (

136 
CDKSCREEN
 * ,

150 
chty≥
 ,

152 
boﬁón
 ,

153 
boﬁón
 ,

154 
boﬁón
 );

159 
a˘iv©eCDKM©rix
 (

160 
CDKMATRIX
 * ,

161 
chty≥
 * );

166 
	#öje˘CDKM©rix
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
I¡
)

	)

173 
	#£tCDKM©rix
(
m©rix
, 
öfo
, 
rows
, 
subSize
) \

174 
	`£tCDKM©rixCñls
(
m©rix
, &
öfo
[0][0], 
rows
, 
MAX_MATRIX_COLS
, 
subSize
)

	)

181 
£tCDKM©rixCñls
 (

182 
CDKMATRIX
 * ,

191 
£tCDKM©rixCñl
 (

192 
CDKMATRIX
 * ,

197 *
gëCDKM©rixCñl
 (

198 
CDKMATRIX
 * ,

205 
gëCDKM©rixCﬁ
 (

206 
CDKMATRIX
 * );

208 
gëCDKM©rixRow
 (

209 
CDKMATRIX
 * );

214 
	#£tCDKM©rixULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

215 
	#£tCDKM©rixURCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

216 
	#£tCDKM©rixLLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

217 
	#£tCDKM©rixLRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

218 
	#£tCDKM©rixVîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

219 
	#£tCDKM©rixH‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

220 
	#£tCDKM©rixBoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

225 
	#£tCDKM©rixBackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

230 
	#£tCDKM©rixBackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

235 
	#døwCDKM©rix
(
obj
,
Box
Ë
	`døwCDKObje˘
(obj,Box)

	)

240 
	#îa£CDKM©rix
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

245 
˛ónCDKM©rix
 (

246 
CDKMATRIX
 * );

251 
˛ónCDKM©rixCñl
 (

252 
CDKMATRIX
 * ,

259 
£tCDKM©rixCB
 (

260 
CDKMATRIX
 * ,

261 
MATRIXCB
 );

266 
moveToCDKM©rixCñl
 (

267 
CDKMATRIX
 * ,

274 
£tCDKM©rixBox
 (

275 
CDKMATRIX
 * ,

276 
boﬁón
 );

278 
boﬁón
 
gëCDKM©rixBox
 (

279 
CDKMATRIX
 * );

284 
	#moveCDKM©rix
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

289 
	#posôi⁄CDKM©rix
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

294 
	#de°royCDKM©rix
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

301 
jumpToCñl
 (

302 
CDKMATRIX
 * ,

309 
	#£tCDKM©rixPªPro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘PªPro˚ss
(
	`ObjOf
(w),f,d)

	)

310 
	#£tCDKM©rixPo°Pro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘Po°Pro˚ss
(
	`ObjOf
(w),f,d)

	)

312 #ifde‡
__˝lu•lus


	@/usr/include/cdk/mentry.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKMENTRY_H


7 
	#CDKMENTRY_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

60 
SMíåy
 
	tCDKMENTRY
;

61 (*
MENTRYCB
Ë(
	tCDKMENTRY
 *
	tmíåy
, 
	tchty≥
 
	tch¨a˘î
);

63 
	sSMíåy
 {

64 
CDKOBJS
 
obj
;

65 
WINDOW
 * 
∑ª¡
;

66 
WINDOW
 * 
wö
;

67 
WINDOW
 * 
shadowWö
;

68 
WINDOW
 * 
œbñWö
;

69 
WINDOW
 * 
fõldWö
;

70 
tôÀAdj
;

71 
chty≥
 * 
œbñ
;

72 
œbñLí
;

73 
œbñPos
;

74 
chty≥
 
fõldAâr
;

75 
fõldWidth
;

76 
boxHeight
;

77 
boxWidth
;

78 * 
öfo
;

79 
tŸÆWidth
;

80 
rows
;

81 
cuºítRow
;

82 
cuºítCﬁ
;

83 
t›Row
;

84 
EDi•œyTy≥
 
di•Ty≥
;

85 
mö
;

86 
logiˇlRows
;

87 
EExôTy≥
 
exôTy≥
;

88 
boﬁón
 
shadow
;

89 
chty≥
 
fûÀr
;

90 
chty≥
 
hiddí
;

91 
MENTRYCB
 
ˇŒback‚
;

97 
CDKMENTRY
 *
√wCDKMíåy
 (

98 
CDKSCREEN
 * ,

103 
chty≥
 ,

104 
chty≥
 ,

105 
EDi•œyTy≥
 ,

110 
boﬁón
 ,

111 
boﬁón
 );

116 *
a˘iv©eCDKMíåy
 (

117 
CDKMENTRY
 * ,

118 
chty≥
 * );

123 
	#öje˘CDKMíåy
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
Såög
)

	)

128 
£tCDKMíåy
 (

129 
CDKMENTRY
 * ,

132 
boﬁón
 );

137 
£tCDKMíåyVÆue
 (

138 
CDKMENTRY
 * ,

141 *
gëCDKMíåyVÆue
 (

142 
CDKMENTRY
 * );

147 
£tCDKMíåyMö
 (

148 
CDKMENTRY
 * ,

151 
gëCDKMíåyMö
 (

152 
CDKMENTRY
 * );

157 
£tCDKMíåyFûÀrCh¨
 (

158 
CDKMENTRY
 * ,

159 
chty≥
 );

161 
chty≥
 
gëCDKMíåyFûÀrCh¨
 (

162 
CDKMENTRY
 * );

167 
£tCDKMíåyHiddíCh¨
 (

168 
CDKMENTRY
 * ,

169 
chty≥
 );

171 
chty≥
 
gëCDKMíåyHiddíCh¨
 (

172 
CDKMENTRY
 * );

177 
£tCDKMíåyBox
 (

178 
CDKMENTRY
 * ,

179 
boﬁón
 );

181 
boﬁón
 
gëCDKMíåyBox
 (

182 
CDKMENTRY
 * );

187 
	#£tCDKMíåyULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

188 
	#£tCDKMíåyURCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

189 
	#£tCDKMíåyLLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

190 
	#£tCDKMíåyLRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

191 
	#£tCDKMíåyVîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

192 
	#£tCDKMíåyH‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

193 
	#£tCDKMíåyBoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

198 
	#£tCDKMíåyBackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

203 
	#£tCDKMíåyBackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

208 
	#døwCDKMíåy
(
obj
,
Box
Ë
	`døwCDKObje˘
(obj,Box)

	)

213 
	#îa£CDKMíåy
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

218 
˛ónCDKMíåy
 (

219 
CDKMENTRY
 * );

224 
	#moveCDKMíåy
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

229 
	#posôi⁄CDKMíåy
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

234 
	#de°royCDKMíåy
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

239 
døwCDKMíåyFõld
 (

240 
CDKMENTRY
 * );

245 
£tCDKMíåyCB
 (

246 
CDKMENTRY
 * ,

247 
MENTRYCB
 );

252 
	#£tCDKMíåyPªPro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘PªPro˚ss
(
	`ObjOf
(w),f,d)

	)

253 
	#£tCDKMíåyPo°Pro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘Po°Pro˚ss
(
	`ObjOf
(w),f,d)

	)

255 #ifde‡
__˝lu•lus


	@/usr/include/cdk/menu.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKMENU_H


7 
	#CDKMENU_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

60 
	#MAX_MENU_ITEMS
 30

	)

61 
	#MAX_SUB_ITEMS
 98

	)

66 
	sSMíu
 {

67 
CDKOBJS
 
obj
;

68 
WINDOW
 * 
∑ª¡
;

69 
WINDOW
 * 
puŒWö
[
MAX_MENU_ITEMS
];

70 
WINDOW
 * 
tôÀWö
[
MAX_MENU_ITEMS
];

71 
chty≥
 * 
tôÀ
[
MAX_MENU_ITEMS
];

72 
tôÀLí
[
MAX_MENU_ITEMS
];

73 
chty≥
 * 
subli°
[
MAX_MENU_ITEMS
][
MAX_SUB_ITEMS
];

74 
subli°Lí
[
MAX_MENU_ITEMS
][
MAX_SUB_ITEMS
];

75 
subsize
[
MAX_MENU_ITEMS
];

76 
míuPos
;

77 
míuIãms
;

78 
chty≥
 
tôÀAâr
;

79 
chty≥
 
subtôÀAâr
;

80 
cuºítTôÀ
;

81 
cuºítSubtôÀ
;

82 
œ°TôÀ
;

83 
œ°SubtôÀ
;

84 
EExôTy≥
 
exôTy≥
;

85 
œ°Sñe˘i⁄
;

87 
SMíu
 
	tCDKMENU
;

92 
CDKMENU
 *
√wCDKMíu
 (

93 
CDKSCREEN
 * ,

94 * [
MAX_MENU_ITEMS
][
MAX_SUB_ITEMS
],

99 
chty≥
 ,

100 
chty≥
 );

105 
a˘iv©eCDKMíu
 (

106 
CDKMENU
 * ,

107 
chty≥
 * );

112 
	#öje˘CDKMíu
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
I¡
)

	)

117 
£tCDKMíu
 (

118 
CDKMENU
 * ,

121 
chty≥
 ,

122 
chty≥
 );

127 
£tCDKMíuCuºítIãm
 (

128 
CDKMENU
 * ,

132 
gëCDKMíuCuºítIãm
 (

133 
CDKMENU
 * ,

140 
£tCDKMíuTôÀHighlight
 (

141 
CDKMENU
 * ,

142 
chty≥
 );

144 
chty≥
 
gëCDKMíuTôÀHighlight
 (

145 
CDKMENU
 * );

150 
£tCDKMíuSubTôÀHighlight
 (

151 
CDKMENU
 * ,

152 
chty≥
 );

154 
chty≥
 
gëCDKMíuSubTôÀHighlight
 (

155 
CDKMENU
 * );

160 
	#døwCDKMíu
(
obj
,
box
Ë
	`døwCDKObje˘
(obj,box)

	)

162 
døwCDKMíuSubwö
 (

163 
CDKMENU
 * );

168 
	#îa£CDKMíu
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

170 
îa£CDKMíuSubwö
 (

171 
CDKMENU
 * );

176 
	#£tCDKMíuBackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

181 
	#£tCDKMíuBackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

186 
	#de°royCDKMíu
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

191 
	#£tCDKMíuPªPro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘PªPro˚ss
(
	`ObjOf
(w),f,d)

	)

192 
	#£tCDKMíuPo°Pro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘Po°Pro˚ss
(
	`ObjOf
(w),f,d)

	)

194 #ifde‡
__˝lu•lus


	@/usr/include/cdk/radio.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKRADIO_H


7 
	#CDKRADIO_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

60 
	sSRadio
 {

61 
CDKOBJS
 
obj
;

62 
WINDOW
 * 
∑ª¡
;

63 
WINDOW
 * 
wö
;

64 
WINDOW
 * 
s¸ﬁlb¨Wö
;

65 
WINDOW
 * 
shadowWö
;

66 
chty≥
 ** 
ôem
;

67 * 
ôemLí
;

68 * 
ôemPos
;

69 
tôÀAdj
;

70 
chty≥
 
choi˚Ch¨
;

71 
chty≥
 
À·BoxCh¨
;

72 
chty≥
 
rightBoxCh¨
;

73 
maxLe·Ch¨
;

74 
wide°Iãm
;

75 
À·Ch¨
;

76 
£À˘edIãm
;

77 
cuºítT›
;

78 
cuºítIãm
;

79 
cuºítHigh
;

80 
s¸ﬁlb¨Pœ˚mít
;

81 
boﬁón
 
s¸ﬁlb¨
;

83 
toggÀSize
;

84 
toggÀPos
;

85 
°ï
;

86 
li°Size
;

87 
œ°Iãm
;

88 
maxT›Iãm
;

89 
boxWidth
;

90 
boxHeight
;

91 
võwSize
;

93 
defIãm
;

94 
EExôTy≥
 
exôTy≥
;

95 
boﬁón
 
shadow
;

96 
chty≥
 
highlight
;

98 
SRadio
 
	tCDKRADIO
;

103 
CDKRADIO
 *
√wCDKRadio
 (

104 
CDKSCREEN
 * ,

113 
chty≥
 ,

115 
chty≥
 ,

116 
boﬁón
 ,

117 
boﬁón
 );

122 
a˘iv©eCDKRadio
 (

123 
CDKRADIO
 * ,

124 
chty≥
 * );

129 
	#öje˘CDKRadio
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
I¡
)

	)

134 
£tCDKRadio
 (

135 
CDKRADIO
 * ,

136 
chty≥
 ,

137 
chty≥
 ,

138 
boﬁón
 );

143 
£tCDKRadioIãms
 (

144 
CDKRADIO
 * ,

148 
gëCDKRadioIãms
 (

149 
CDKRADIO
 * ,

155 
£tCDKRadioHighlight
 (

156 
CDKRADIO
 * ,

157 
chty≥
 );

159 
chty≥
 
gëCDKRadioHighlight
 (

160 
CDKRADIO
 * );

165 
£tCDKRadioChoi˚Ch¨a˘î
 (

166 
CDKRADIO
 * ,

167 
chty≥
 );

169 
chty≥
 
gëCDKRadioChoi˚Ch¨a˘î
 (

170 
CDKRADIO
 * );

176 
£tCDKRadioLe·Bø˚
 (

177 
CDKRADIO
 * ,

178 
chty≥
 );

180 
chty≥
 
gëCDKRadioLe·Bø˚
 (

181 
CDKRADIO
 * );

183 
£tCDKRadioRightBø˚
 (

184 
CDKRADIO
 * ,

185 
chty≥
 );

187 
chty≥
 
gëCDKRadioRightBø˚
 (

188 
CDKRADIO
 * );

193 
£tCDKRadioBox
 (

194 
CDKRADIO
 * ,

195 
boﬁón
 );

197 
boﬁón
 
gëCDKRadioBox
 (

198 
CDKRADIO
 * );

203 
£tCDKRadioCuºítIãm
 (

204 
CDKRADIO
 * ,

207 
gëCDKRadioCuºítIãm
 (

208 
CDKRADIO
 * );

213 
£tCDKRadioSñe˘edIãm
 (

214 
CDKRADIO
 * ,

217 
gëCDKRadioSñe˘edIãm
 (

218 
CDKRADIO
 * );

224 
	#£tCDKRadioULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

225 
	#£tCDKRadioURCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

226 
	#£tCDKRadioLLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

227 
	#£tCDKRadioLRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

228 
	#£tCDKRadioVîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

229 
	#£tCDKRadioH‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

230 
	#£tCDKRadioBoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

235 
	#£tCDKRadioBackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

240 
	#£tCDKRadioBackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

245 
	#døwCDKRadio
(
obj
,
Box
Ë
	`døwCDKObje˘
(obj,Box)

	)

250 
	#îa£CDKRadio
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

255 
	#moveCDKRadio
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

260 
	#posôi⁄CDKRadio
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

265 
	#de°royCDKRadio
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

270 
	#£tCDKRadioPªPro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘PªPro˚ss
(
	`ObjOf
(w),f,d)

	)

271 
	#£tCDKRadioPo°Pro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘Po°Pro˚ss
(
	`ObjOf
(w),f,d)

	)

273 #ifde‡
__˝lu•lus


	@/usr/include/cdk/scale.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKSCALE_H


7 
	#CDKSCALE_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

58 
	sSSˇÀ
 {

59 
CDKOBJS
 
obj
;

60 
WINDOW
 * 
∑ª¡
;

61 
WINDOW
 * 
wö
;

62 
WINDOW
 * 
shadowWö
;

63 
WINDOW
 * 
fõldWö
;

64 
WINDOW
 * 
œbñWö
;

65 
tôÀAdj
;

66 
chty≥
 * 
œbñ
;

67 
œbñLí
;

68 
boxHeight
;

69 
boxWidth
;

70 
fõldWidth
;

71 
fõldEdô
;

72 
chty≥
 
fõldAâr
;

73 
low
;

74 
high
;

75 
öc
;

76 
Á°öc
;

77 
cuºít
;

78 
EExôTy≥
 
exôTy≥
;

79 
boﬁón
 
shadow
;

81 
SSˇÀ
 
	tCDKSCALE
;

86 
CDKSCALE
 *
√wCDKSˇÀ
 (

87 
CDKSCREEN
 * ,

92 
chty≥
 ,

99 
boﬁón
 ,

100 
boﬁón
 );

105 
a˘iv©eCDKSˇÀ
 (

106 
CDKSCALE
 * ,

107 
chty≥
 * );

112 
	#öje˘CDKSˇÀ
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
I¡
)

	)

117 
£tCDKSˇÀ
 (

118 
CDKSCALE
 * ,

122 
boﬁón
 );

127 
£tCDKSˇÀLowHigh
 (

128 
CDKSCALE
 * ,

132 
gëCDKSˇÀLowVÆue
 (

133 
CDKSCALE
 * );

135 
gëCDKSˇÀHighVÆue
 (

136 
CDKSCALE
 * );

145 
£tCDKSˇÀVÆue
 (

146 
CDKSCALE
 * ,

149 
gëCDKSˇÀVÆue
 (

150 
CDKSCALE
 * );

155 
£tCDKSˇÀBox
 (

156 
CDKSCALE
 * ,

157 
boﬁón
 );

159 
boﬁón
 
gëCDKSˇÀBox
 (

160 
CDKSCALE
 * );

165 
	#£tCDKSˇÀULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

166 
	#£tCDKSˇÀURCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

167 
	#£tCDKSˇÀLLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

168 
	#£tCDKSˇÀLRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

169 
	#£tCDKSˇÀVîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

170 
	#£tCDKSˇÀH‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

171 
	#£tCDKSˇÀBoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

176 
	#£tCDKSˇÀBackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

181 
	#£tCDKSˇÀBackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

186 
	#døwCDKSˇÀ
(
obj
,
Box
Ë
	`døwCDKObje˘
(obj,Box)

	)

191 
	#îa£CDKSˇÀ
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

196 
	#moveCDKSˇÀ
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

201 
	#posôi⁄CDKSˇÀ
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

206 
	#de°royCDKSˇÀ
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

211 
	#£tCDKSˇÀPªPro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘PªPro˚ss
(
	`ObjOf
(w),f,d)

	)

212 
	#£tCDKSˇÀPo°Pro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘Po°Pro˚ss
(
	`ObjOf
(w),f,d)

	)

214 #ifde‡
__˝lu•lus


	@/usr/include/cdk/scroll.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKSCROLL_H


7 
	#CDKSCROLL_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

60 
	#NUMBERS
 
TRUE


	)

61 
	#NONUMBERS
 
FALSE


	)

66 
	sSS¸ﬁl
 {

67 
CDKOBJS
 
obj
;

68 
WINDOW
 *
∑ª¡
;

69 
WINDOW
 *
wö
;

70 
WINDOW
 *
s¸ﬁlb¨Wö
;

71 
WINDOW
 *
li°Wö
;

72 
WINDOW
 *
shadowWö
;

73 
tôÀAdj
;

74 
chty≥
 ** 
ôem
;

75 * 
ôemPos
;

76 * 
ôemLí
;

77 
maxT›Iãm
;

78 
maxLe·Ch¨
;

79 
À·Ch¨
;

80 
œ°Iãm
;

81 
cuºítT›
;

82 
cuºítIãm
;

83 
cuºítHigh
;

84 
li°Size
;

85 
boxWidth
;

86 
boxHeight
;

87 
võwSize
;

89 
s¸ﬁlb¨Pœ˚mít
;

90 
boﬁón
 
s¸ﬁlb¨
;

91 
toggÀSize
;

92 
toggÀPos
;

93 
°ï
;

95 
EExôTy≥
 
exôTy≥
;

96 
boﬁón
 
shadow
;

97 
boﬁón
 
numbîs
;

98 
chty≥
 
tôÀhighlight
;

99 
chty≥
 
highlight
;

101 
SS¸ﬁl
 
	tCDKSCROLL
;

106 
CDKSCROLL
 *
√wCDKS¸ﬁl
 (

107 
CDKSCREEN
 * ,

116 
boﬁón
 ,

117 
chty≥
 ,

118 
boﬁón
 ,

119 
boﬁón
 );

124 
a˘iv©eCDKS¸ﬁl
 (

125 
CDKSCROLL
 * ,

126 
chty≥
 * );

131 
	#öje˘CDKS¸ﬁl
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
I¡
)

	)

136 
£tCDKS¸ﬁl
 (

137 
CDKSCROLL
 * ,

140 
boﬁón
 ,

141 
chty≥
 ,

142 
boﬁón
 );

144 
£tCDKS¸ﬁlPosôi⁄
 (

145 
CDKSCROLL
 * ,

148 
gëCDKS¸ﬁlCuºít
(

149 
CDKSCROLL
 * );

151 
£tCDKS¸ﬁlCuºít
(

152 
CDKSCROLL
 * ,

155 
gëCDKS¸ﬁlCuºítT›
(

156 
CDKSCROLL
 * );

158 
£tCDKS¸ﬁlCuºítT›
(

159 
CDKSCROLL
 * ,

162 
gëCDKS¸ﬁlCuºítIãm
(

163 
CDKSCROLL
 * );

165 
£tCDKS¸ﬁlCuºítIãm
(

166 
CDKSCROLL
 * ,

172 
£tCDKS¸ﬁlIãms
 (

173 
CDKSCROLL
 * ,

176 
boﬁón
 );

178 
gëCDKS¸ﬁlIãms
 (

179 
CDKSCROLL
 * ,

185 
£tCDKS¸ﬁlHighlight
 (

186 
CDKSCROLL
 * ,

187 
chty≥
 );

189 
chty≥
 
gëCDKS¸ﬁlHighlight
 (

190 
CDKSCROLL
 * ,

191 
chty≥
 );

196 
£tCDKS¸ﬁlBox
 (

197 
CDKSCROLL
 * ,

198 
boﬁón
 );

200 
boﬁón
 
gëCDKS¸ﬁlBox
 (

201 
CDKSCROLL
 * );

206 
	#£tCDKS¸ﬁlULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

207 
	#£tCDKS¸ﬁlURCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

208 
	#£tCDKS¸ﬁlLLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

209 
	#£tCDKS¸ﬁlLRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

210 
	#£tCDKS¸ﬁlVîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

211 
	#£tCDKS¸ﬁlH‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

212 
	#£tCDKS¸ﬁlBoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

217 
	#£tCDKS¸ﬁlBackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

222 
	#£tCDKS¸ﬁlBackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

227 
addCDKS¸ﬁlIãm
 (

228 
CDKSCROLL
 * ,

234 
ö£πCDKS¸ﬁlIãm
 (

235 
CDKSCROLL
 * ,

241 
dñëeCDKS¸ﬁlIãm
 (

242 
CDKSCROLL
 * ,

248 
	#døwCDKS¸ﬁl
(
obj
,
Box
Ë
	`døwCDKObje˘
(obj,Box)

	)

253 
	#îa£CDKS¸ﬁl
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

258 
	#moveCDKS¸ﬁl
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

263 
	#posôi⁄CDKS¸ﬁl
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

268 
	#de°royCDKS¸ﬁl
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

273 
	#£tCDKS¸ﬁlPªPro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘PªPro˚ss
(
	`ObjOf
(w),f,d)

	)

274 
	#£tCDKS¸ﬁlPo°Pro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘Po°Pro˚ss
(
	`ObjOf
(w),f,d)

	)

276 #ifde‡
__˝lu•lus


	@/usr/include/cdk/selection.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKSELECTION_H


7 
	#CDKSELECTION_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

60 
	#MAX_CHOICES
 100

	)

65 
	sSSñe˘i⁄
 {

66 
CDKOBJS
 
obj
;

67 
WINDOW
 * 
∑ª¡
;

68 
WINDOW
 * 
wö
;

69 
WINDOW
 * 
s¸ﬁlb¨Wö
;

70 
WINDOW
 * 
shadowWö
;

71 
tôÀAdj
;

72 
chty≥
 ** 
ôem
;

73 * 
ôemLí
;

74 * 
ôemPos
;

75 
chty≥
 ** 
choi˚
;

76 * 
choi˚Àn
;

77 
choi˚Cou¡
;

78 
maxchoi˚Àn
;

79 * 
£À˘i⁄s
;

80 * 
mode
;

81 
maxT›Iãm
;

82 
maxLe·Ch¨
;

83 
À·Ch¨
;

85 
œ°Iãm
;

86 
cuºítT›
;

87 
cuºítHigh
;

88 
cuºítIãm
;

89 
li°Size
;

90 
s¸ﬁlb¨Pœ˚mít
;

91 
boﬁón
 
s¸ﬁlb¨
;

92 
toggÀSize
;

93 
toggÀPos
;

94 
°ï
;

96 
boxWidth
;

97 
boxHeight
;

98 
võwSize
;

99 
EExôTy≥
 
exôTy≥
;

100 
boﬁón
 
shadow
;

101 
chty≥
 
highlight
;

103 
SSñe˘i⁄
 
	tCDKSELECTION
;

108 
CDKSELECTION
 *
√wCDKSñe˘i⁄
 (

109 
CDKSCREEN
 * ,

120 
chty≥
 ,

121 
boﬁón
 ,

122 
boﬁón
 );

127 
a˘iv©eCDKSñe˘i⁄
 (

128 
CDKSELECTION
 * ,

129 
chty≥
 * );

134 
	#öje˘CDKSñe˘i⁄
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
I¡
)

	)

139 
	#døwCDKSñe˘i⁄
(
obj
,
Box
Ë
	`døwCDKObje˘
(obj,Box)

	)

144 
	#îa£CDKSñe˘i⁄
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

149 
	#moveCDKSñe˘i⁄
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

154 
	#posôi⁄CDKSñe˘i⁄
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

159 
	#de°royCDKSñe˘i⁄
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

164 
£tCDKSñe˘i⁄
 (

165 
CDKSELECTION
 * ,

166 
chty≥
 ,

168 
boﬁón
 );

173 
£tCDKSñe˘i⁄Iãms
 (

174 
CDKSELECTION
 * ,

178 
gëCDKSñe˘i⁄Iãms
 (

179 
CDKSELECTION
 * ,

185 
£tCDKSñe˘i⁄TôÀ
 (

186 
CDKSELECTION
 * ,

189 *
gëCDKSñe˘i⁄TôÀ
 (

190 
CDKSELECTION
 * );

195 
£tCDKSñe˘i⁄Highlight
 (

196 
CDKSELECTION
 * ,

197 
chty≥
 );

199 
chty≥
 
gëCDKSñe˘i⁄Highlight
 (

200 
CDKSELECTION
 * );

205 
£tCDKSñe˘i⁄Cuºít
 (

206 
CDKSELECTION
 * ,

209 
gëCDKSñe˘i⁄Cuºít
 (

210 
CDKSELECTION
 * );

215 
£tCDKSñe˘i⁄Choi˚s
 (

216 
CDKSELECTION
 * ,

219 *
gëCDKSñe˘i⁄Choi˚s
 (

220 
CDKSELECTION
 * );

222 
£tCDKSñe˘i⁄Choi˚
 (

223 
CDKSELECTION
 * ,

227 
gëCDKSñe˘i⁄Choi˚
 (

228 
CDKSELECTION
 * ,

235 
£tCDKSñe˘i⁄Modes
 (

236 
CDKSELECTION
 * ,

239 *
gëCDKSñe˘i⁄Modes
 (

240 
CDKSELECTION
 * );

242 
£tCDKSñe˘i⁄Mode
 (

243 
CDKSELECTION
 * ,

247 
gëCDKSñe˘i⁄Mode
 (

248 
CDKSELECTION
 * ,

254 
£tCDKSñe˘i⁄Box
 (

255 
CDKSELECTION
 * ,

256 
boﬁón
 );

258 
boﬁón
 
gëCDKSñe˘i⁄Box
 (

259 
CDKSELECTION
 * );

264 
	#£tCDKSñe˘i⁄ULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

265 
	#£tCDKSñe˘i⁄URCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

266 
	#£tCDKSñe˘i⁄LLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

267 
	#£tCDKSñe˘i⁄LRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

268 
	#£tCDKSñe˘i⁄VîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

269 
	#£tCDKSñe˘i⁄H‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

270 
	#£tCDKSñe˘i⁄BoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

275 
	#£tCDKSñe˘i⁄BackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

280 
	#£tCDKSñe˘i⁄BackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

285 
	#£tCDKSñe˘i⁄PªPro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘PªPro˚ss
(
	`ObjOf
(w),f,d)

	)

286 
	#£tCDKSñe˘i⁄Po°Pro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘Po°Pro˚ss
(
	`ObjOf
(w),f,d)

	)

288 #ifde‡
__˝lu•lus


	@/usr/include/cdk/slider.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKSLIDER_H


7 
	#CDKSLIDER_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

58 
	sSSlidî
 {

59 
CDKOBJS
 
obj
;

60 
WINDOW
 * 
∑ª¡
;

61 
WINDOW
 * 
wö
;

62 
WINDOW
 * 
shadowWö
;

63 
WINDOW
 * 
fõldWö
;

64 
WINDOW
 * 
œbñWö
;

65 
tôÀAdj
;

66 
chty≥
 * 
œbñ
;

67 
œbñLí
;

68 
boxHeight
;

69 
boxWidth
;

70 
fõldWidth
;

71 
fõldEdô
;

72 
chty≥
 
fûÀr
;

73 
low
;

74 
high
;

75 
öc
;

76 
Á°öc
;

77 
cuºít
;

78 
EExôTy≥
 
exôTy≥
;

79 
boﬁón
 
shadow
;

81 
SSlidî
 
	tCDKSLIDER
;

86 
CDKSLIDER
 *
√wCDKSlidî
 (

87 
CDKSCREEN
 * ,

92 
chty≥
 ,

99 
boﬁón
 ,

100 
boﬁón
 );

105 
a˘iv©eCDKSlidî
 (

106 
CDKSLIDER
 * ,

107 
chty≥
 * );

112 
	#öje˘CDKSlidî
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
I¡
)

	)

117 
£tCDKSlidî
 (

118 
CDKSLIDER
 * ,

122 
boﬁón
 );

127 
£tCDKSlidîLowHigh
 (

128 
CDKSLIDER
 * ,

132 
gëCDKSlidîLowVÆue
 (

133 
CDKSLIDER
 * );

135 
gëCDKSlidîHighVÆue
 (

136 
CDKSLIDER
 * );

145 
£tCDKSlidîVÆue
 (

146 
CDKSLIDER
 * ,

149 
gëCDKSlidîVÆue
 (

150 
CDKSLIDER
 * );

155 
£tCDKSlidîBox
 (

156 
CDKSLIDER
 * ,

157 
boﬁón
 );

159 
boﬁón
 
gëCDKSlidîBox
 (

160 
CDKSLIDER
 * );

165 
	#£tCDKSlidîULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

166 
	#£tCDKSlidîURCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

167 
	#£tCDKSlidîLLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

168 
	#£tCDKSlidîLRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

169 
	#£tCDKSlidîVîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

170 
	#£tCDKSlidîH‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

171 
	#£tCDKSlidîBoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

176 
	#£tCDKSlidîBackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

181 
	#£tCDKSlidîBackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

186 
	#døwCDKSlidî
(
obj
,
Box
Ë
	`døwCDKObje˘
(obj,Box)

	)

191 
	#îa£CDKSlidî
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

196 
	#moveCDKSlidî
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

201 
	#posôi⁄CDKSlidî
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

206 
	#de°royCDKSlidî
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

211 
	#£tCDKSlidîPªPro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘PªPro˚ss
(
	`ObjOf
(w),f,d)

	)

212 
	#£tCDKSlidîPo°Pro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘Po°Pro˚ss
(
	`ObjOf
(w),f,d)

	)

214 #ifde‡
__˝lu•lus


	@/usr/include/cdk/swindow.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKSWINDOW_H


7 
	#CDKSWINDOW_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

60 
	sSSwödow
 {

61 
CDKOBJS
 
obj
;

62 
WINDOW
 * 
∑ª¡
;

63 
WINDOW
 * 
wö
;

64 
WINDOW
 * 
fõldWö
;

65 
WINDOW
 * 
shadowWö
;

66 
chty≥
 ** 
li°
;

67 * 
li°Pos
;

68 * 
li°Lí
;

69 
tôÀAdj
;

70 
li°Size
;

71 
boxHeight
;

72 
boxWidth
;

73 
võwSize
;

74 
maxT›Löe
;

75 
cuºítT›
;

76 
À·Ch¨
;

77 
maxLe·Ch¨
;

78 
wide°Löe
;

79 
ßveLöes
;

80 
EExôTy≥
 
exôTy≥
;

81 
boﬁón
 
shadow
;

83 
SSwödow
 
	tCDKSWINDOW
;

84 (*
SWINDOWCB
Ë(
	tCDKSWINDOW
 *
	tswödow
, 
	tchty≥
 
	töput
);

89 
CDKSWINDOW
 *
√wCDKSwödow
 (

90 
CDKSCREEN
 * ,

97 
boﬁón
 ,

98 
boﬁón
 );

103 
a˘iv©eCDKSwödow
 (

104 
CDKSWINDOW
 * ,

105 
chty≥
 * );

110 
	#öje˘CDKSwödow
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
I¡
)

	)

116 
execCDKSwödow
 (

117 
CDKSWINDOW
 * ,

124 
dumpCDKSwödow
 (

125 
CDKSWINDOW
 * ,

131 
jumpToLöeCDKSwödow
 (

132 
CDKSWINDOW
 * ,

139 
ßveCDKSwödowInf‹m©i⁄
 (

140 
CDKSWINDOW
 * );

146 
lﬂdCDKSwödowInf‹m©i⁄
 (

147 
CDKSWINDOW
 * );

152 
£tCDKSwödow
 (

153 
CDKSWINDOW
 * ,

156 
boﬁón
 );

161 
£tCDKSwödowC⁄ã¡s
 (

162 
CDKSWINDOW
 * ,

166 
chty≥
 **
gëCDKSwödowC⁄ã¡s
 (

167 
CDKSWINDOW
 * ,

173 
£tCDKSwödowBox
 (

174 
CDKSWINDOW
 * ,

175 
boﬁón
 );

177 
boﬁón
 
gëCDKSwödowBox
 (

178 
CDKSWINDOW
 * );

183 
	#£tCDKSwödowULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

184 
	#£tCDKSwödowURCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

185 
	#£tCDKSwödowLLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

186 
	#£tCDKSwödowLRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

187 
	#£tCDKSwödowVîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

188 
	#£tCDKSwödowH‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

189 
	#£tCDKSwödowBoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

194 
	#£tCDKSwödowBackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

199 
	#£tCDKSwödowBackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

204 
	#døwCDKSwödow
(
obj
,
Box
Ë
	`døwCDKObje˘
(obj,Box)

	)

209 
	#îa£CDKSwödow
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

214 
˛ónCDKSwödow
 (

215 
CDKSWINDOW
 * );

220 
addCDKSwödow
 (

221 
CDKSWINDOW
 * ,

228 
åimCDKSwödow
 (

229 
CDKSWINDOW
 * ,

236 
	#moveCDKSwödow
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

241 
	#posôi⁄CDKSwödow
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

246 
	#de°royCDKSwödow
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

251 
	#£tCDKSwödowPªPro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘PªPro˚ss
(
	`ObjOf
(w),f,d)

	)

252 
	#£tCDKSwödowPo°Pro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘Po°Pro˚ss
(
	`ObjOf
(w),f,d)

	)

254 #ifde‡
__˝lu•lus


	@/usr/include/cdk/template.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKTEMPLATE_H


7 
	#CDKTEMPLATE_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

60 
STem∂©e
 
	tCDKTEMPLATE
;

61 (*
TEMPLATECB
Ë(
	tCDKTEMPLATE
 *
	tcdkãm∂©e
, 
	tchty≥
 
	töput
);

63 
	sSTem∂©e
 {

64 
CDKOBJS
 
obj
;

65 
WINDOW
 * 
∑ª¡
;

66 
WINDOW
 * 
wö
;

67 
WINDOW
 * 
shadowWö
;

68 
WINDOW
 * 
œbñWö
;

69 
WINDOW
 * 
fõldWö
;

70 
tôÀAdj
;

71 
chty≥
 * 
œbñ
;

72 
chty≥
 * 
ovîœy
;

73 
chty≥
 
ovîœyAâr
;

74 * 
∂©e
;

75 * 
öfo
;

76 
œbñLí
;

77 
ovîœyLí
;

78 
œbñPos
;

79 
fõldWidth
;

80 
boxWidth
;

81 
boxHeight
;

82 
∂©ePos
;

83 
∂©eLí
;

84 
s¸ìnPos
;

85 
öfoPos
;

86 
mö
;

87 
chty≥
 
œbñAâr
;

88 
chty≥
 
fõldAâr
;

89 
EExôTy≥
 
exôTy≥
;

90 
boﬁón
 
shadow
;

91 
TEMPLATECB
 
ˇŒback‚
;

97 
CDKTEMPLATE
 *
√wCDKTem∂©e
 (

98 
CDKSCREEN
 * ,

105 
boﬁón
 ,

106 
boﬁón
 );

111 *
a˘iv©eCDKTem∂©e
 (

112 
CDKTEMPLATE
 * ,

113 
chty≥
 * );

118 
	#öje˘CDKTem∂©e
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
Såög
)

	)

123 
£tCDKTem∂©e
 (

124 
CDKTEMPLATE
 * ,

126 
boﬁón
 );

131 
£tCDKTem∂©eVÆue
 (

132 
CDKTEMPLATE
 * ,

135 *
gëCDKTem∂©eVÆue
 (

136 
CDKTEMPLATE
 * );

141 
£tCDKTem∂©eMö
 (

142 
CDKTEMPLATE
 * ,

145 
gëCDKTem∂©eMö
 (

146 
CDKTEMPLATE
 * );

151 
£tCDKTem∂©eBox
 (

152 
CDKTEMPLATE
 * ,

153 
boﬁón
 );

155 
boﬁón
 
gëCDKTem∂©eBox
 (

156 
CDKTEMPLATE
 * );

161 
	#£tCDKTem∂©eULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

162 
	#£tCDKTem∂©eURCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

163 
	#£tCDKTem∂©eLLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

164 
	#£tCDKTem∂©eLRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

165 
	#£tCDKTem∂©eVîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

166 
	#£tCDKTem∂©eH‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

167 
	#£tCDKTem∂©eBoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

172 
	#£tCDKTem∂©eBackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

177 
	#£tCDKTem∂©eBackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

182 
	#døwCDKTem∂©e
(
obj
,
Box
Ë
	`døwCDKObje˘
(obj,Box)

	)

187 
	#îa£CDKTem∂©e
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

192 
˛ónCDKTem∂©e
 (

193 
CDKTEMPLATE
 * );

198 
	#moveCDKTem∂©e
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

203 
	#posôi⁄CDKTem∂©e
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

208 
	#de°royCDKTem∂©e
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

213 
£tCDKTem∂©eCB
 (

214 
CDKTEMPLATE
 * ,

215 
TEMPLATECB
 );

221 *
mixCDKTem∂©e
 (

222 
CDKTEMPLATE
 * );

228 *
unmixCDKTem∂©e
 (

229 
CDKTEMPLATE
 * ,

235 
	#£tCDKTem∂©ePªPro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘PªPro˚ss
(
	`ObjOf
(w),f,d)

	)

236 
	#£tCDKTem∂©ePo°Pro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘Po°Pro˚ss
(
	`ObjOf
(w),f,d)

	)

238 #ifde‡
__˝lu•lus


	@/usr/include/cdk/traverse.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKTRAVERSE_H


7 
	#CDKTRAVERSE_H
 1

	)

9 
	~"cdk.h
"

11 #i‚de‡
CDK_H


12 
	#CDKINCLUDES


	)

13 
	~<cdk/cdk.h
>

14 #unde‡
CDKINCLUDES


15 
	~<cdk/bödög.h
>

16 
	~<cdk/cdks¸ìn.h
>

17 
	~<cdk/cdk_objs.h
>

53 
	$boﬁón
 (*
	tCHECK_KEYCODE
)(, );

55 
CDKOBJS
 *
	`gëCDKFocusCuºít
 (
CDKSCREEN
 * );

56 
CDKOBJS
 *
	`£tCDKFocusCuºít
 (
CDKSCREEN
 * , CDKOBJS * );

57 
CDKOBJS
 *
	`£tCDKFocusNext
 (
CDKSCREEN
 * );

58 
CDKOBJS
 *
	`£tCDKFocusPªvious
 (
CDKSCREEN
 * );

59 
CDKOBJS
 *
	`£tCDKFocusFú°
 (
CDKSCREEN
 * );

60 
CDKOBJS
 *
	`£tCDKFocusLa°
 (
CDKSCREEN
 * );

62 
	`åavî£CDKS¸ìn
 (
CDKSCREEN
 * );

64 
	`exôC™˚lCDKS¸ìn
 (
CDKSCREEN
 * );

65 
	`exôC™˚lCDKS¸ìnOf
 (
CDKOBJS
 * );

66 
	`exôOKCDKS¸ìn
 (
CDKSCREEN
 * );

67 
	`exôOKCDKS¸ìnOf
 (
CDKOBJS
 * );

68 
	`ª£tCDKS¸ìn
 (
CDKSCREEN
 * );

69 
	`ª£tCDKS¸ìnOf
 (
CDKOBJS
 * );

70 
	`åavî£CDKOn˚
 (
CDKSCREEN
 * , 
CDKOBJS
 * , , 
boﬁón
 , 
CHECK_KEYCODE
 );

	@/usr/include/cdk/uscale.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKUSCALE_H


7 
	#CDKUSCALE_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

58 
	sSUSˇÀ
 {

59 
CDKOBJS
 
obj
;

60 
WINDOW
 * 
∑ª¡
;

61 
WINDOW
 * 
wö
;

62 
WINDOW
 * 
shadowWö
;

63 
WINDOW
 * 
fõldWö
;

64 
WINDOW
 * 
œbñWö
;

65 
tôÀAdj
;

66 
chty≥
 * 
œbñ
;

67 
œbñLí
;

68 
boxHeight
;

69 
boxWidth
;

70 
fõldWidth
;

71 
fõldEdô
;

72 
chty≥
 
fõldAâr
;

73 
low
;

74 
high
;

75 
öc
;

76 
Á°öc
;

77 
cuºít
;

78 
EExôTy≥
 
exôTy≥
;

79 
boﬁón
 
shadow
;

81 
SUSˇÀ
 
	tCDKUSCALE
;

86 
CDKUSCALE
 *
√wCDKUSˇÀ
 (

87 
CDKSCREEN
 * ,

92 
chty≥
 ,

99 
boﬁón
 ,

100 
boﬁón
 );

105 
a˘iv©eCDKUSˇÀ
 (

106 
CDKUSCALE
 * ,

107 
chty≥
 * );

112 
	#öje˘CDKUSˇÀ
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
Unsig√d
)

	)

117 
£tCDKUSˇÀ
 (

118 
CDKUSCALE
 * ,

122 
boﬁón
 );

127 
£tCDKUSˇÀLowHigh
 (

128 
CDKUSCALE
 * ,

132 
gëCDKUSˇÀLowVÆue
 (

133 
CDKUSCALE
 * );

135 
gëCDKUSˇÀHighVÆue
 (

136 
CDKUSCALE
 * );

145 
£tCDKUSˇÀVÆue
 (

146 
CDKUSCALE
 * ,

149 
gëCDKUSˇÀVÆue
 (

150 
CDKUSCALE
 * );

155 
£tCDKUSˇÀBox
 (

156 
CDKUSCALE
 * ,

157 
boﬁón
 );

159 
boﬁón
 
gëCDKUSˇÀBox
 (

160 
CDKUSCALE
 * );

165 
	#£tCDKUSˇÀULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

166 
	#£tCDKUSˇÀURCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

167 
	#£tCDKUSˇÀLLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

168 
	#£tCDKUSˇÀLRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

169 
	#£tCDKUSˇÀVîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

170 
	#£tCDKUSˇÀH‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

171 
	#£tCDKUSˇÀBoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

176 
	#£tCDKUSˇÀBackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

181 
	#£tCDKUSˇÀBackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

186 
	#døwCDKUSˇÀ
(
obj
,
Box
Ë
	`døwCDKObje˘
(obj,Box)

	)

191 
	#îa£CDKUSˇÀ
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

196 
	#moveCDKUSˇÀ
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

201 
	#posôi⁄CDKUSˇÀ
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

206 
	#de°royCDKUSˇÀ
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

211 
	#£tCDKUSˇÀPªPro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘PªPro˚ss
(
	`ObjOf
(w),f,d)

	)

212 
	#£tCDKUSˇÀPo°Pro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘Po°Pro˚ss
(
	`ObjOf
(w),f,d)

	)

214 #ifde‡
__˝lu•lus


	@/usr/include/cdk/uslider.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKUSLIDER_H


7 
	#CDKUSLIDER_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

58 
	sSUSlidî
 {

59 
CDKOBJS
 
obj
;

60 
WINDOW
 * 
∑ª¡
;

61 
WINDOW
 * 
wö
;

62 
WINDOW
 * 
shadowWö
;

63 
WINDOW
 * 
fõldWö
;

64 
WINDOW
 * 
œbñWö
;

65 
tôÀAdj
;

66 
chty≥
 * 
œbñ
;

67 
œbñLí
;

68 
boxHeight
;

69 
boxWidth
;

70 
fõldWidth
;

71 
fõldEdô
;

72 
chty≥
 
fûÀr
;

73 
low
;

74 
high
;

75 
öc
;

76 
Á°öc
;

77 
cuºít
;

78 
EExôTy≥
 
exôTy≥
;

79 
boﬁón
 
shadow
;

81 
SUSlidî
 
	tCDKUSLIDER
;

86 
CDKUSLIDER
 *
√wCDKUSlidî
 (

87 
CDKSCREEN
 * ,

92 
chty≥
 ,

99 
boﬁón
 ,

100 
boﬁón
 );

105 
a˘iv©eCDKUSlidî
 (

106 
CDKUSLIDER
 * ,

107 
chty≥
 * );

112 
	#öje˘CDKUSlidî
(
obj
,
öput
Ë
	`öje˘CDKObje˘
(obj,öput,
Unsig√d
)

	)

117 
£tCDKUSlidî
 (

118 
CDKUSLIDER
 * ,

122 
boﬁón
 );

127 
£tCDKUSlidîLowHigh
 (

128 
CDKUSLIDER
 * ,

132 
gëCDKUSlidîLowVÆue
 (

133 
CDKUSLIDER
 * );

135 
gëCDKUSlidîHighVÆue
 (

136 
CDKUSLIDER
 * );

145 
£tCDKUSlidîVÆue
 (

146 
CDKUSLIDER
 * ,

149 
gëCDKUSlidîVÆue
 (

150 
CDKUSLIDER
 * );

155 
£tCDKUSlidîBox
 (

156 
CDKUSLIDER
 * ,

157 
boﬁón
 );

159 
boﬁón
 
gëCDKUSlidîBox
 (

160 
CDKUSLIDER
 * );

165 
	#£tCDKUSlidîULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

166 
	#£tCDKUSlidîURCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

167 
	#£tCDKUSlidîLLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

168 
	#£tCDKUSlidîLRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

169 
	#£tCDKUSlidîVîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

170 
	#£tCDKUSlidîH‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

171 
	#£tCDKUSlidîBoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

176 
	#£tCDKUSlidîBackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

181 
	#£tCDKUSlidîBackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

186 
	#døwCDKUSlidî
(
obj
,
Box
Ë
	`døwCDKObje˘
(obj,Box)

	)

191 
	#îa£CDKUSlidî
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

196 
	#moveCDKUSlidî
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

201 
	#posôi⁄CDKUSlidî
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

206 
	#de°royCDKUSlidî
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

211 
	#£tCDKUSlidîPªPro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘PªPro˚ss
(
	`ObjOf
(w),f,d)

	)

212 
	#£tCDKUSlidîPo°Pro˚ss
(
w
,
f
,
d
Ë
	`£tCDKObje˘Po°Pro˚ss
(
	`ObjOf
(w),f,d)

	)

214 #ifde‡
__˝lu•lus


	@/usr/include/cdk/viewer.h

5 #i‚de‡
CDKINCLUDES


6 #i‚de‡
CDKVIEWER_H


7 
	#CDKVIEWER_H
 1

	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
CDK_H


14 
	#CDKINCLUDES


	)

15 
	~<cdk/cdk.h
>

16 #unde‡
CDKINCLUDES


17 
	~<cdk/bödög.h
>

18 
	~<cdk/cdks¸ìn.h
>

19 
	~<cdk/cdk_objs.h
>

60 
	sSVõwî
 {

61 
CDKOBJS
 
obj
;

62 
WINDOW
 * 
∑ª¡
;

63 
WINDOW
 * 
wö
;

64 
WINDOW
 * 
shadowWö
;

65 
chty≥
 ** 
buâ⁄
;

66 * 
buâ⁄Lí
;

67 * 
buâ⁄Pos
;

68 
buâ⁄Cou¡
;

69 
chty≥
 
buâ⁄Highlight
;

70 
chty≥
 ** 
li°
;

71 * 
li°Lí
;

72 * 
li°Pos
;

73 
tôÀAdj
;

74 
li°Size
;

75 
boxHeight
;

76 
boxWidth
;

77 
võwSize
;

78 
cuºítT›
;

79 
cuºítBuâ⁄
;

80 
À·Ch¨
;

81 
Àngth
;

82 
maxLe·Ch¨
;

83 
maxT›Löe
;

84 
wide°Löe
;

85 
ch¨a˘îs
;

86 
boﬁón
 
öProgªss
;

87 
boﬁón
 
showLöeInfo
;

88 
boﬁón
 
öãΩªt
;

89 
EExôTy≥
 
exôTy≥
;

90 
boﬁón
 
shadow
;

92 
SVõwî
 
	tCDKVIEWER
;

97 
CDKVIEWER
 *
√wCDKVõwî
 (

98 
CDKSCREEN
 * ,

105 
chty≥
 ,

106 
boﬁón
 ,

107 
boﬁón
 );

112 
a˘iv©eCDKVõwî
 (

113 
CDKVIEWER
 * ,

114 
chty≥
 * );

119 
£tCDKVõwî
 (

120 
CDKVIEWER
 * ,

124 
chty≥
 ,

125 
boﬁón
 ,

126 
boﬁón
 ,

127 
boﬁón
 );

132 
£tCDKVõwîInfo
 (

133 
CDKVIEWER
 * ,

136 
boﬁón
 );

138 
chty≥
 **
gëCDKVõwîInfo
 (

139 
CDKVIEWER
 * ,

145 
£tCDKVõwîTôÀ
 (

146 
CDKVIEWER
 * ,

149 
chty≥
 **
gëCDKVõwîTôÀ
 (

150 
CDKVIEWER
 * );

155 
£tCDKVõwîHighlight
 (

156 
CDKVIEWER
 * ,

157 
chty≥
 );

159 
chty≥
 
gëCDKVõwîHighlight
 (

160 
CDKVIEWER
 * );

166 
£tCDKVõwîInfoLöe
 (

167 
CDKVIEWER
 * ,

168 
boﬁón
 );

170 
boﬁón
 
gëCDKVõwîInfoLöe
 (

171 
CDKVIEWER
 * );

176 
£tCDKVõwîBox
 (

177 
CDKVIEWER
 * ,

178 
boﬁón
 );

180 
boﬁón
 
gëCDKVõwîBox
 (

181 
CDKVIEWER
 * );

186 
	#£tCDKVõwîULCh¨
(
w
,
c
Ë
	`£tULCh¨Of
(w,c)

	)

187 
	#£tCDKVõwîURCh¨
(
w
,
c
Ë
	`£tURCh¨Of
(w,c)

	)

188 
	#£tCDKVõwîLLCh¨
(
w
,
c
Ë
	`£tLLCh¨Of
(w,c)

	)

189 
	#£tCDKVõwîLRCh¨
(
w
,
c
Ë
	`£tLRCh¨Of
(w,c)

	)

190 
	#£tCDKVõwîVîtiˇlCh¨
(
w
,
c
Ë
	`£tVTCh¨Of
(w,c)

	)

191 
	#£tCDKVõwîH‹iz⁄èlCh¨
(
w
,
c
Ë
	`£tHZCh¨Of
(w,c)

	)

192 
	#£tCDKVõwîBoxAâribuã
(
w
,
c
Ë
	`£tBXAârOf
(w,c)

	)

197 
	#£tCDKVõwîBackgroundCﬁ‹
(
w
,
c
Ë
	`£tCDKObje˘BackgroundCﬁ‹
(
	`ObjOf
(w),c)

	)

202 
	#£tCDKVõwîBackgroundAârib
(
w
,
c
Ë
	`£tBKAârOf
(w,c)

	)

207 
	#døwCDKVõwî
(
obj
,
box
Ë
	`døwCDKObje˘
(obj,box)

	)

212 
	#îa£CDKVõwî
(
obj
Ë
	`îa£CDKObje˘
(obj)

	)

217 
˛ónCDKVõwî
 (

218 
CDKVIEWER
 * );

223 
	#moveCDKVõwî
(
obj
,
xpos
,
ypos
,
ªœtive
,
ª‰esh
Ë
	`moveCDKObje˘
(obj,xpos,ypos,ªœtive,ª‰esh)

	)

228 
	#posôi⁄CDKVõwî
(
widgë
Ë
	`posôi⁄CDKObje˘
(
	`ObjOf
(widgë),widgë->
wö
)

	)

233 
	#de°royCDKVõwî
(
obj
Ë
	`de°royCDKObje˘
(obj)

	)

235 #ifde‡
__˝lu•lus


	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/dirent.h

23 #i‚def 
_DIRENT_H


24 
	#_DIRENT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifde‡
__USE_XOPEN


33 #i‚de‡
__öo_t_deföed


34 #i‚de‡
__USE_FILE_OFFSET64


35 
__öo_t
 
	töo_t
;

37 
__öo64_t
 
	töo_t
;

39 
	#__öo_t_deföed


	)

41 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


42 
__öo64_t
 
	töo64_t
;

43 
	#__öo64_t_deföed


	)

62 
	~<bôs/dúít.h
>

64 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


65 
	#d_öo
 
d_fûío


	)

82 #ifde‡
_DIRENT_HAVE_D_NAMLEN


83 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

84 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

86 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

87 #ifde‡
_DIRENT_HAVE_D_RECLEN


88 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

90 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

91 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

96 #ifde‡
__USE_BSD


100 
	mDT_UNKNOWN
 = 0,

101 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

102 
	mDT_FIFO
 = 1,

103 
	#DT_FIFO
 
DT_FIFO


	)

104 
	mDT_CHR
 = 2,

105 
	#DT_CHR
 
DT_CHR


	)

106 
	mDT_DIR
 = 4,

107 
	#DT_DIR
 
DT_DIR


	)

108 
	mDT_BLK
 = 6,

109 
	#DT_BLK
 
DT_BLK


	)

110 
	mDT_REG
 = 8,

111 
	#DT_REG
 
DT_REG


	)

112 
	mDT_LNK
 = 10,

113 
	#DT_LNK
 
DT_LNK


	)

114 
	mDT_SOCK
 = 12,

115 
	#DT_SOCK
 
DT_SOCK


	)

116 
	mDT_WHT
 = 14

117 
	#DT_WHT
 
DT_WHT


	)

121 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

122 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

128 
__dú°ªam
 
	tDIR
;

135 
DIR
 *
	$›ídú
 (
__c⁄°
 *
__«me
Ë
	`__n⁄nuŒ
 ((1));

137 #ifde‡
__USE_XOPEN2K8


142 
DIR
 *
	`fd›ídú
 (
__fd
);

150 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

162 #i‚de‡
__USE_FILE_OFFSET64


163 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

165 #ifde‡
__REDIRECT


166 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

167 
	`__n⁄nuŒ
 ((1));

169 
	#ªaddú
 
ªaddú64


	)

173 #ifde‡
__USE_LARGEFILE64


174 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

177 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


183 #i‚de‡
__USE_FILE_OFFSET64


184 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

185 
dúít
 *
__ª°ri˘
 
__íåy
,

186 
dúít
 **
__ª°ri˘
 
__ªsu…
)

187 
	`__n⁄nuŒ
 ((1, 2, 3));

189 #ifde‡
__REDIRECT


190 
	`__REDIRECT
 (
ªaddú_r
,

191 (
DIR
 *
__ª°ri˘
 
__dúp
,

192 
dúít
 *
__ª°ri˘
 
__íåy
,

193 
dúít
 **
__ª°ri˘
 
__ªsu…
),

194 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

196 
	#ªaddú_r
 
ªaddú64_r


	)

200 #ifde‡
__USE_LARGEFILE64


201 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

202 
dúít64
 *
__ª°ri˘
 
__íåy
,

203 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

204 
	`__n⁄nuŒ
 ((1, 2, 3));

209 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


212 
	~<bôs/ty≥s.h
>

215 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


224 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


227 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

230 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


231 #i‚de‡
MAXNAMLEN


233 
	~<bôs/posix1_lim.h
>

236 #ifde‡
NAME_MAX


237 
	#MAXNAMLEN
 
NAME_MAX


	)

239 
	#MAXNAMLEN
 255

	)

244 
	#__√ed_size_t


	)

245 
	~<°ddef.h
>

251 #i‚de‡
__USE_FILE_OFFSET64


252 
	`sˇndú
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

253 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

254 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

255 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

256 
__c⁄°
 
dúít
 **))

257 
	`__n⁄nuŒ
 ((1, 2));

259 #ifde‡
__REDIRECT


260 
	`__REDIRECT
 (
sˇndú
,

261 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

262 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

263 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

264 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

265 
__c⁄°
 
dúít
 **)),

266 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

268 
	#sˇndú
 
sˇndú64


	)

272 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


275 
	`sˇndú64
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

276 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

277 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

278 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

279 
__c⁄°
 
dúít64
 **))

280 
	`__n⁄nuŒ
 ((1, 2));

284 #i‚de‡
__USE_FILE_OFFSET64


285 
	$Æphas‹t
 (
__c⁄°
 
dúít
 **
__e1
,

286 
__c⁄°
 
dúít
 **
__e2
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 #ifde‡
__REDIRECT


290 
	`__REDIRECT_NTH
 (
Æphas‹t
,

291 (
__c⁄°
 
dúít
 **
__e1
,

292 
__c⁄°
 
dúít
 **
__e2
),

293 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 
	#Æphas‹t
 
Æphas‹t64


	)

299 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


300 
	$Æphas‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

301 
__c⁄°
 
dúít64
 **
__e2
)

302 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

307 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


312 #i‚de‡
__USE_FILE_OFFSET64


313 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

314 
size_t
 
__nbyãs
,

315 
__off_t
 *
__ª°ri˘
 
__ba£p
)

316 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

318 #ifde‡
__REDIRECT


319 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

320 (
__fd
, *
__ª°ri˘
 
__buf
,

321 
size_t
 
__nbyãs
,

322 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

323 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

325 
	#gëdúíåõs
 
gëdúíåõs64


	)

329 #ifde‡
__USE_LARGEFILE64


330 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

331 
size_t
 
__nbyãs
,

332 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

333 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

337 #ifde‡
__USE_GNU


339 #i‚de‡
__USE_FILE_OFFSET64


340 
	$vîsi⁄s‹t
 (
__c⁄°
 
dúít
 **
__e1
,

341 
__c⁄°
 
dúít
 **
__e2
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

344 #ifde‡
__REDIRECT


345 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

346 (
__c⁄°
 
dúít
 **
__e1
,

347 
__c⁄°
 
dúít
 **
__e2
),

348 
vîsi⁄s‹t64
)

349 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

351 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

355 #ifde‡
__USE_LARGEFILE64


356 
	$vîsi⁄s‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

357 
__c⁄°
 
dúít64
 **
__e2
)

358 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

362 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/eti.h

35 #i‚de‡
NCURSES_ETI_H_ö˛


36 
	#NCURSES_ETI_H_ö˛
 1

	)

38 
	#E_OK
 (0)

	)

39 
	#E_SYSTEM_ERROR
 (-1)

	)

40 
	#E_BAD_ARGUMENT
 (-2)

	)

41 
	#E_POSTED
 (-3)

	)

42 
	#E_CONNECTED
 (-4)

	)

43 
	#E_BAD_STATE
 (-5)

	)

44 
	#E_NO_ROOM
 (-6)

	)

45 
	#E_NOT_POSTED
 (-7)

	)

46 
	#E_UNKNOWN_COMMAND
 (-8)

	)

47 
	#E_NO_MATCH
 (-9)

	)

48 
	#E_NOT_SELECTABLE
 (-10)

	)

49 
	#E_NOT_CONNECTED
 (-11)

	)

50 
	#E_REQUEST_DENIED
 (-12)

	)

51 
	#E_INVALID_FIELD
 (-13)

	)

52 
	#E_CURRENT
 (-14)

	)

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC99


98 #unde‡
__USE_ISOC95


99 #unde‡
__USE_POSIX


100 #unde‡
__USE_POSIX2


101 #unde‡
__USE_POSIX199309


102 #unde‡
__USE_POSIX199506


103 #unde‡
__USE_XOPEN


104 #unde‡
__USE_XOPEN_EXTENDED


105 #unde‡
__USE_UNIX98


106 #unde‡
__USE_XOPEN2K


107 #unde‡
__USE_XOPEN2KXSI


108 #unde‡
__USE_XOPEN2K8


109 #unde‡
__USE_XOPEN2K8XSI


110 #unde‡
__USE_LARGEFILE


111 #unde‡
__USE_LARGEFILE64


112 #unde‡
__USE_FILE_OFFSET64


113 #unde‡
__USE_BSD


114 #unde‡
__USE_SVID


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__FAVOR_BSD


121 #unde‡
__KERNEL_STRICT_NAMES


125 #i‚de‡
_LOOSE_KERNEL_NAMES


126 
	#__KERNEL_STRICT_NAMES


	)

130 
	#__USE_ANSI
 1

	)

139 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


140 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

141 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

143 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

148 #i‡
deföed
 
_BSD_SOURCE
 && \

149 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

150 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

151 
	#__FAVOR_BSD
 1

	)

155 #ifde‡
_GNU_SOURCE


156 #unde‡
_ISOC95_SOURCE


157 
	#_ISOC95_SOURCE
 1

	)

158 #unde‡
_ISOC99_SOURCE


159 
	#_ISOC99_SOURCE
 1

	)

160 #unde‡
_POSIX_SOURCE


161 
	#_POSIX_SOURCE
 1

	)

162 #unde‡
_POSIX_C_SOURCE


163 
	#_POSIX_C_SOURCE
 200809L

	)

164 #unde‡
_XOPEN_SOURCE


165 
	#_XOPEN_SOURCE
 700

	)

166 #unde‡
_XOPEN_SOURCE_EXTENDED


167 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

168 #unde‡
_LARGEFILE64_SOURCE


169 
	#_LARGEFILE64_SOURCE
 1

	)

170 #unde‡
_BSD_SOURCE


171 
	#_BSD_SOURCE
 1

	)

172 #unde‡
_SVID_SOURCE


173 
	#_SVID_SOURCE
 1

	)

174 #unde‡
_ATFILE_SOURCE


175 
	#_ATFILE_SOURCE
 1

	)

180 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

181 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

182 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

183 
	#_BSD_SOURCE
 1

	)

184 
	#_SVID_SOURCE
 1

	)

191 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

192 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

193 
	#__USE_ISOC99
 1

	)

197 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

198 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

199 
	#__USE_ISOC95
 1

	)

204 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

205 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

206 
	#_POSIX_SOURCE
 1

	)

207 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

208 
	#_POSIX_C_SOURCE
 2

	)

209 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

210 
	#_POSIX_C_SOURCE
 199506L

	)

211 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

212 
	#_POSIX_C_SOURCE
 200112L

	)

214 
	#_POSIX_C_SOURCE
 200809L

	)

216 
	#__USE_POSIX_IMPLICITLY
 1

	)

219 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


220 
	#__USE_POSIX
 1

	)

223 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


224 
	#__USE_POSIX2
 1

	)

227 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

228 
	#__USE_POSIX199309
 1

	)

231 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

232 
	#__USE_POSIX199506
 1

	)

235 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

236 
	#__USE_XOPEN2K
 1

	)

237 #unde‡
__USE_ISOC95


238 
	#__USE_ISOC95
 1

	)

239 #unde‡
__USE_ISOC99


240 
	#__USE_ISOC99
 1

	)

243 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

244 
	#__USE_XOPEN2K8
 1

	)

245 #unde‡
_ATFILE_SOURCE


246 
	#_ATFILE_SOURCE
 1

	)

249 #ifdef 
_XOPEN_SOURCE


250 
	#__USE_XOPEN
 1

	)

251 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

252 
	#__USE_XOPEN_EXTENDED
 1

	)

253 
	#__USE_UNIX98
 1

	)

254 #unde‡
_LARGEFILE_SOURCE


255 
	#_LARGEFILE_SOURCE
 1

	)

256 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

258 
	#__USE_XOPEN2K8
 1

	)

259 
	#__USE_XOPEN2K8XSI
 1

	)

261 
	#__USE_XOPEN2K
 1

	)

262 
	#__USE_XOPEN2KXSI
 1

	)

263 #unde‡
__USE_ISOC95


264 
	#__USE_ISOC95
 1

	)

265 #unde‡
__USE_ISOC99


266 
	#__USE_ISOC99
 1

	)

269 #ifde‡
_XOPEN_SOURCE_EXTENDED


270 
	#__USE_XOPEN_EXTENDED
 1

	)

275 #ifde‡
_LARGEFILE_SOURCE


276 
	#__USE_LARGEFILE
 1

	)

279 #ifde‡
_LARGEFILE64_SOURCE


280 
	#__USE_LARGEFILE64
 1

	)

283 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

284 
	#__USE_FILE_OFFSET64
 1

	)

287 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


288 
	#__USE_MISC
 1

	)

291 #ifdef 
_BSD_SOURCE


292 
	#__USE_BSD
 1

	)

295 #ifdef 
_SVID_SOURCE


296 
	#__USE_SVID
 1

	)

299 #ifdef 
_ATFILE_SOURCE


300 
	#__USE_ATFILE
 1

	)

303 #ifdef 
_GNU_SOURCE


304 
	#__USE_GNU
 1

	)

307 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


308 
	#__USE_REENTRANT
 1

	)

311 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

312 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

313 #i‡
_FORTIFY_SOURCE
 > 1

314 
	#__USE_FORTIFY_LEVEL
 2

	)

316 
	#__USE_FORTIFY_LEVEL
 1

	)

319 
	#__USE_FORTIFY_LEVEL
 0

	)

323 
	~<bôs/¥edefs.h
>

326 
	#__STDC_ISO_10646__
 200009L

	)

334 #unde‡
__GNU_LIBRARY__


335 
	#__GNU_LIBRARY__
 6

	)

339 
	#__GLIBC__
 2

	)

340 
	#__GLIBC_MINOR__
 13

	)

342 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

343 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

346 #i‡
deföed
 
__GNUC__
 \

347 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

348 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

349 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

350 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

354 #i‚de‡
__ASSEMBLER__


355 #i‚de‡
_SYS_CDEFS_H


356 
	~<sys/cdefs.h
>

361 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


362 
	#__USE_LARGEFILE
 1

	)

363 
	#__USE_LARGEFILE64
 1

	)

369 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

370 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

371 && 
deföed
 
	g__exã∫_ölöe


372 
	#__USE_EXTERN_INLINES
 1

	)

377 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

378 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

379 && 
deföed
 
	g__exã∫_ölöe


380 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

388 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/grp.h

24 #i‚def 
_GRP_H


25 
	#_GRP_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 
	#__√ed_size_t


	)

34 
	~<°ddef.h
>

38 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
Ë&& !deföed 
__gid_t_deföed


39 
__gid_t
 
	tgid_t
;

40 
	#__gid_t_deföed


	)

44 
	sgroup


46 *
	mgr_«me
;

47 *
	mgr_∑sswd
;

48 
__gid_t
 
	mgr_gid
;

49 **
	mgr_mem
;

53 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


54 
	#__√ed_FILE


	)

55 
	~<°dio.h
>

59 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


64 
£tgª¡
 ();

67 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

68 || 
deföed
 
__USE_XOPEN2K8


73 
ídgª¡
 ();

79 
group
 *
gëgª¡
 ();

82 #ifdef 
__USE_SVID


89 
group
 *
fgëgª¡
 (
FILE
 *
__°ªam
);

92 #ifde‡
__USE_GNU


99 
putgª¡
 (
__c⁄°
 
group
 *
__ª°ri˘
 
__p
,

100 
FILE
 *
__ª°ri˘
 
__f
);

107 
group
 *
gëgrgid
 (
__gid_t
 
__gid
);

113 
group
 *
gëg∫am
 (
__c⁄°
 *
__«me
);

115 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


117 #ifde‡
__USE_MISC


120 
	#NSS_BUFLEN_GROUP
 1024

	)

136 #ifde‡
__USE_GNU


137 
gëgª¡_r
 (
group
 *
__ª°ri˘
 
__ªsu…buf
,

138 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

139 
group
 **
__ª°ri˘
 
__ªsu…
);

146 
gëgrgid_r
 (
__gid_t
 
__gid
, 
group
 *
__ª°ri˘
 
__ªsu…buf
,

147 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

148 
group
 **
__ª°ri˘
 
__ªsu…
);

154 
gëg∫am_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

155 
group
 *
__ª°ri˘
 
__ªsu…buf
,

156 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

157 
group
 **
__ª°ri˘
 
__ªsu…
);

159 #ifdef 
__USE_SVID


167 
fgëgª¡_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

168 
group
 *
__ª°ri˘
 
__ªsu…buf
,

169 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

170 
group
 **
__ª°ri˘
 
__ªsu…
);

176 #ifdef 
__USE_BSD


178 
	#__√ed_size_t


	)

179 
	~<°ddef.h
>

182 
	$£tgroups
 (
size_t
 
__n
, 
__c⁄°
 
__gid_t
 *
__groups
Ë
__THROW
;

192 
	`gëgrou∂i°
 (
__c⁄°
 *
__u£r
, 
__gid_t
 
__group
,

193 
__gid_t
 *
__groups
, *
__ngroups
);

203 
	`öôgroups
 (
__c⁄°
 *
__u£r
, 
__gid_t
 
__group
);

207 
__END_DECLS


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/ncurses.h

37 #i‚de‡
__NCURSES_H


38 
	#__NCURSES_H


	)

40 
	#CURSES
 1

	)

41 
	#CURSES_H
 1

	)

44 
	#NCURSES_VERSION_MAJOR
 5

	)

45 
	#NCURSES_VERSION_MINOR
 9

	)

46 
	#NCURSES_VERSION_PATCH
 20110404

	)

49 #unde‡
NCURSES_VERSION


50 
	#NCURSES_VERSION
 "5.9"

	)

55 
	#NCURSES_MOUSE_VERSION
 1

	)

60 
	~<ncur£s_dŒ.h
>

65 #i‚de‡
NCURSES_ENABLE_STDBOOL_H


66 
	#NCURSES_ENABLE_STDBOOL_H
 1

	)

73 #ifde‡
NCURSES_NOMACROS


74 #i‚de‡
NCURSES_ATTR_T


75 
	#NCURSES_ATTR_T
 
©å_t


	)

79 #i‚de‡
NCURSES_ATTR_T


80 
	#NCURSES_ATTR_T
 

	)

87 #unde‡
NCURSES_CONST


88 
	#NCURSES_CONST
 c⁄°

	)

90 #unde‡
NCURSES_INLINE


91 
	#NCURSES_INLINE
 
ölöe


	)

96 #unde‡
NCURSES_COLOR_T


97 
	#NCURSES_COLOR_T
 

	)

102 #i‚de‡
NCURSES_OPAQUE


103 
	#NCURSES_OPAQUE
 0

	)

109 #i‚de‡
NCURSES_REENTRANT


110 
	#NCURSES_REENTRANT
 0

	)

116 #unde‡
NCURSES_INTEROP_FUNCS


117 
	#NCURSES_INTEROP_FUNCS
 0

	)

122 #unde‡
NCURSES_SIZE_T


123 
	#NCURSES_SIZE_T
 

	)

128 #unde‡
NCURSES_TPARM_VARARGS


129 
	#NCURSES_TPARM_VARARGS
 1

	)

136 #unde‡
NCURSES_CH_T


137 
	#NCURSES_CH_T
 
chty≥


	)

139 #i‡0 && 
deföed
(
_LP64
)

140 
	tchty≥
;

141 
	tmmask_t
;

143 
	tchty≥
;

144 
	tmmask_t
;

150 
	~<°dio.h
>

156 #unde‡
NCURSES_WIDECHAR


157 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
Ë|| deföed(
_XPG5
)

158 
	#NCURSES_WIDECHAR


	)

161 
	~<°d¨g.h
>

162 #ifde‡
NCURSES_WIDECHAR


163 
	~<°ddef.h
>

178 #unde‡
TRUE


179 
	#TRUE
 1

	)

181 #unde‡
FALSE


182 
	#FALSE
 0

	)

184 
	tNCURSES_BOOL
;

186 #i‡
deföed
(
__˝lu•lus
)

189 
	#NCURSES_BOOL
 
boﬁ


	)

193 #i‡
NCURSES_ENABLE_STDBOOL_H


194 
	~<°dboﬁ.h
>

196 
	#NCURSES_BOOL
 
boﬁ


	)

199 #unde‡
boﬁ


200 
	#boﬁ
 
NCURSES_BOOL


	)

205 #ifde‡
__˝lu•lus


207 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë
°©ic_ˇ°
<ty≥>(vÆue)

	)

209 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë—y≥)(vÆue)

	)

216 
	#WA_ATTRIBUTES
 
A_ATTRIBUTES


	)

217 
	#WA_NORMAL
 
A_NORMAL


	)

218 
	#WA_STANDOUT
 
A_STANDOUT


	)

219 
	#WA_UNDERLINE
 
A_UNDERLINE


	)

220 
	#WA_REVERSE
 
A_REVERSE


	)

221 
	#WA_BLINK
 
A_BLINK


	)

222 
	#WA_DIM
 
A_DIM


	)

223 
	#WA_BOLD
 
A_BOLD


	)

224 
	#WA_ALTCHARSET
 
A_ALTCHARSET


	)

225 
	#WA_INVIS
 
A_INVIS


	)

226 
	#WA_PROTECT
 
A_PROTECT


	)

227 
	#WA_HORIZONTAL
 
A_HORIZONTAL


	)

228 
	#WA_LEFT
 
A_LEFT


	)

229 
	#WA_LOW
 
A_LOW


	)

230 
	#WA_RIGHT
 
A_RIGHT


	)

231 
	#WA_TOP
 
A_TOP


	)

232 
	#WA_VERTICAL
 
A_VERTICAL


	)

235 
	#COLOR_BLACK
 0

	)

236 
	#COLOR_RED
 1

	)

237 
	#COLOR_GREEN
 2

	)

238 
	#COLOR_YELLOW
 3

	)

239 
	#COLOR_BLUE
 4

	)

240 
	#COLOR_MAGENTA
 5

	)

241 
	#COLOR_CYAN
 6

	)

242 
	#COLOR_WHITE
 7

	)

246 #i‡0 || 
NCURSES_REENTRANT


247 
NCURSES_WRAPPED_VAR
(
chty≥
*, 
acs_m≠
);

248 
	#acs_m≠
 
	`NCURSES_PUBLIC_VAR
(
	`acs_m≠
())

	)

250 
NCURSES_EXPORT_VAR
(
chty≥
Ë
acs_m≠
[];

253 
	#NCURSES_ACS
(
c
Ë(
acs_m≠
[
	`NCURSES_CAST
(,c)])

	)

256 
	#ACS_ULCORNER
 
	`NCURSES_ACS
('l'Ë

	)

257 
	#ACS_LLCORNER
 
	`NCURSES_ACS
('m'Ë

	)

258 
	#ACS_URCORNER
 
	`NCURSES_ACS
('k'Ë

	)

259 
	#ACS_LRCORNER
 
	`NCURSES_ACS
('j'Ë

	)

260 
	#ACS_LTEE
 
	`NCURSES_ACS
('t'Ë

	)

261 
	#ACS_RTEE
 
	`NCURSES_ACS
('u'Ë

	)

262 
	#ACS_BTEE
 
	`NCURSES_ACS
('v'Ë

	)

263 
	#ACS_TTEE
 
	`NCURSES_ACS
('w'Ë

	)

264 
	#ACS_HLINE
 
	`NCURSES_ACS
('q'Ë

	)

265 
	#ACS_VLINE
 
	`NCURSES_ACS
('x'Ë

	)

266 
	#ACS_PLUS
 
	`NCURSES_ACS
('n'Ë

	)

267 
	#ACS_S1
 
	`NCURSES_ACS
('o'Ë

	)

268 
	#ACS_S9
 
	`NCURSES_ACS
('s'Ë

	)

269 
	#ACS_DIAMOND
 
	`NCURSES_ACS
('`'Ë

	)

270 
	#ACS_CKBOARD
 
	`NCURSES_ACS
('a'Ë

	)

271 
	#ACS_DEGREE
 
	`NCURSES_ACS
('f'Ë

	)

272 
	#ACS_PLMINUS
 
	`NCURSES_ACS
('g'Ë

	)

273 
	#ACS_BULLET
 
	`NCURSES_ACS
('~'Ë

	)

275 
	#ACS_LARROW
 
	`NCURSES_ACS
(','Ë

	)

276 
	#ACS_RARROW
 
	`NCURSES_ACS
('+'Ë

	)

277 
	#ACS_DARROW
 
	`NCURSES_ACS
('.'Ë

	)

278 
	#ACS_UARROW
 
	`NCURSES_ACS
('-'Ë

	)

279 
	#ACS_BOARD
 
	`NCURSES_ACS
('h'Ë

	)

280 
	#ACS_LANTERN
 
	`NCURSES_ACS
('i'Ë

	)

281 
	#ACS_BLOCK
 
	`NCURSES_ACS
('0'Ë

	)

287 
	#ACS_S3
 
	`NCURSES_ACS
('p'Ë

	)

288 
	#ACS_S7
 
	`NCURSES_ACS
('r'Ë

	)

289 
	#ACS_LEQUAL
 
	`NCURSES_ACS
('y'Ë

	)

290 
	#ACS_GEQUAL
 
	`NCURSES_ACS
('z'Ë

	)

291 
	#ACS_PI
 
	`NCURSES_ACS
('{'Ë

	)

292 
	#ACS_NEQUAL
 
	`NCURSES_ACS
('|'Ë

	)

293 
	#ACS_STERLING
 
	`NCURSES_ACS
('}'Ë

	)

301 
	#ACS_BSSB
 
ACS_ULCORNER


	)

302 
	#ACS_SSBB
 
ACS_LLCORNER


	)

303 
	#ACS_BBSS
 
ACS_URCORNER


	)

304 
	#ACS_SBBS
 
ACS_LRCORNER


	)

305 
	#ACS_SBSS
 
ACS_RTEE


	)

306 
	#ACS_SSSB
 
ACS_LTEE


	)

307 
	#ACS_SSBS
 
ACS_BTEE


	)

308 
	#ACS_BSSS
 
ACS_TTEE


	)

309 
	#ACS_BSBS
 
ACS_HLINE


	)

310 
	#ACS_SBSB
 
ACS_VLINE


	)

311 
	#ACS_SSSS
 
ACS_PLUS


	)

313 #unde‡
ERR


314 
	#ERR
 (-1)

	)

316 #unde‡
OK


317 
	#OK
 (0)

	)

320 
	#_SUBWIN
 0x01

	)

321 
	#_ENDLINE
 0x02

	)

322 
	#_FULLWIN
 0x04

	)

323 
	#_SCROLLWIN
 0x08

	)

324 
	#_ISPAD
 0x10

	)

325 
	#_HASMOVED
 0x20

	)

326 
	#_WRAPPED
 0x40

	)

332 
	#_NOCHANGE
 -1

	)

338 
	#_NEWINDEX
 -1

	)

340 
s¸ìn
 
	tSCREEN
;

341 
_wö_°
 
	tWINDOW
;

343 
chty≥
 
	t©å_t
;

345 #ifde‡
NCURSES_WIDECHAR


348 #ifde‡
mbÀn


349 #unde‡
mbÀn


351 
	~<libutf8.h
>

355 
	~<wch¨.h
>

359 
	twch¨_t
;

363 
	twöt_t
;

372 
	#CCHARW_MAX
 5

	)

375 
©å_t
 
	g©å
;

376 
wch¨_t
 
	gch¨s
[
CCHARW_MAX
];

378 #unde‡
NCURSES_EXT_COLORS


379 
	#NCURSES_EXT_COLORS
 20110404

	)

380 
	gext_cﬁ‹
;

383 
	tcch¨_t
;

387 #i‡!
NCURSES_OPAQUE


388 
	gld©
;

390 
	s_wö_°


392 
NCURSES_SIZE_T
 
	g_cury
, 
	g_curx
;

395 
NCURSES_SIZE_T
 
	g_maxy
, 
	g_maxx
;

396 
NCURSES_SIZE_T
 
	g_begy
, 
	g_begx
;

398 
	g_Êags
;

401 
©å_t
 
	g_©ås
;

402 
chty≥
 
	g_bkgd
;

405 
boﬁ
 
	g_nŸimeout
;

406 
boﬁ
 
	g_˛ór
;

407 
boﬁ
 
	g_Àaveok
;

408 
boﬁ
 
	g_s¸ﬁl
;

409 
boﬁ
 
	g_idlok
;

410 
boﬁ
 
	g_idcok
;

411 
boﬁ
 
	g_immed
;

412 
boﬁ
 
	g_sync
;

413 
boﬁ
 
	g_u£_key∑d
;

414 
	g_dñay
;

416 
ld©
 *
	g_löe
;

419 
NCURSES_SIZE_T
 
	g_ªgt›
;

420 
NCURSES_SIZE_T
 
	g_ªgbŸtom
;

423 
	g_∑rx
;

424 
	g_∑ry
;

425 
WINDOW
 *
	g_∑ª¡
;

428 
	spd©


430 
NCURSES_SIZE_T
 
	g_∑d_y
, 
	g_∑d_x
;

431 
NCURSES_SIZE_T
 
	g_∑d_t›
, 
	g_∑d_À·
;

432 
NCURSES_SIZE_T
 
	g_∑d_bŸtom
, 
	g_∑d_right
;

433 } 
	g_∑d
;

435 
NCURSES_SIZE_T
 
	g_yoff£t
;

437 #ifde‡
NCURSES_WIDECHAR


438 
cch¨_t
 
	g_bkg∫d
;

440 
	g_cﬁ‹
;

450 #ifde‡
NCURSES_WGETCH_EVENTS


451 #i‡!
deföed
(
__BEOS__
Ë|| deföed(
__HAIKU__
)

453 
	#NCURSES_EVENT_VERSION
 1

	)

459 
	#_NC_EVENT_TIMEOUT_MSEC
 1

	)

460 
	#_NC_EVENT_FILE
 2

	)

461 
	#_NC_EVENT_FILE_READABLE
 2

	)

463 
	#_NC_EVENT_FILE_WRITABLE
 4

	)

464 
	#_NC_EVENT_FILE_EXCEPTION
 8

	)

469 
	gty≥
;

472 
	gtimeout_m£c
;

475 
	gÊags
;

476 
	gfd
;

477 
	gªsu…
;

478 } 
	g„v
;

479 } 
	gd©a
;

480 } 
	t_nc_evít
;

484 
	gcou¡
;

485 
	gªsu…_Êags
;

486 
_nc_evít
 *
	gevíts
[1];

487 } 
	t_nc_evíéi°
;

489 
NCURSES_EXPORT
(Ë
wgëch_evíts
 (
WINDOW
 *, 
_nc_evíéi°
 *);

490 
NCURSES_EXPORT
(Ë
wgën°r_evíts
 (
WINDOW
 *,*,,
_nc_evíéi°
 *);

502 #i‡!(
deföed
(
__GNUC__
Ë|| deföed(
__GNUG__
Ë|| deföed(
__©åibuã__
))

503 
	#__©åibuã__
(
p
Ë

	)

514 #i‚de‡
GCC_PRINTFLIKE


515 #i‡
deföed
(
GCC_PRINTF
Ë&& !deföed(
¥ötf
)

516 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,fmt,v¨)))

	)

518 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë

	)

522 #i‚de‡
GCC_SCANFLIKE


523 #i‡
deföed
(
GCC_SCANF
Ë&& !deföed(
sˇnf
)

524 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
sˇnf
,fmt,v¨)))

	)

526 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë

	)

530 #i‚def 
GCC_NORETURN


531 
	#GCC_NORETURN


	)

534 #i‚def 
GCC_UNUSED


535 
	#GCC_UNUSED


	)

542 (*
	gNCURSES_OUTC
)();

551 
NCURSES_EXPORT
(Ë
addch
 (c⁄° 
chty≥
);

552 
NCURSES_EXPORT
(Ë
addchn°r
 (c⁄° 
chty≥
 *, );

553 
NCURSES_EXPORT
(Ë
addch°r
 (c⁄° 
chty≥
 *);

554 
NCURSES_EXPORT
(Ë
addn°r
 (const *, );

555 
NCURSES_EXPORT
(Ë
add°r
 (const *);

556 
NCURSES_EXPORT
(Ë
©åoff
 (
NCURSES_ATTR_T
);

557 
NCURSES_EXPORT
(Ë
©å⁄
 (
NCURSES_ATTR_T
);

558 
NCURSES_EXPORT
(Ë
©å£t
 (
NCURSES_ATTR_T
);

559 
NCURSES_EXPORT
(Ë
©å_gë
 (
©å_t
 *, *, *);

560 
NCURSES_EXPORT
(Ë
©å_off
 (
©å_t
, *);

561 
NCURSES_EXPORT
(Ë
©å_⁄
 (
©å_t
, *);

562 
NCURSES_EXPORT
(Ë
©å_£t
 (
©å_t
, , *);

563 
NCURSES_EXPORT
(Ë
baudøã
 ();

564 
NCURSES_EXPORT
(Ë
bìp
 ();

565 
NCURSES_EXPORT
(Ë
bkgd
 (
chty≥
);

566 
NCURSES_EXPORT
(Ë
bkgd£t
 (
chty≥
);

567 
NCURSES_EXPORT
(Ë
b‹dî
 (
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

568 
NCURSES_EXPORT
(Ë
box
 (
WINDOW
 *, 
chty≥
, chtype);

569 
NCURSES_EXPORT
(
boﬁ
Ë
ˇn_ch™ge_cﬁ‹
 ();

570 
NCURSES_EXPORT
(Ë
cbªak
 ();

571 
NCURSES_EXPORT
(Ë
chg©
 (, 
©å_t
, , const *);

572 
NCURSES_EXPORT
(Ë
˛ór
 ();

573 
NCURSES_EXPORT
(Ë
˛órok
 (
WINDOW
 *,
boﬁ
);

574 
NCURSES_EXPORT
(Ë
˛πobŸ
 ();

575 
NCURSES_EXPORT
(Ë
˛π€ﬁ
 ();

576 
NCURSES_EXPORT
(Ë
cﬁ‹_c⁄ã¡
 (,*,*,*);

577 
NCURSES_EXPORT
(Ë
cﬁ‹_£t
 (,*);

578 
NCURSES_EXPORT
(Ë
COLOR_PAIR
 ();

579 
NCURSES_EXPORT
(Ë
c›ywö
 (c⁄° 
WINDOW
*,WINDOW*,,,,,,,);

580 
NCURSES_EXPORT
(Ë
curs_£t
 ();

581 
NCURSES_EXPORT
(Ë
def_¥og_mode
 ();

582 
NCURSES_EXPORT
(Ë
def_shñl_mode
 ();

583 
NCURSES_EXPORT
(Ë
dñay_ouçut
 ();

584 
NCURSES_EXPORT
(Ë
dñch
 ();

585 
NCURSES_EXPORT
(Ë
dñs¸ìn
 (
SCREEN
 *);

586 
NCURSES_EXPORT
(Ë
dñwö
 (
WINDOW
 *);

587 
NCURSES_EXPORT
(Ë
dñëñn
 ();

588 
NCURSES_EXPORT
(
WINDOW
 *Ë
dîwö
 (WINDOW *,,,,);

589 
NCURSES_EXPORT
(Ë
doupd©e
 ();

590 
NCURSES_EXPORT
(
WINDOW
 *Ë
dupwö
 (WINDOW *);

591 
NCURSES_EXPORT
(Ë
echo
 ();

592 
NCURSES_EXPORT
(Ë
echoch¨
 (c⁄° 
chty≥
);

593 
NCURSES_EXPORT
(Ë
îa£
 ();

594 
NCURSES_EXPORT
(Ë
ídwö
 ();

595 
NCURSES_EXPORT
(Ë
îa£ch¨
 ();

596 
NCURSES_EXPORT
(Ë
fûãr
 ();

597 
NCURSES_EXPORT
(Ë
Êash
 ();

598 
NCURSES_EXPORT
(Ë
Êushöp
 ();

599 
NCURSES_EXPORT
(
chty≥
Ë
gëbkgd
 (
WINDOW
 *);

600 
NCURSES_EXPORT
(Ë
gëch
 ();

601 
NCURSES_EXPORT
(Ë
gën°r
 (*, );

602 
NCURSES_EXPORT
(Ë
gë°r
 (*);

603 
NCURSES_EXPORT
(
WINDOW
 *Ë
gëwö
 (
FILE
 *);

604 
NCURSES_EXPORT
(Ë
hÆfdñay
 ();

605 
NCURSES_EXPORT
(
boﬁ
Ë
has_cﬁ‹s
 ();

606 
NCURSES_EXPORT
(
boﬁ
Ë
has_ic
 ();

607 
NCURSES_EXPORT
(
boﬁ
Ë
has_û
 ();

608 
NCURSES_EXPORT
(Ë
hlöe
 (
chty≥
, );

609 
NCURSES_EXPORT
(Ë
idcok
 (
WINDOW
 *, 
boﬁ
);

610 
NCURSES_EXPORT
(Ë
idlok
 (
WINDOW
 *, 
boﬁ
);

611 
NCURSES_EXPORT
(Ë
immedok
 (
WINDOW
 *, 
boﬁ
);

612 
NCURSES_EXPORT
(
chty≥
Ë
öch
 ();

613 
NCURSES_EXPORT
(Ë
öchn°r
 (
chty≥
 *, );

614 
NCURSES_EXPORT
(Ë
öch°r
 (
chty≥
 *);

615 
NCURSES_EXPORT
(
WINDOW
 *Ë
öôs¸
 ();

616 
NCURSES_EXPORT
(Ë
öô_cﬁ‹
 (,,,);

617 
NCURSES_EXPORT
(Ë
öô_∑ú
 (,,);

618 
NCURSES_EXPORT
(Ë
ön°r
 (*, );

619 
NCURSES_EXPORT
(Ë
ösch
 (
chty≥
);

620 
NCURSES_EXPORT
(Ë
ösdñ 
 ();

621 
NCURSES_EXPORT
(Ë
ö£π 
 ();

622 
NCURSES_EXPORT
(Ë
ö¢°r
 (const *, );

623 
NCURSES_EXPORT
(Ë
ös°r
 (const *);

624 
NCURSES_EXPORT
(Ë
ö°r
 (*);

625 
NCURSES_EXPORT
(Ë
öåÊush
 (
WINDOW
 *,
boﬁ
);

626 
NCURSES_EXPORT
(
boﬁ
Ë
i£ndwö
 ();

627 
NCURSES_EXPORT
(
boﬁ
Ë
is_löëouched
 (
WINDOW
 *,);

628 
NCURSES_EXPORT
(
boﬁ
Ë
is_wötouched
 (
WINDOW
 *);

629 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key«me
 ();

630 
NCURSES_EXPORT
(Ë
key∑d
 (
WINDOW
 *,
boﬁ
);

631 
NCURSES_EXPORT
(Ë
kûlch¨
 ();

632 
NCURSES_EXPORT
(Ë
Àaveok
 (
WINDOW
 *,
boﬁ
);

633 
NCURSES_EXPORT
(*Ë
l⁄g«me
 ();

634 
NCURSES_EXPORT
(Ë
mëa
 (
WINDOW
 *,
boﬁ
);

635 
NCURSES_EXPORT
(Ë
move
 (, );

636 
NCURSES_EXPORT
(Ë
mvaddch
 (, , c⁄° 
chty≥
);

637 
NCURSES_EXPORT
(Ë
mvaddchn°r
 (, , c⁄° 
chty≥
 *, );

638 
NCURSES_EXPORT
(Ë
mvaddch°r
 (, , c⁄° 
chty≥
 *);

639 
NCURSES_EXPORT
(Ë
mvaddn°r
 (, , const *, );

640 
NCURSES_EXPORT
(Ë
mvadd°r
 (, , const *);

641 
NCURSES_EXPORT
(Ë
mvchg©
 (, , , 
©å_t
, , const *);

642 
NCURSES_EXPORT
(Ë
mvcur
 (,,,);

643 
NCURSES_EXPORT
(Ë
mvdñch
 (, );

644 
NCURSES_EXPORT
(Ë
mvdîwö
 (
WINDOW
 *, , );

645 
NCURSES_EXPORT
(Ë
mvgëch
 (, );

646 
NCURSES_EXPORT
(Ë
mvgën°r
 (, , *, );

647 
NCURSES_EXPORT
(Ë
mvgë°r
 (, , *);

648 
NCURSES_EXPORT
(Ë
mvhlöe
 (, , 
chty≥
, );

649 
NCURSES_EXPORT
(
chty≥
Ë
mvöch
 (, );

650 
NCURSES_EXPORT
(Ë
mvöchn°r
 (, , 
chty≥
 *, );

651 
NCURSES_EXPORT
(Ë
mvöch°r
 (, , 
chty≥
 *);

652 
NCURSES_EXPORT
(Ë
mvön°r
 (, , *, );

653 
NCURSES_EXPORT
(Ë
mvösch
 (, , 
chty≥
);

654 
NCURSES_EXPORT
(Ë
mvö¢°r
 (, , const *, );

655 
NCURSES_EXPORT
(Ë
mvös°r
 (, , const *);

656 
NCURSES_EXPORT
(Ë
mvö°r
 (, , *);

657 
NCURSES_EXPORT
(Ë
mv¥ötw
 (,, const *,...)

658 
GCC_PRINTFLIKE
(3,4);

659 
NCURSES_EXPORT
(Ë
mvsˇnw
 (,, 
NCURSES_CONST
 *,...)

660 
GCC_SCANFLIKE
(3,4);

661 
NCURSES_EXPORT
(Ë
mvvlöe
 (, , 
chty≥
, );

662 
NCURSES_EXPORT
(Ë
mvwaddch
 (
WINDOW
 *, , , c⁄° 
chty≥
);

663 
NCURSES_EXPORT
(Ë
mvwaddchn°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *, );

664 
NCURSES_EXPORT
(Ë
mvwaddch°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *);

665 
NCURSES_EXPORT
(Ë
mvwaddn°r
 (
WINDOW
 *, , , const *, );

666 
NCURSES_EXPORT
(Ë
mvwadd°r
 (
WINDOW
 *, , , const *);

667 
NCURSES_EXPORT
(Ë
mvwchg©
 (
WINDOW
 *, , , , 
©å_t
, , const *);

668 
NCURSES_EXPORT
(Ë
mvwdñch
 (
WINDOW
 *, , );

669 
NCURSES_EXPORT
(Ë
mvwgëch
 (
WINDOW
 *, , );

670 
NCURSES_EXPORT
(Ë
mvwgën°r
 (
WINDOW
 *, , , *, );

671 
NCURSES_EXPORT
(Ë
mvwgë°r
 (
WINDOW
 *, , , *);

672 
NCURSES_EXPORT
(Ë
mvwhlöe
 (
WINDOW
 *, , , 
chty≥
, );

673 
NCURSES_EXPORT
(Ë
mvwö
 (
WINDOW
 *,,);

674 
NCURSES_EXPORT
(
chty≥
Ë
mvwöch
 (
WINDOW
 *, , );

675 
NCURSES_EXPORT
(Ë
mvwöchn°r
 (
WINDOW
 *, , , 
chty≥
 *, );

676 
NCURSES_EXPORT
(Ë
mvwöch°r
 (
WINDOW
 *, , , 
chty≥
 *);

677 
NCURSES_EXPORT
(Ë
mvwön°r
 (
WINDOW
 *, , , *, );

678 
NCURSES_EXPORT
(Ë
mvwösch
 (
WINDOW
 *, , , 
chty≥
);

679 
NCURSES_EXPORT
(Ë
mvwö¢°r
 (
WINDOW
 *, , , const *, );

680 
NCURSES_EXPORT
(Ë
mvwös°r
 (
WINDOW
 *, , , const *);

681 
NCURSES_EXPORT
(Ë
mvwö°r
 (
WINDOW
 *, , , *);

682 
NCURSES_EXPORT
(Ë
mvw¥ötw
 (
WINDOW
*,,, const *,...)

683 
GCC_PRINTFLIKE
(4,5);

684 
NCURSES_EXPORT
(Ë
mvwsˇnw
 (
WINDOW
 *,,, 
NCURSES_CONST
 *,...)

685 
GCC_SCANFLIKE
(4,5);

686 
NCURSES_EXPORT
(Ë
mvwvlöe
 (
WINDOW
 *,, , 
chty≥
, );

687 
NCURSES_EXPORT
(Ë
«pms
 ();

688 
NCURSES_EXPORT
(
WINDOW
 *Ë
√w∑d
 (,);

689 
NCURSES_EXPORT
(
SCREEN
 *Ë
√wãrm
 (
NCURSES_CONST
 *,
FILE
 *,FILE *);

690 
NCURSES_EXPORT
(
WINDOW
 *Ë
√wwö
 (,,,);

691 
NCURSES_EXPORT
(Ë
∆
 ();

692 
NCURSES_EXPORT
(Ë
nocbªak
 ();

693 
NCURSES_EXPORT
(Ë
nodñay
 (
WINDOW
 *,
boﬁ
);

694 
NCURSES_EXPORT
(Ë
n€cho
 ();

695 
NCURSES_EXPORT
(Ë
n⁄l
 ();

696 
NCURSES_EXPORT
(Ë
noqiÊush
 ();

697 
NCURSES_EXPORT
(Ë
n‹aw
 ();

698 
NCURSES_EXPORT
(Ë
nŸimeout
 (
WINDOW
 *,
boﬁ
);

699 
NCURSES_EXPORT
(Ë
ovîœy
 (c⁄° 
WINDOW
*,WINDOW *);

700 
NCURSES_EXPORT
(Ë
ovîwrôe
 (c⁄° 
WINDOW
*,WINDOW *);

701 
NCURSES_EXPORT
(Ë
∑ú_c⁄ã¡
 (,*,*);

702 
NCURSES_EXPORT
(Ë
PAIR_NUMBER
 ();

703 
NCURSES_EXPORT
(Ë
≥choch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

704 
NCURSES_EXPORT
(Ë
≤ouåe‰esh
 (
WINDOW
*,,,,,,);

705 
NCURSES_EXPORT
(Ë
¥e‰esh
 (
WINDOW
 *,,,,,,);

706 
NCURSES_EXPORT
(Ë
¥ötw
 (const *,...)

707 
GCC_PRINTFLIKE
(1,2);

708 
NCURSES_EXPORT
(Ë
putwö
 (
WINDOW
 *, 
FILE
 *);

709 
NCURSES_EXPORT
(Ë
qiÊush
 ();

710 
NCURSES_EXPORT
(Ë
øw
 ();

711 
NCURSES_EXPORT
(Ë
ªdøwwö
 (
WINDOW
 *);

712 
NCURSES_EXPORT
(Ë
ª‰esh
 ();

713 
NCURSES_EXPORT
(Ë
ª£ây
 ();

714 
NCURSES_EXPORT
(Ë
ª£t_¥og_mode
 ();

715 
NCURSES_EXPORT
(Ë
ª£t_shñl_mode
 ();

716 
NCURSES_EXPORT
(Ë
rùofÊöe
 (, (*)(
WINDOW
 *, ));

717 
NCURSES_EXPORT
(Ë
ßvëty
 ();

718 
NCURSES_EXPORT
(Ë
sˇnw
 (
NCURSES_CONST
 *,...)

719 
GCC_SCANFLIKE
(1,2);

720 
NCURSES_EXPORT
(Ë
s¸_dump
 (const *);

721 
NCURSES_EXPORT
(Ë
s¸_öô
 (const *);

722 
NCURSES_EXPORT
(Ë
s¸l
 ();

723 
NCURSES_EXPORT
(Ë
s¸ﬁl
 (
WINDOW
 *);

724 
NCURSES_EXPORT
(Ë
s¸ﬁlok
 (
WINDOW
 *,
boﬁ
);

725 
NCURSES_EXPORT
(Ë
s¸_ª°‹e
 (const *);

726 
NCURSES_EXPORT
(Ë
s¸_£t
 (const *);

727 
NCURSES_EXPORT
(Ë
£ts¸ªg
 (,);

728 
NCURSES_EXPORT
(
SCREEN
 *Ë
£t_ãrm
 (SCREEN *);

729 
NCURSES_EXPORT
(Ë
¶k_©åoff
 (c⁄° 
chty≥
);

730 
NCURSES_EXPORT
(Ë
¶k_©å_off
 (c⁄° 
©å_t
, *);

731 
NCURSES_EXPORT
(Ë
¶k_©å⁄
 (c⁄° 
chty≥
);

732 
NCURSES_EXPORT
(Ë
¶k_©å_⁄
 (
©å_t
,*);

733 
NCURSES_EXPORT
(Ë
¶k_©å£t
 (c⁄° 
chty≥
);

734 
NCURSES_EXPORT
(
©å_t
Ë
¶k_©å
 ();

735 
NCURSES_EXPORT
(Ë
¶k_©å_£t
 (c⁄° 
©å_t
,,*);

736 
NCURSES_EXPORT
(Ë
¶k_˛ór
 ();

737 
NCURSES_EXPORT
(Ë
¶k_cﬁ‹
 ();

738 
NCURSES_EXPORT
(Ë
¶k_öô
 ();

739 
NCURSES_EXPORT
(*Ë
¶k_œbñ
 ();

740 
NCURSES_EXPORT
(Ë
¶k_nouåe‰esh
 ();

741 
NCURSES_EXPORT
(Ë
¶k_ª‰esh
 ();

742 
NCURSES_EXPORT
(Ë
¶k_ª°‹e
 ();

743 
NCURSES_EXPORT
(Ë
¶k_£t
 (,const *,);

744 
NCURSES_EXPORT
(Ë
¶k_touch
 ();

745 
NCURSES_EXPORT
(Ë
°™dout
 ();

746 
NCURSES_EXPORT
(Ë
°™díd
 ();

747 
NCURSES_EXPORT
(Ë
°¨t_cﬁ‹
 ();

748 
NCURSES_EXPORT
(
WINDOW
 *Ë
sub∑d
 (WINDOW *, , , , );

749 
NCURSES_EXPORT
(
WINDOW
 *Ë
subwö
 (WINDOW *, , , , );

750 
NCURSES_EXPORT
(Ë
syncok
 (
WINDOW
 *, 
boﬁ
);

751 
NCURSES_EXPORT
(
chty≥
Ë
ãrm©ås
 ();

752 
NCURSES_EXPORT
(*Ë
ãrm«me
 ();

753 
NCURSES_EXPORT
(Ë
timeout
 ();

754 
NCURSES_EXPORT
(Ë
touchlöe
 (
WINDOW
 *, , );

755 
NCURSES_EXPORT
(Ë
touchwö
 (
WINDOW
 *);

756 
NCURSES_EXPORT
(Ë
ty≥ahód
 ();

757 
NCURSES_EXPORT
(Ë
ungëch
 ();

758 
NCURSES_EXPORT
(Ë
u¡ouchwö
 (
WINDOW
 *);

759 
NCURSES_EXPORT
(Ë
u£_ív
 (
boﬁ
);

760 
NCURSES_EXPORT
(Ë
vid©å
 (
chty≥
);

761 
NCURSES_EXPORT
(Ë
vidputs
 (
chty≥
, 
NCURSES_OUTC
);

762 
NCURSES_EXPORT
(Ë
vlöe
 (
chty≥
, );

763 
NCURSES_EXPORT
(Ë
vw¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

764 
NCURSES_EXPORT
(Ë
vw_¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

765 
NCURSES_EXPORT
(Ë
vwsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

766 
NCURSES_EXPORT
(Ë
vw_sˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

767 
NCURSES_EXPORT
(Ë
waddch
 (
WINDOW
 *, c⁄° 
chty≥
);

768 
NCURSES_EXPORT
(Ë
waddchn°r
 (
WINDOW
 *,c⁄° 
chty≥
 *,);

769 
NCURSES_EXPORT
(Ë
waddch°r
 (
WINDOW
 *,c⁄° 
chty≥
 *);

770 
NCURSES_EXPORT
(Ë
waddn°r
 (
WINDOW
 *,const *,);

771 
NCURSES_EXPORT
(Ë
wadd°r
 (
WINDOW
 *,const *);

772 
NCURSES_EXPORT
(Ë
w©å⁄
 (
WINDOW
 *, );

773 
NCURSES_EXPORT
(Ë
w©åoff
 (
WINDOW
 *, );

774 
NCURSES_EXPORT
(Ë
w©å£t
 (
WINDOW
 *, );

775 
NCURSES_EXPORT
(Ë
w©å_gë
 (
WINDOW
 *, 
©å_t
 *, *, *);

776 
NCURSES_EXPORT
(Ë
w©å_⁄
 (
WINDOW
 *, 
©å_t
, *);

777 
NCURSES_EXPORT
(Ë
w©å_off
 (
WINDOW
 *, 
©å_t
, *);

778 
NCURSES_EXPORT
(Ë
w©å_£t
 (
WINDOW
 *, 
©å_t
, , *);

779 
NCURSES_EXPORT
(Ë
wbkgd
 (
WINDOW
 *, 
chty≥
);

780 
NCURSES_EXPORT
(Ë
wbkgd£t
 (
WINDOW
 *,
chty≥
);

781 
NCURSES_EXPORT
(Ë
wb‹dî
 (
WINDOW
 *,
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

782 
NCURSES_EXPORT
(Ë
wchg©
 (
WINDOW
 *, , 
©å_t
, , const *);

783 
NCURSES_EXPORT
(Ë
w˛ór
 (
WINDOW
 *);

784 
NCURSES_EXPORT
(Ë
w˛πobŸ
 (
WINDOW
 *);

785 
NCURSES_EXPORT
(Ë
w˛π€ﬁ
 (
WINDOW
 *);

786 
NCURSES_EXPORT
(Ë
wcﬁ‹_£t
 (
WINDOW
*,,*);

787 
NCURSES_EXPORT
(Ë
wcursyncup
 (
WINDOW
 *);

788 
NCURSES_EXPORT
(Ë
wdñch
 (
WINDOW
 *);

789 
NCURSES_EXPORT
(Ë
wdñëñn
 (
WINDOW
 *);

790 
NCURSES_EXPORT
(Ë
wechoch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

791 
NCURSES_EXPORT
(Ë
wîa£
 (
WINDOW
 *);

792 
NCURSES_EXPORT
(Ë
wgëch
 (
WINDOW
 *);

793 
NCURSES_EXPORT
(Ë
wgën°r
 (
WINDOW
 *,*,);

794 
NCURSES_EXPORT
(Ë
wgë°r
 (
WINDOW
 *, *);

795 
NCURSES_EXPORT
(Ë
whlöe
 (
WINDOW
 *, 
chty≥
, );

796 
NCURSES_EXPORT
(
chty≥
Ë
wöch
 (
WINDOW
 *);

797 
NCURSES_EXPORT
(Ë
wöchn°r
 (
WINDOW
 *, 
chty≥
 *, );

798 
NCURSES_EXPORT
(Ë
wöch°r
 (
WINDOW
 *, 
chty≥
 *);

799 
NCURSES_EXPORT
(Ë
wön°r
 (
WINDOW
 *, *, );

800 
NCURSES_EXPORT
(Ë
wösch
 (
WINDOW
 *, 
chty≥
);

801 
NCURSES_EXPORT
(Ë
wösdñ 
 (
WINDOW
 *,);

802 
NCURSES_EXPORT
(Ë
wö£π 
 (
WINDOW
 *);

803 
NCURSES_EXPORT
(Ë
wö¢°r
 (
WINDOW
 *, const *,);

804 
NCURSES_EXPORT
(Ë
wös°r
 (
WINDOW
 *, const *);

805 
NCURSES_EXPORT
(Ë
wö°r
 (
WINDOW
 *, *);

806 
NCURSES_EXPORT
(Ë
wmove
 (
WINDOW
 *,,);

807 
NCURSES_EXPORT
(Ë
wnouåe‰esh
 (
WINDOW
 *);

808 
NCURSES_EXPORT
(Ë
w¥ötw
 (
WINDOW
 *, const *,...)

809 
GCC_PRINTFLIKE
(2,3);

810 
NCURSES_EXPORT
(Ë
wªdøw 
 (
WINDOW
 *,,);

811 
NCURSES_EXPORT
(Ë
wª‰esh
 (
WINDOW
 *);

812 
NCURSES_EXPORT
(Ë
wsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,...)

813 
GCC_SCANFLIKE
(2,3);

814 
NCURSES_EXPORT
(Ë
ws¸l
 (
WINDOW
 *,);

815 
NCURSES_EXPORT
(Ë
w£ts¸ªg
 (
WINDOW
 *,,);

816 
NCURSES_EXPORT
(Ë
w°™dout
 (
WINDOW
 *);

817 
NCURSES_EXPORT
(Ë
w°™díd
 (
WINDOW
 *);

818 
NCURSES_EXPORT
(Ë
wsyncdown
 (
WINDOW
 *);

819 
NCURSES_EXPORT
(Ë
wsyncup
 (
WINDOW
 *);

820 
NCURSES_EXPORT
(Ë
wtimeout
 (
WINDOW
 *,);

821 
NCURSES_EXPORT
(Ë
wtouch 
 (
WINDOW
 *,,,);

822 
NCURSES_EXPORT
(Ë
wvlöe
 (
WINDOW
 *,
chty≥
,);

827 
NCURSES_EXPORT
(Ë
tigëÊag
 (
NCURSES_CONST
 *);

828 
NCURSES_EXPORT
(Ë
tigënum
 (
NCURSES_CONST
 *);

829 
NCURSES_EXPORT
(*Ë
tigë°r
 (
NCURSES_CONST
 *);

830 
NCURSES_EXPORT
(Ë
puç
 (const *);

832 #i‡
NCURSES_TPARM_VARARGS


833 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ...);

835 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ,,,,,,,,);

836 
NCURSES_EXPORT
(*Ë
ç¨m_v¨¨gs
 (
NCURSES_CONST
 *, ...);

839 
NCURSES_EXPORT
(*Ë
tù¨m
 (const *, ...);

844 
NCURSES_EXPORT
(Ë
gë©ås
 (c⁄° 
WINDOW
 *);

845 
NCURSES_EXPORT
(Ë
gëcurx
 (c⁄° 
WINDOW
 *);

846 
NCURSES_EXPORT
(Ë
gëcury
 (c⁄° 
WINDOW
 *);

847 
NCURSES_EXPORT
(Ë
gëbegx
 (c⁄° 
WINDOW
 *);

848 
NCURSES_EXPORT
(Ë
gëbegy
 (c⁄° 
WINDOW
 *);

849 
NCURSES_EXPORT
(Ë
gëmaxx
 (c⁄° 
WINDOW
 *);

850 
NCURSES_EXPORT
(Ë
gëmaxy
 (c⁄° 
WINDOW
 *);

851 
NCURSES_EXPORT
(Ë
gë∑rx
 (c⁄° 
WINDOW
 *);

852 
NCURSES_EXPORT
(Ë
gë∑ry
 (c⁄° 
WINDOW
 *);

857 #i‚de‡
NCURSES_WIDECHAR


858 
	#vid_©å
(
a
,
∑ú
,
›ts
Ë
	`vid©å
◊)

	)

865 #unde‡
NCURSES_EXT_FUNCS


866 
	#NCURSES_EXT_FUNCS
 20110404

	)

867 (*
	gNCURSES_WINDOW_CB
)(
	tWINDOW
 *, *);

868 (*
	gNCURSES_SCREEN_CB
)(
	tSCREEN
 *, *);

869 
NCURSES_EXPORT
(
boﬁ
Ë
is_ãrm_ªsized
 (, );

870 
NCURSES_EXPORT
(*Ë
keybound
 (, );

871 
NCURSES_EXPORT
(c⁄° *Ë
cur£s_vîsi⁄
 ();

872 
NCURSES_EXPORT
(Ë
assume_deÁu…_cﬁ‹s
 (, );

873 
NCURSES_EXPORT
(Ë
deföe_key
 (const *, );

874 
NCURSES_EXPORT
(Ë
gë_escdñay
 ();

875 
NCURSES_EXPORT
(Ë
key_deföed
 (const *);

876 
NCURSES_EXPORT
(Ë
keyok
 (, 
boﬁ
);

877 
NCURSES_EXPORT
(Ë
ªsize_ãrm
 (, );

878 
NCURSES_EXPORT
(Ë
ªsizëîm
 (, );

879 
NCURSES_EXPORT
(Ë
£t_escdñay
 ();

880 
NCURSES_EXPORT
(Ë
£t_èbsize
 ();

881 
NCURSES_EXPORT
(Ë
u£_deÁu…_cﬁ‹s
 ();

882 
NCURSES_EXPORT
(Ë
u£_exãnded_«mes
 (
boﬁ
);

883 
NCURSES_EXPORT
(Ë
u£_Àgacy_codög
 ();

884 
NCURSES_EXPORT
(Ë
u£_s¸ìn
 (
SCREEN
 *, 
NCURSES_SCREEN_CB
, *);

885 
NCURSES_EXPORT
(Ë
u£_wödow
 (
WINDOW
 *, 
NCURSES_WINDOW_CB
, *);

886 
NCURSES_EXPORT
(Ë
wªsize
 (
WINDOW
 *, , );

887 
NCURSES_EXPORT
(Ë
nofûãr
();

893 
NCURSES_EXPORT
(
WINDOW
 *Ë
wgë∑ª¡
 (const WINDOW *);

894 
NCURSES_EXPORT
(
boﬁ
Ë
is_˛óªd
 (c⁄° 
WINDOW
 *);

895 
NCURSES_EXPORT
(
boﬁ
Ë
is_idcok
 (c⁄° 
WINDOW
 *);

896 
NCURSES_EXPORT
(
boﬁ
Ë
is_idlok
 (c⁄° 
WINDOW
 *);

897 
NCURSES_EXPORT
(
boﬁ
Ë
is_immedok
 (c⁄° 
WINDOW
 *);

898 
NCURSES_EXPORT
(
boﬁ
Ë
is_key∑d
 (c⁄° 
WINDOW
 *);

899 
NCURSES_EXPORT
(
boﬁ
Ë
is_Àaveok
 (c⁄° 
WINDOW
 *);

900 
NCURSES_EXPORT
(
boﬁ
Ë
is_nodñay
 (c⁄° 
WINDOW
 *);

901 
NCURSES_EXPORT
(
boﬁ
Ë
is_nŸimeout
 (c⁄° 
WINDOW
 *);

902 
NCURSES_EXPORT
(
boﬁ
Ë
is_∑d
 (c⁄° 
WINDOW
 *);

903 
NCURSES_EXPORT
(
boﬁ
Ë
is_s¸ﬁlok
 (c⁄° 
WINDOW
 *);

904 
NCURSES_EXPORT
(
boﬁ
Ë
is_subwö
 (c⁄° 
WINDOW
 *);

905 
NCURSES_EXPORT
(
boﬁ
Ë
is_syncok
 (c⁄° 
WINDOW
 *);

906 
NCURSES_EXPORT
(Ë
wgës¸ªg
 (c⁄° 
WINDOW
 *, *, *);

909 
	#cur£s_vîsi⁄
(Ë
NCURSES_VERSION


	)

917 #unde‡
NCURSES_SP_FUNCS


918 
	#NCURSES_SP_FUNCS
 20110404

	)

919 
	#NCURSES_SP_NAME
(
«me
Ë«me##
_•


	)

922 
	#NCURSES_SP_OUTC
 
	`NCURSES_SP_NAME
(
NCURSES_OUTC
)

	)

923 (*
	gNCURSES_SP_OUTC
)(
	tSCREEN
*, );

925 
NCURSES_EXPORT
(
SCREEN
 *Ë
√w_¥es¸
 ();

927 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
baudøã
Ë(
SCREEN
*);

928 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
bìp
Ë(
SCREEN
*);

929 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
ˇn_ch™ge_cﬁ‹
Ë(
SCREEN
*);

930 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
cbªak
Ë(
SCREEN
*);

931 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
curs_£t
Ë(
SCREEN
*, );

932 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
cﬁ‹_c⁄ã¡
Ë(
SCREEN
*, , *, *, *);

933 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
def_¥og_mode
Ë(
SCREEN
*);

934 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
def_shñl_mode
Ë(
SCREEN
*);

935 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
dñay_ouçut
Ë(
SCREEN
*, );

936 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
doupd©e
Ë(
SCREEN
*);

937 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
echo
Ë(
SCREEN
*);

938 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ídwö
Ë(
SCREEN
*);

939 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
îa£ch¨
Ë(
SCREEN
*);

940 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
fûãr
Ë(
SCREEN
*);

941 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
Êash
Ë(
SCREEN
*);

942 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
Êushöp
Ë(
SCREEN
*);

943 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
gëwö
Ë(
SCREEN
*, 
FILE
 *);

944 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
hÆfdñay
Ë(
SCREEN
*, );

945 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_cﬁ‹s
Ë(
SCREEN
*);

946 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_ic
Ë(
SCREEN
*);

947 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_û
Ë(
SCREEN
*);

948 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_cﬁ‹
Ë(
SCREEN
*, , , , );

949 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_∑ú
Ë(
SCREEN
*, , , );

950 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öåÊush
Ë(
SCREEN
*, 
WINDOW
*, 
boﬁ
);

951 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
i£ndwö
Ë(
SCREEN
*);

952 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
NCURSES_SP_NAME
(
key«me
Ë(
SCREEN
*, );

953 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
kûlch¨
Ë(
SCREEN
*);

954 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
l⁄g«me
Ë(
SCREEN
*);

955 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
mvcur
Ë(
SCREEN
*, , , , );

956 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
«pms
Ë(
SCREEN
*, );

957 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
√w∑d
Ë(
SCREEN
*, , );

958 
NCURSES_EXPORT
(
SCREEN
 *Ë
NCURSES_SP_NAME
(
√wãrm
Ë(SCREEN*, 
NCURSES_CONST
 *, 
FILE
 *, FILE *);

959 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
√wwö
Ë(
SCREEN
*, , , , );

960 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
∆
Ë(
SCREEN
*);

961 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
nocbªak
Ë(
SCREEN
*);

962 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n€cho
Ë(
SCREEN
*);

963 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n⁄l
Ë(
SCREEN
*);

964 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
noqiÊush
Ë(
SCREEN
*);

965 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n‹aw
Ë(
SCREEN
*);

966 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
∑ú_c⁄ã¡
Ë(
SCREEN
*, , *, *);

967 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
qiÊush
Ë(
SCREEN
*);

968 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
øw
Ë(
SCREEN
*);

969 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£t_¥og_mode
Ë(
SCREEN
*);

970 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£t_shñl_mode
Ë(
SCREEN
*);

971 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£ây
Ë(
SCREEN
*);

972 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
rùofÊöe
Ë(
SCREEN
*, , (*)(
WINDOW
 *, ));

973 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ßvëty
Ë(
SCREEN
*);

974 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_öô
Ë(
SCREEN
*, const *);

975 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_ª°‹e
Ë(
SCREEN
*, const *);

976 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_£t
Ë(
SCREEN
*, const *);

977 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©åoff
Ë(
SCREEN
*, c⁄° 
chty≥
);

978 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å⁄
Ë(
SCREEN
*, c⁄° 
chty≥
);

979 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å£t
Ë(
SCREEN
*, c⁄° 
chty≥
);

980 
NCURSES_EXPORT
(
©å_t
Ë
NCURSES_SP_NAME
(
¶k_©å
Ë(
SCREEN
*);

981 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å_£t
Ë(
SCREEN
*, c⁄° 
©å_t
, , *);

982 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_˛ór
Ë(
SCREEN
*);

983 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_cﬁ‹
Ë(
SCREEN
*, );

984 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_öô
Ë(
SCREEN
*, );

985 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
¶k_œbñ
Ë(
SCREEN
*, );

986 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_nouåe‰esh
Ë(
SCREEN
*);

987 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_ª‰esh
Ë(
SCREEN
*);

988 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_ª°‹e
Ë(
SCREEN
*);

989 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_£t
Ë(
SCREEN
*, , const *, );

990 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_touch
Ë(
SCREEN
*);

991 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
°¨t_cﬁ‹
Ë(
SCREEN
*);

992 
NCURSES_EXPORT
(
chty≥
Ë
NCURSES_SP_NAME
(
ãrm©ås
Ë(
SCREEN
*);

993 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
ãrm«me
Ë(
SCREEN
*);

994 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ty≥ahód
Ë(
SCREEN
*, );

995 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungëch
Ë(
SCREEN
*, );

996 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_ív
Ë(
SCREEN
*, 
boﬁ
);

997 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vid©å
Ë(
SCREEN
*, 
chty≥
);

998 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vidputs
Ë(
SCREEN
*, 
chty≥
, 
NCURSES_SP_OUTC
);

1000 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
keybound
Ë(
SCREEN
*, , );

1001 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
assume_deÁu…_cﬁ‹s
Ë(
SCREEN
*, , );

1002 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
deföe_key
Ë(
SCREEN
*, const *, );

1003 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
gë_escdñay
Ë(
SCREEN
*);

1004 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
is_ãrm_ªsized
Ë(
SCREEN
*, , );

1005 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
key_deföed
Ë(
SCREEN
*, const *);

1006 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
keyok
Ë(
SCREEN
*, , 
boﬁ
);

1007 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
nofûãr
Ë(
SCREEN
*);

1008 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ªsize_ãrm
Ë(
SCREEN
*, , );

1009 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ªsizëîm
Ë(
SCREEN
*, , );

1010 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
£t_escdñay
Ë(
SCREEN
*, );

1011 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
£t_èbsize
Ë(
SCREEN
*, );

1012 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_deÁu…_cﬁ‹s
Ë(
SCREEN
*);

1013 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_Àgacy_codög
Ë(
SCREEN
*, );

1016 #unde‡
NCURSES_SP_FUNCS


1017 
	#NCURSES_SP_FUNCS
 0

	)

1018 
	#NCURSES_SP_NAME
(
«me
Ë
	)
name

1019 
	#NCURSES_SP_OUTC
 
NCURSES_OUTC


	)

1024 
	#NCURSES_ATTR_SHIFT
 8

	)

1025 
	#NCURSES_BITS
(
mask
,
shi·
Ë((maskË<< ((shi·Ë+ 
NCURSES_ATTR_SHIFT
))

	)

1027 
	#A_NORMAL
 (1UL - 1UL)

	)

1028 
	#A_ATTRIBUTES
 
	`NCURSES_BITS
(~(1UL - 1UL),0)

	)

1029 
	#A_CHARTEXT
 (
	`NCURSES_BITS
(1UL,0Ë- 1UL)

	)

1030 
	#A_COLOR
 
	`NCURSES_BITS
(((1ULË<< 8Ë- 1UL,0)

	)

1031 
	#A_STANDOUT
 
	`NCURSES_BITS
(1UL,8)

	)

1032 
	#A_UNDERLINE
 
	`NCURSES_BITS
(1UL,9)

	)

1033 
	#A_REVERSE
 
	`NCURSES_BITS
(1UL,10)

	)

1034 
	#A_BLINK
 
	`NCURSES_BITS
(1UL,11)

	)

1035 
	#A_DIM
 
	`NCURSES_BITS
(1UL,12)

	)

1036 
	#A_BOLD
 
	`NCURSES_BITS
(1UL,13)

	)

1037 
	#A_ALTCHARSET
 
	`NCURSES_BITS
(1UL,14)

	)

1038 
	#A_INVIS
 
	`NCURSES_BITS
(1UL,15)

	)

1039 
	#A_PROTECT
 
	`NCURSES_BITS
(1UL,16)

	)

1040 
	#A_HORIZONTAL
 
	`NCURSES_BITS
(1UL,17)

	)

1041 
	#A_LEFT
 
	`NCURSES_BITS
(1UL,18)

	)

1042 
	#A_LOW
 
	`NCURSES_BITS
(1UL,19)

	)

1043 
	#A_RIGHT
 
	`NCURSES_BITS
(1UL,20)

	)

1044 
	#A_TOP
 
	`NCURSES_BITS
(1UL,21)

	)

1045 
	#A_VERTICAL
 
	`NCURSES_BITS
(1UL,22)

	)

1057 
	#gëyx
(
wö
,
y
,
x
Ë(y = 
	`gëcury
(wö), x = 
	`gëcurx
(wö))

	)

1058 
	#gëbegyx
(
wö
,
y
,
x
Ë(y = 
	`gëbegy
(wö), x = 
	`gëbegx
(wö))

	)

1059 
	#gëmaxyx
(
wö
,
y
,
x
Ë(y = 
	`gëmaxy
(wö), x = 
	`gëmaxx
(wö))

	)

1060 
	#gë∑ryx
(
wö
,
y
,
x
Ë(y = 
	`gë∑ry
(wö), x = 
	`gë∑rx
(wö))

	)

1062 
	#gësyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

1063 i‡(
	`is_Àaveok
(
√ws¸
)) \

1064 (
y
Ë(
x
) = -1; \

1066 
	`gëyx
(
√ws¸
,(
y
), (
x
)); \

1068 } 0)

	)

1070 
	#£tsyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

1071 i‡((
y
Ë=-1 && (
x
) == -1) \

1072 
	`Àaveok
(
√ws¸
, 
TRUE
); \

1074 
	`Àaveok
(
√ws¸
, 
FALSE
); \

1075 
	`wmove
(
√ws¸
, (
y
), (
x
)); \

1078 } 0)

	)

1080 #i‚de‡
NCURSES_NOMACROS


1086 
	#wgë°r
(
w
, 
s
Ë
	`wgën°r
(w, s, -1)

	)

1087 
	#gën°r
(
s
, 
n
Ë
	`wgën°r
(
°ds¸
, s,Ç)

	)

1089 
	#£âîm
(
ãrm
Ë
	`£tu±îm
—îm, 1, (*)0)

	)

1091 
	#fixãrm
(Ë
	`ª£t_¥og_mode
()

	)

1092 
	#ª£âîm
(Ë
	`ª£t_shñl_mode
()

	)

1093 
	#ßvëîm
(Ë
	`def_¥og_mode
()

	)

1094 
	#¸mode
(Ë
	`cbªak
()

	)

1095 
	#no¸mode
(Ë
	`nocbªak
()

	)

1096 
	#gëtmode
()

	)

1099 #i‡!
NCURSES_OPAQUE


1100 
	#gë©ås
(
wö
Ë
	`NCURSES_CAST
(, (wöË? (wö)->
_©ås
 : 
A_NORMAL
)

	)

1101 
	#gëcurx
(
wö
Ë((wöË? (wö)->
_curx
 : 
ERR
)

	)

1102 
	#gëcury
(
wö
Ë((wöË? (wö)->
_cury
 : 
ERR
)

	)

1103 
	#gëbegx
(
wö
Ë((wöË? (wö)->
_begx
 : 
ERR
)

	)

1104 
	#gëbegy
(
wö
Ë((wöË? (wö)->
_begy
 : 
ERR
)

	)

1105 
	#gëmaxx
(
wö
Ë((wöË? ((wö)->
_maxx
 + 1Ë: 
ERR
)

	)

1106 
	#gëmaxy
(
wö
Ë((wöË? ((wö)->
_maxy
 + 1Ë: 
ERR
)

	)

1107 
	#gë∑rx
(
wö
Ë((wöË? (wö)->
_∑rx
 : 
ERR
)

	)

1108 
	#gë∑ry
(
wö
Ë((wöË? (wö)->
_∑ry
 : 
ERR
)

	)

1111 
	#w°™dout
(
wö
Ë(
	`w©å£t
(wö,
A_STANDOUT
))

	)

1112 
	#w°™díd
(
wö
Ë(
	`w©å£t
(wö,
A_NORMAL
))

	)

1114 
	#w©å⁄
(
wö
,
©
Ë
	`w©å_⁄
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

1115 
	#w©åoff
(
wö
,
©
Ë
	`w©å_off
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

1117 #i‡!
NCURSES_OPAQUE


1118 #i‡
deföed
(
NCURSES_WIDECHAR
) && 0

1119 
	#w©å£t
(
wö
,
©
) ((win) \

1120 ? ((
wö
)->
_cﬁ‹
 = 
	`PAIR_NUMBER
(
©
), \

1121 (
wö
)->
_©ås
 = 
	`NCURSES_CAST
(
©å_t
, 
©
), \

1122 
OK
) \

1123 : 
ERR
)

	)

1125 
	#w©å£t
(
wö
,
©
) ((win) \

1126 ? ((
wö
)->
_©ås
 = 
	`NCURSES_CAST
(
©å_t
, 
©
), \

1127 
OK
) \

1128 : 
ERR
)

	)

1132 
	#s¸ﬁl
(
wö
Ë
	`ws¸l
(wö,1)

	)

1134 
	#touchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 1)

	)

1135 
	#touchlöe
(
wö
, 
s
, 
c
Ë
	`wtouch 
((wö), s, c, 1)

	)

1136 
	#u¡ouchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 0)

	)

1138 
	#box
(
wö
, 
v
, 
h
Ë
	`wb‹dî
(wö, v, v, h, h, 0, 0, 0, 0)

	)

1139 
	#b‹dî
(
ls
, 
rs
, 
ts
, 
bs
, 
é
, 
å
, 
bl
, 
br
Ë
	`wb‹dî
(
°ds¸
,Üs,Ñs,Ås, bs,Ål,År, bl, br)

	)

1140 
	#hlöe
(
ch
, 
n
Ë
	`whlöe
(
°ds¸
, ch,Ç)

	)

1141 
	#vlöe
(
ch
, 
n
Ë
	`wvlöe
(
°ds¸
, ch,Ç)

	)

1143 
	#wö°r
(
w
, 
s
Ë
	`wön°r
(w, s, -1)

	)

1144 
	#wöch°r
(
w
, 
s
Ë
	`wöchn°r
(w, s, -1)

	)

1145 
	#wös°r
(
w
, 
s
Ë
	`wö¢°r
(w, s, -1)

	)

1147 #i‡!
NCURSES_OPAQUE


1148 
	#ªdøwwö
(
wö
Ë
	`wªdøw 
(wö, 0, (wö)->
_maxy
+1)

	)

1151 
	#wadd°r
(
wö
,
°r
Ë
	`waddn°r
(wö,°r,-1)

	)

1152 
	#waddch°r
(
wö
,
°r
Ë
	`waddchn°r
(wö,°r,-1)

	)

1157 
	#COLOR_PAIR
(
n
Ë
	`NCURSES_BITS
“, 0)

	)

1158 
	#PAIR_NUMBER
(
a
Ë(
	`NCURSES_CAST
(,((NCURSES_CAST(,aË& 
A_COLOR
Ë>> 
NCURSES_ATTR_SHIFT
)))

	)

1164 
	#addch
(
ch
Ë
	`waddch
(
°ds¸
,ch)

	)

1165 
	#addchn°r
(
°r
,
n
Ë
	`waddchn°r
(
°ds¸
,°r,n)

	)

1166 
	#addch°r
(
°r
Ë
	`waddch°r
(
°ds¸
,°r)

	)

1167 
	#addn°r
(
°r
,
n
Ë
	`waddn°r
(
°ds¸
,°r,n)

	)

1168 
	#add°r
(
°r
Ë
	`waddn°r
(
°ds¸
,°r,-1)

	)

1169 
	#©åoff
(
©
Ë
	`w©åoff
(
°ds¸
,©)

	)

1170 
	#©å⁄
(
©
Ë
	`w©å⁄
(
°ds¸
,©)

	)

1171 
	#©å£t
(
©
Ë
	`w©å£t
(
°ds¸
,©)

	)

1172 
	#©å_gë
(
≠
,
˝
,
o
Ë
	`w©å_gë
(
°ds¸
,≠,˝,o)

	)

1173 
	#©å_off
(
a
,
o
Ë
	`w©å_off
(
°ds¸
,a,o)

	)

1174 
	#©å_⁄
(
a
,
o
Ë
	`w©å_⁄
(
°ds¸
,a,o)

	)

1175 
	#©å_£t
(
a
,
c
,
o
Ë
	`w©å_£t
(
°ds¸
,a,c,o)

	)

1176 
	#bkgd
(
ch
Ë
	`wbkgd
(
°ds¸
,ch)

	)

1177 
	#bkgd£t
(
ch
Ë
	`wbkgd£t
(
°ds¸
,ch)

	)

1178 
	#chg©
(
n
,
a
,
c
,
o
Ë
	`wchg©
(
°ds¸
,n,a,c,o)

	)

1179 
	#˛ór
(Ë
	`w˛ór
(
°ds¸
)

	)

1180 
	#˛πobŸ
(Ë
	`w˛πobŸ
(
°ds¸
)

	)

1181 
	#˛π€ﬁ
(Ë
	`w˛π€ﬁ
(
°ds¸
)

	)

1182 
	#cﬁ‹_£t
(
c
,
o
Ë
	`wcﬁ‹_£t
(
°ds¸
,c,o)

	)

1183 
	#dñch
(Ë
	`wdñch
(
°ds¸
)

	)

1184 
	#dñëñn
(Ë
	`wösdñ 
(
°ds¸
,-1)

	)

1185 
	#echoch¨
(
c
Ë
	`wechoch¨
(
°ds¸
,c)

	)

1186 
	#îa£
(Ë
	`wîa£
(
°ds¸
)

	)

1187 
	#gëch
(Ë
	`wgëch
(
°ds¸
)

	)

1188 
	#gë°r
(
°r
Ë
	`wgë°r
(
°ds¸
,°r)

	)

1189 
	#öch
(Ë
	`wöch
(
°ds¸
)

	)

1190 
	#öchn°r
(
s
,
n
Ë
	`wöchn°r
(
°ds¸
,s,n)

	)

1191 
	#öch°r
(
s
Ë
	`wöch°r
(
°ds¸
,s)

	)

1192 
	#ön°r
(
s
,
n
Ë
	`wön°r
(
°ds¸
,s,n)

	)

1193 
	#ösch
(
c
Ë
	`wösch
(
°ds¸
,c)

	)

1194 
	#ösdñ 
(
n
Ë
	`wösdñ 
(
°ds¸
,n)

	)

1195 
	#ö£π 
(Ë
	`wösdñ 
(
°ds¸
,1)

	)

1196 
	#ö¢°r
(
s
,
n
Ë
	`wö¢°r
(
°ds¸
,s,n)

	)

1197 
	#ös°r
(
s
Ë
	`wös°r
(
°ds¸
,s)

	)

1198 
	#ö°r
(
s
Ë
	`wö°r
(
°ds¸
,s)

	)

1199 
	#move
(
y
,
x
Ë
	`wmove
(
°ds¸
,y,x)

	)

1200 
	#ª‰esh
(Ë
	`wª‰esh
(
°ds¸
)

	)

1201 
	#s¸l
(
n
Ë
	`ws¸l
(
°ds¸
,n)

	)

1202 
	#£ts¸ªg
(
t
,
b
Ë
	`w£ts¸ªg
(
°ds¸
,t,b)

	)

1203 
	#°™díd
(Ë
	`w°™díd
(
°ds¸
)

	)

1204 
	#°™dout
(Ë
	`w°™dout
(
°ds¸
)

	)

1205 
	#timeout
(
dñay
Ë
	`wtimeout
(
°ds¸
,dñay)

	)

1206 
	#wdñëñn
(
wö
Ë
	`wösdñ 
(wö,-1)

	)

1207 
	#wö£π 
(
wö
Ë
	`wösdñ 
(wö,1)

	)

1213 
	#mvwaddch
(
wö
,
y
,
x
,
ch
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddch
(wö,ch))

	)

1214 
	#mvwaddchn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,n))

	)

1215 
	#mvwaddch°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,-1))

	)

1216 
	#mvwaddn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,n))

	)

1217 
	#mvwadd°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,-1))

	)

1218 
	#mvwdñch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wdñch
(wö))

	)

1219 
	#mvwchg©
(
wö
,
y
,
x
,
n
,
a
,
c
,
o
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wchg©
(wö,n,a,c,o))

	)

1220 
	#mvwgëch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgëch
(wö))

	)

1221 
	#mvwgën°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgën°r
(wö,°r,n))

	)

1222 
	#mvwgë°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë°r
(wö,°r))

	)

1223 
	#mvwhlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`whlöe
(wö,c,n))

	)

1224 
	#mvwöch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? 
	`NCURSES_CAST
(
chty≥
, ERRË: 
	`wöch
(wö))

	)

1225 
	#mvwöchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöchn°r
(wö,s,n))

	)

1226 
	#mvwöch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöch°r
(wö,s))

	)

1227 
	#mvwön°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wön°r
(wö,s,n))

	)

1228 
	#mvwösch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wösch
(wö,c))

	)

1229 
	#mvwö¢°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö¢°r
(wö,s,n))

	)

1230 
	#mvwös°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös°r
(wö,s))

	)

1231 
	#mvwö°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö°r
(wö,s))

	)

1232 
	#mvwvlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wvlöe
(wö,c,n))

	)

1234 
	#mvaddch
(
y
,
x
,
ch
Ë
	`mvwaddch
(
°ds¸
,y,x,ch)

	)

1235 
	#mvaddchn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddchn°r
(
°ds¸
,y,x,°r,n)

	)

1236 
	#mvaddch°r
(
y
,
x
,
°r
Ë
	`mvwaddch°r
(
°ds¸
,y,x,°r)

	)

1237 
	#mvaddn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddn°r
(
°ds¸
,y,x,°r,n)

	)

1238 
	#mvadd°r
(
y
,
x
,
°r
Ë
	`mvwadd°r
(
°ds¸
,y,x,°r)

	)

1239 
	#mvchg©
(
y
,
x
,
n
,
a
,
c
,
o
Ë
	`mvwchg©
(
°ds¸
,y,x,n,a,c,o)

	)

1240 
	#mvdñch
(
y
,
x
Ë
	`mvwdñch
(
°ds¸
,y,x)

	)

1241 
	#mvgëch
(
y
,
x
Ë
	`mvwgëch
(
°ds¸
,y,x)

	)

1242 
	#mvgën°r
(
y
,
x
,
°r
,
n
Ë
	`mvwgën°r
(
°ds¸
,y,x,°r,n)

	)

1243 
	#mvgë°r
(
y
,
x
,
°r
Ë
	`mvwgë°r
(
°ds¸
,y,x,°r)

	)

1244 
	#mvhlöe
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe
(
°ds¸
,y,x,c,n)

	)

1245 
	#mvöch
(
y
,
x
Ë
	`mvwöch
(
°ds¸
,y,x)

	)

1246 
	#mvöchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwöchn°r
(
°ds¸
,y,x,s,n)

	)

1247 
	#mvöch°r
(
y
,
x
,
s
Ë
	`mvwöch°r
(
°ds¸
,y,x,s)

	)

1248 
	#mvön°r
(
y
,
x
,
s
,
n
Ë
	`mvwön°r
(
°ds¸
,y,x,s,n)

	)

1249 
	#mvösch
(
y
,
x
,
c
Ë
	`mvwösch
(
°ds¸
,y,x,c)

	)

1250 
	#mvö¢°r
(
y
,
x
,
s
,
n
Ë
	`mvwö¢°r
(
°ds¸
,y,x,s,n)

	)

1251 
	#mvös°r
(
y
,
x
,
s
Ë
	`mvwös°r
(
°ds¸
,y,x,s)

	)

1252 
	#mvö°r
(
y
,
x
,
s
Ë
	`mvwö°r
(
°ds¸
,y,x,s)

	)

1253 
	#mvvlöe
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe
(
°ds¸
,y,x,c,n)

	)

1258 #i‡!
NCURSES_OPAQUE


1259 
	#gëbkgd
(
wö
Ë((wö)->
_bkgd
)

	)

1262 
	#¶k_©å_off
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©åoff
◊))

	)

1263 
	#¶k_©å_⁄
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©å⁄
◊))

	)

1265 #i‡!
NCURSES_OPAQUE


1266 #i‡
deföed
(
NCURSES_WIDECHAR
) && 0

1267 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = (◊Ë& ~
A_COLOR
), \

1268 (
wö
)->
_cﬁ‹
 = (
p
), \

1269 
OK
)

	)

1270 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!(*)0 && (*◊Ë(wö)->
_©ås
)), \

1271 ()((
p
Ë!(*)0 && (*’Ë()(
wö
)->
_cﬁ‹
)), \

1272 
OK
)

	)

1274 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = ((◊Ë& ~
A_COLOR
Ë| (
©å_t
)
	`COLOR_PAIR
’)), 
OK
)

	)

1275 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!(*)0 && (*◊Ë(wö)->
_©ås
)), \

1276 ()((
p
Ë!(*)0 && (*’Ë()
	`PAIR_NUMBER
((
wö
)->
_©ås
))), \

1277 
OK
)

	)

1287 
	#vw_¥ötw
 
vw¥ötw


	)

1288 
	#vw_sˇnw
 
vwsˇnw


	)

1294 
	#vssˇnf
(
a
,
b
,
c
Ë
	`_nc_vssˇnf
◊,b,c)

	)

1295 
NCURSES_EXPORT
(Ë
vssˇnf
(c⁄° *, c⁄° *, 
va_li°
);

1302 #i‡!
NCURSES_OPAQUE


1303 
	#is_˛óªd
(
wö
Ë((wöË? (wö)->
_˛ór
 : 
FALSE
)

	)

1304 
	#is_idcok
(
wö
Ë((wöË? (wö)->
_idcok
 : 
FALSE
)

	)

1305 
	#is_idlok
(
wö
Ë((wöË? (wö)->
_idlok
 : 
FALSE
)

	)

1306 
	#is_immedok
(
wö
Ë((wöË? (wö)->
_immed
 : 
FALSE
)

	)

1307 
	#is_key∑d
(
wö
Ë((wöË? (wö)->
_u£_key∑d
 : 
FALSE
)

	)

1308 
	#is_Àaveok
(
wö
Ë((wöË? (wö)->
_Àaveok
 : 
FALSE
)

	)

1309 
	#is_nodñay
(
wö
Ë((wöË? ((wö)->
_dñay
 =0Ë: 
FALSE
)

	)

1310 
	#is_nŸimeout
(
wö
Ë((wöË? (wö)->
_nŸimeout
 : 
FALSE
)

	)

1311 
	#is_∑d
(
wö
Ë((wöË? ((wö)->
_Êags
 & 
_ISPAD
Ë!0 : 
FALSE
)

	)

1312 
	#is_s¸ﬁlok
(
wö
Ë((wöË? (wö)->
_s¸ﬁl
 : 
FALSE
)

	)

1313 
	#is_subwö
(
wö
Ë((wöË? ((wö)->
_Êags
 & 
_SUBWIN
Ë!0 : 
FALSE
)

	)

1314 
	#is_syncok
(
wö
Ë((wöË? (wö)->
_sync
 : 
FALSE
)

	)

1315 
	#wgë∑ª¡
(
wö
Ë((wöË? (wö)->
_∑ª¡
 : 0)

	)

1316 
	#wgës¸ªg
(
wö
,
t
,
b
Ë((wöË? (*—Ë(wö)->
_ªgt›
, *(bË(wö)->
_ªgbŸtom
, 
OK
Ë: 
ERR
)

	)

1330 #i‡
NCURSES_REENTRANT


1332 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
curs¸
);

1333 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
√ws¸
);

1334 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
°ds¸
);

1335 
NCURSES_WRAPPED_VAR
(*, 
âyty≥
);

1336 
NCURSES_WRAPPED_VAR
(, 
COLORS
);

1337 
NCURSES_WRAPPED_VAR
(, 
COLOR_PAIRS
);

1338 
NCURSES_WRAPPED_VAR
(, 
COLS
);

1339 
NCURSES_WRAPPED_VAR
(, 
ESCDELAY
);

1340 
NCURSES_WRAPPED_VAR
(, 
LINES
);

1341 
NCURSES_WRAPPED_VAR
(, 
TABSIZE
);

1343 
	#curs¸
 
	`NCURSES_PUBLIC_VAR
(
	`curs¸
())

	)

1344 
	#√ws¸
 
	`NCURSES_PUBLIC_VAR
(
	`√ws¸
())

	)

1345 
	#°ds¸
 
	`NCURSES_PUBLIC_VAR
(
	`°ds¸
())

	)

1346 
	#âyty≥
 
	`NCURSES_PUBLIC_VAR
(
	`âyty≥
())

	)

1347 
	#COLORS
 
	`NCURSES_PUBLIC_VAR
(
	`COLORS
())

	)

1348 
	#COLOR_PAIRS
 
	`NCURSES_PUBLIC_VAR
(
	`COLOR_PAIRS
())

	)

1349 
	#COLS
 
	`NCURSES_PUBLIC_VAR
(
	`COLS
())

	)

1350 
	#ESCDELAY
 
	`NCURSES_PUBLIC_VAR
(
	`ESCDELAY
())

	)

1351 
	#LINES
 
	`NCURSES_PUBLIC_VAR
(
	`LINES
())

	)

1352 
	#TABSIZE
 
	`NCURSES_PUBLIC_VAR
(
	`TABSIZE
())

	)

1356 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
curs¸
;

1357 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
√ws¸
;

1358 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
°ds¸
;

1359 
NCURSES_EXPORT_VAR
(Ë
âyty≥
[];

1360 
NCURSES_EXPORT_VAR
(Ë
COLORS
;

1361 
NCURSES_EXPORT_VAR
(Ë
COLOR_PAIRS
;

1362 
NCURSES_EXPORT_VAR
(Ë
COLS
;

1363 
NCURSES_EXPORT_VAR
(Ë
ESCDELAY
;

1364 
NCURSES_EXPORT_VAR
(Ë
LINES
;

1365 
NCURSES_EXPORT_VAR
(Ë
TABSIZE
;

1381 
	#KEY_CODE_YES
 0400

	)

1382 
	#KEY_MIN
 0401

	)

1383 
	#KEY_BREAK
 0401

	)

1384 
	#KEY_SRESET
 0530

	)

1385 
	#KEY_RESET
 0531

	)

1389 
	#KEY_DOWN
 0402

	)

1390 
	#KEY_UP
 0403

	)

1391 
	#KEY_LEFT
 0404

	)

1392 
	#KEY_RIGHT
 0405

	)

1393 
	#KEY_HOME
 0406

	)

1394 
	#KEY_BACKSPACE
 0407

	)

1395 
	#KEY_F0
 0410

	)

1396 
	#KEY_F
(
n
Ë(
KEY_F0
+“)Ë

	)

1397 
	#KEY_DL
 0510

	)

1398 
	#KEY_IL
 0511

	)

1399 
	#KEY_DC
 0512

	)

1400 
	#KEY_IC
 0513

	)

1401 
	#KEY_EIC
 0514

	)

1402 
	#KEY_CLEAR
 0515

	)

1403 
	#KEY_EOS
 0516

	)

1404 
	#KEY_EOL
 0517

	)

1405 
	#KEY_SF
 0520

	)

1406 
	#KEY_SR
 0521

	)

1407 
	#KEY_NPAGE
 0522

	)

1408 
	#KEY_PPAGE
 0523

	)

1409 
	#KEY_STAB
 0524

	)

1410 
	#KEY_CTAB
 0525

	)

1411 
	#KEY_CATAB
 0526

	)

1412 
	#KEY_ENTER
 0527

	)

1413 
	#KEY_PRINT
 0532

	)

1414 
	#KEY_LL
 0533

	)

1415 
	#KEY_A1
 0534

	)

1416 
	#KEY_A3
 0535

	)

1417 
	#KEY_B2
 0536

	)

1418 
	#KEY_C1
 0537

	)

1419 
	#KEY_C3
 0540

	)

1420 
	#KEY_BTAB
 0541

	)

1421 
	#KEY_BEG
 0542

	)

1422 
	#KEY_CANCEL
 0543

	)

1423 
	#KEY_CLOSE
 0544

	)

1424 
	#KEY_COMMAND
 0545

	)

1425 
	#KEY_COPY
 0546

	)

1426 
	#KEY_CREATE
 0547

	)

1427 
	#KEY_END
 0550

	)

1428 
	#KEY_EXIT
 0551

	)

1429 
	#KEY_FIND
 0552

	)

1430 
	#KEY_HELP
 0553

	)

1431 
	#KEY_MARK
 0554

	)

1432 
	#KEY_MESSAGE
 0555

	)

1433 
	#KEY_MOVE
 0556

	)

1434 
	#KEY_NEXT
 0557

	)

1435 
	#KEY_OPEN
 0560

	)

1436 
	#KEY_OPTIONS
 0561

	)

1437 
	#KEY_PREVIOUS
 0562

	)

1438 
	#KEY_REDO
 0563

	)

1439 
	#KEY_REFERENCE
 0564

	)

1440 
	#KEY_REFRESH
 0565

	)

1441 
	#KEY_REPLACE
 0566

	)

1442 
	#KEY_RESTART
 0567

	)

1443 
	#KEY_RESUME
 0570

	)

1444 
	#KEY_SAVE
 0571

	)

1445 
	#KEY_SBEG
 0572

	)

1446 
	#KEY_SCANCEL
 0573

	)

1447 
	#KEY_SCOMMAND
 0574

	)

1448 
	#KEY_SCOPY
 0575

	)

1449 
	#KEY_SCREATE
 0576

	)

1450 
	#KEY_SDC
 0577

	)

1451 
	#KEY_SDL
 0600

	)

1452 
	#KEY_SELECT
 0601

	)

1453 
	#KEY_SEND
 0602

	)

1454 
	#KEY_SEOL
 0603

	)

1455 
	#KEY_SEXIT
 0604

	)

1456 
	#KEY_SFIND
 0605

	)

1457 
	#KEY_SHELP
 0606

	)

1458 
	#KEY_SHOME
 0607

	)

1459 
	#KEY_SIC
 0610

	)

1460 
	#KEY_SLEFT
 0611

	)

1461 
	#KEY_SMESSAGE
 0612

	)

1462 
	#KEY_SMOVE
 0613

	)

1463 
	#KEY_SNEXT
 0614

	)

1464 
	#KEY_SOPTIONS
 0615

	)

1465 
	#KEY_SPREVIOUS
 0616

	)

1466 
	#KEY_SPRINT
 0617

	)

1467 
	#KEY_SREDO
 0620

	)

1468 
	#KEY_SREPLACE
 0621

	)

1469 
	#KEY_SRIGHT
 0622

	)

1470 
	#KEY_SRSUME
 0623

	)

1471 
	#KEY_SSAVE
 0624

	)

1472 
	#KEY_SSUSPEND
 0625

	)

1473 
	#KEY_SUNDO
 0626

	)

1474 
	#KEY_SUSPEND
 0627

	)

1475 
	#KEY_UNDO
 0630

	)

1476 
	#KEY_MOUSE
 0631

	)

1477 
	#KEY_RESIZE
 0632

	)

1478 
	#KEY_EVENT
 0633

	)

1480 
	#KEY_MAX
 0777

	)

1490 #i‡
NCURSES_MOUSE_VERSION
 > 1

1491 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 5))

	)

1493 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 6))

	)

1496 
	#NCURSES_BUTTON_RELEASED
 001L

	)

1497 
	#NCURSES_BUTTON_PRESSED
 002L

	)

1498 
	#NCURSES_BUTTON_CLICKED
 004L

	)

1499 
	#NCURSES_DOUBLE_CLICKED
 010L

	)

1500 
	#NCURSES_TRIPLE_CLICKED
 020L

	)

1501 
	#NCURSES_RESERVED_EVENT
 040L

	)

1504 
	#BUTTON1_RELEASED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_RELEASED
)

	)

1505 
	#BUTTON1_PRESSED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_PRESSED
)

	)

1506 
	#BUTTON1_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_CLICKED
)

	)

1507 
	#BUTTON1_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_DOUBLE_CLICKED
)

	)

1508 
	#BUTTON1_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_TRIPLE_CLICKED
)

	)

1510 
	#BUTTON2_RELEASED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_RELEASED
)

	)

1511 
	#BUTTON2_PRESSED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_PRESSED
)

	)

1512 
	#BUTTON2_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_CLICKED
)

	)

1513 
	#BUTTON2_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_DOUBLE_CLICKED
)

	)

1514 
	#BUTTON2_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_TRIPLE_CLICKED
)

	)

1516 
	#BUTTON3_RELEASED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_RELEASED
)

	)

1517 
	#BUTTON3_PRESSED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_PRESSED
)

	)

1518 
	#BUTTON3_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_CLICKED
)

	)

1519 
	#BUTTON3_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_DOUBLE_CLICKED
)

	)

1520 
	#BUTTON3_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_TRIPLE_CLICKED
)

	)

1522 
	#BUTTON4_RELEASED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_RELEASED
)

	)

1523 
	#BUTTON4_PRESSED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_PRESSED
)

	)

1524 
	#BUTTON4_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_CLICKED
)

	)

1525 
	#BUTTON4_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_DOUBLE_CLICKED
)

	)

1526 
	#BUTTON4_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_TRIPLE_CLICKED
)

	)

1532 #i‡
NCURSES_MOUSE_VERSION
 > 1

1534 
	#BUTTON5_RELEASED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_RELEASED
)

	)

1535 
	#BUTTON5_PRESSED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_PRESSED
)

	)

1536 
	#BUTTON5_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_CLICKED
)

	)

1537 
	#BUTTON5_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_DOUBLE_CLICKED
)

	)

1538 
	#BUTTON5_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_TRIPLE_CLICKED
)

	)

1540 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(6, 0001L)

	)

1541 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(6, 0002L)

	)

1542 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(6, 0004L)

	)

1543 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(6, 0010L)

	)

1547 
	#BUTTON1_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_RESERVED_EVENT
)

	)

1548 
	#BUTTON2_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_RESERVED_EVENT
)

	)

1549 
	#BUTTON3_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_RESERVED_EVENT
)

	)

1550 
	#BUTTON4_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_RESERVED_EVENT
)

	)

1552 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(5, 0001L)

	)

1553 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(5, 0002L)

	)

1554 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(5, 0004L)

	)

1555 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(5, 0010L)

	)

1559 
	#ALL_MOUSE_EVENTS
 (
REPORT_MOUSE_POSITION
 - 1)

	)

1562 
	#BUTTON_RELEASE
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 001))

	)

1563 
	#BUTTON_PRESS
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 002))

	)

1564 
	#BUTTON_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 004))

	)

1565 
	#BUTTON_DOUBLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 010))

	)

1566 
	#BUTTON_TRIPLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 020))

	)

1567 
	#BUTTON_RESERVED_EVENT
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 040))

	)

1571 
	gid
;

1572 
	gx
, 
	gy
, 
	gz
;

1573 
mmask_t
 
	gb°©e
;

1575 
	tMEVENT
;

1577 
NCURSES_EXPORT
(
boﬁ
Ë
has_mou£
();

1578 
NCURSES_EXPORT
(Ë
gëmou£
 (
MEVENT
 *);

1579 
NCURSES_EXPORT
(Ë
ungëmou£
 (
MEVENT
 *);

1580 
NCURSES_EXPORT
(
mmask_t
Ë
mou£mask
 (mmask_t, mmask_t *);

1581 
NCURSES_EXPORT
(
boﬁ
Ë
wí˛o£
 (c⁄° 
WINDOW
 *, , );

1582 
NCURSES_EXPORT
(Ë
mou£öãrvÆ
 ();

1583 
NCURSES_EXPORT
(
boﬁ
Ë
wmou£_åafo
 (c⁄° 
WINDOW
*, *, *, bool);

1584 
NCURSES_EXPORT
(
boﬁ
Ë
mou£_åafo
 (*, *, bool);

1586 #i‡
NCURSES_SP_FUNCS


1587 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_mou£
Ë(
SCREEN
*);

1588 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
gëmou£
Ë(
SCREEN
*, 
MEVENT
 *);

1589 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungëmou£
Ë(
SCREEN
*,
MEVENT
 *);

1590 
NCURSES_EXPORT
(
mmask_t
Ë
NCURSES_SP_NAME
(
mou£mask
Ë(
SCREEN
*, mmask_t, mmask_t *);

1591 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
mou£öãrvÆ
Ë(
SCREEN
*, );

1594 
	#mou£_åafo
(
y
,
x
,
to_s¸ìn
Ë
	`wmou£_åafo
(
°ds¸
,y,x,to_s¸ìn)

	)

1598 
NCURSES_EXPORT
(Ë
m˝röt
 (*, );

1599 
NCURSES_EXPORT
(Ë
has_key
 ();

1601 #i‡
NCURSES_SP_FUNCS


1602 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
has_key
Ë(
SCREEN
*, );

1603 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
m˝röt
Ë(
SCREEN
*, *, );

1608 
NCURSES_EXPORT
(Ë
_åa˚f
 (c⁄° *, ...Ë
GCC_PRINTFLIKE
(1,2);

1609 
NCURSES_EXPORT
(Ë
_åa˚dump
 (c⁄° *, 
WINDOW
 *);

1610 
NCURSES_EXPORT
(*Ë
_åa˚©å
 (
©å_t
);

1611 
NCURSES_EXPORT
(*Ë
_åa˚©å2
 (, 
chty≥
);

1612 
NCURSES_EXPORT
(*Ë
_nc_åa˚bôs
 ();

1613 
NCURSES_EXPORT
(*Ë
_åa˚ch¨
 ();

1614 
NCURSES_EXPORT
(*Ë
_åa˚chty≥
 (
chty≥
);

1615 
NCURSES_EXPORT
(*Ë
_åa˚chty≥2
 (, 
chty≥
);

1616 #ifde‡
NCURSES_WIDECHAR


1617 
	#_åa˚ch_t
 
_åa˚cch¨_t


	)

1618 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t
 (c⁄° 
cch¨_t
 *);

1619 
	#_åa˚ch_t2
 
_åa˚cch¨_t2


	)

1620 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t2
 (, c⁄° 
cch¨_t
 *);

1622 
	#_åa˚ch_t
 
_åa˚chty≥


	)

1623 
	#_åa˚ch_t2
 
_åa˚chty≥2


	)

1625 
NCURSES_EXPORT
(*Ë
_åa˚mou£
 (c⁄° 
MEVENT
 *);

1626 
NCURSES_EXPORT
(Ë
åa˚
 (const );

1629 
	#TRACE_DISABLE
 0x0000

	)

1630 
	#TRACE_TIMES
 0x0001

	)

1631 
	#TRACE_TPUTS
 0x0002

	)

1632 
	#TRACE_UPDATE
 0x0004

	)

1633 
	#TRACE_MOVE
 0x0008

	)

1634 
	#TRACE_CHARPUT
 0x0010

	)

1635 
	#TRACE_ORDINARY
 0x001F

	)

1636 
	#TRACE_CALLS
 0x0020

	)

1637 
	#TRACE_VIRTPUT
 0x0040

	)

1638 
	#TRACE_IEVENT
 0x0080

	)

1639 
	#TRACE_BITS
 0x0100

	)

1640 
	#TRACE_ICALLS
 0x0200

	)

1641 
	#TRACE_CCALLS
 0x0400

	)

1642 
	#TRACE_DATABASE
 0x0800

	)

1643 
	#TRACE_ATTRS
 0x1000

	)

1645 
	#TRACE_SHIFT
 13

	)

1646 
	#TRACE_MAXIMUM
 ((1 << 
TRACE_SHIFT
Ë- 1Ë

	)

1648 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

1649 
NCURSES_EXPORT_VAR
(Ë
_nc_›timize_íabÀ
;

1650 
NCURSES_EXPORT
(c⁄° *Ë
_nc_visbuf
 (const *);

1651 
	#OPTIMIZE_MVCUR
 0x01

	)

1652 
	#OPTIMIZE_HASHMAP
 0x02

	)

1653 
	#OPTIMIZE_SCROLL
 0x04

	)

1654 
	#OPTIMIZE_ALL
 0xf‡

	)

1657 
	~<un˘æ.h
>

1659 #ifde‡
__˝lu•lus


1661 #i‚de‡
NCURSES_NOMACROS


1664 #unde‡
box


1665 #unde‡
˛ór


1666 #unde‡
îa£


1667 #unde‡
move


1668 #unde‡
ª‰esh


	@/usr/include/ncurses_dll.h

30 #i‚de‡
NCURSES_DLL_H_ö˛


31 
	#NCURSES_DLL_H_ö˛
 1

	)

37 
	#NCURSES_PUBLIC_VAR
(
«me
Ë
_nc_
##
	)
name

38 
	#NCURSES_WRAPPED_VAR
(
ty≥
,
«me
Ëty≥ 
	`NCURSES_PUBLIC_VAR
“ame)()

	)

44 #unde‡
NCURSES_DLL


45 
	#NCURSES_STATIC


	)

47 #i‡
deföed
(
__CYGWIN__
Ë|| deföed(
__MINGW32__
)

48 #i‡
deföed
(
NCURSES_DLL
)

49 #i‡
deföed
(
NCURSES_STATIC
)

50 #unde‡
NCURSES_STATIC


53 #unde‡
NCURSES_IMPEXP


54 #unde‡
NCURSES_API


55 #unde‡
NCURSES_EXPORT


56 #unde‡
NCURSES_EXPORT_VAR


57 #i‡
deföed
(
NCURSES_DLL
)

59 
	#NCURSES_IMPEXP
 
	`__de˛•ec
(
dŒexp‹t
)

	)

60 #ñi‡
deföed
(
NCURSES_STATIC
)

62 
	#NCURSES_IMPEXP


	)

65 
	#NCURSES_IMPEXP
 
	`__de˛•ec
(
dŒimp‹t
)

	)

67 
	#NCURSES_API
 
__cde˛


	)

68 
	#NCURSES_EXPORT
(
ty≥
Ë
NCURSES_IMPEXP
Åy≥ 
NCURSES_API


	)

69 
	#NCURSES_EXPORT_VAR
(
ty≥
Ë
NCURSES_IMPEXP
 
	)
type

73 #i‡!
deföed
(
NCURSES_IMPEXP
)

74 
	#NCURSES_IMPEXP


	)

76 #i‡!
deföed
(
NCURSES_API
)

77 
	#NCURSES_API


	)

79 #i‡!
deföed
(
NCURSES_EXPORT
)

80 
	#NCURSES_EXPORT
(
ty≥
Ë
NCURSES_IMPEXP
Åy≥ 
NCURSES_API


	)

82 #i‡!
deföed
(
NCURSES_EXPORT_VAR
)

83 
	#NCURSES_EXPORT_VAR
(
ty≥
Ë
NCURSES_IMPEXP
 
	)
type

	@/usr/include/ncursesw/ncurses.h

37 #i‚de‡
__NCURSES_H


38 
	#__NCURSES_H


	)

40 
	#CURSES
 1

	)

41 
	#CURSES_H
 1

	)

44 
	#NCURSES_VERSION_MAJOR
 5

	)

45 
	#NCURSES_VERSION_MINOR
 9

	)

46 
	#NCURSES_VERSION_PATCH
 20110404

	)

49 #unde‡
NCURSES_VERSION


50 
	#NCURSES_VERSION
 "5.9"

	)

55 
	#NCURSES_MOUSE_VERSION
 1

	)

60 
	~<ncur£sw/ncur£s_dŒ.h
>

65 #i‚de‡
NCURSES_ENABLE_STDBOOL_H


66 
	#NCURSES_ENABLE_STDBOOL_H
 1

	)

73 #ifde‡
NCURSES_NOMACROS


74 #i‚de‡
NCURSES_ATTR_T


75 
	#NCURSES_ATTR_T
 
©å_t


	)

79 #i‚de‡
NCURSES_ATTR_T


80 
	#NCURSES_ATTR_T
 

	)

87 #unde‡
NCURSES_CONST


88 
	#NCURSES_CONST
 c⁄°

	)

90 #unde‡
NCURSES_INLINE


91 
	#NCURSES_INLINE
 
ölöe


	)

96 #unde‡
NCURSES_COLOR_T


97 
	#NCURSES_COLOR_T
 

	)

102 #i‚de‡
NCURSES_OPAQUE


103 
	#NCURSES_OPAQUE
 0

	)

109 #i‚de‡
NCURSES_REENTRANT


110 
	#NCURSES_REENTRANT
 0

	)

116 #unde‡
NCURSES_INTEROP_FUNCS


117 
	#NCURSES_INTEROP_FUNCS
 0

	)

122 #unde‡
NCURSES_SIZE_T


123 
	#NCURSES_SIZE_T
 

	)

128 #unde‡
NCURSES_TPARM_VARARGS


129 
	#NCURSES_TPARM_VARARGS
 1

	)

136 #unde‡
NCURSES_CH_T


137 
	#NCURSES_CH_T
 
cch¨_t


	)

139 #i‡0 && 
deföed
(
_LP64
)

140 
	tchty≥
;

141 
	tmmask_t
;

143 
	tchty≥
;

144 
	tmmask_t
;

150 
	~<°dio.h
>

156 #unde‡
NCURSES_WIDECHAR


157 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
Ë|| deföed(
_XPG5
)

158 
	#NCURSES_WIDECHAR


	)

161 
	~<°d¨g.h
>

162 #ifde‡
NCURSES_WIDECHAR


163 
	~<°ddef.h
>

178 #unde‡
TRUE


179 
	#TRUE
 1

	)

181 #unde‡
FALSE


182 
	#FALSE
 0

	)

184 
	tNCURSES_BOOL
;

186 #i‡
deföed
(
__˝lu•lus
)

189 
	#NCURSES_BOOL
 
boﬁ


	)

193 #i‡
NCURSES_ENABLE_STDBOOL_H


194 
	~<°dboﬁ.h
>

196 
	#NCURSES_BOOL
 
boﬁ


	)

199 #unde‡
boﬁ


200 
	#boﬁ
 
NCURSES_BOOL


	)

205 #ifde‡
__˝lu•lus


207 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë
°©ic_ˇ°
<ty≥>(vÆue)

	)

209 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë—y≥)(vÆue)

	)

216 
	#WA_ATTRIBUTES
 
A_ATTRIBUTES


	)

217 
	#WA_NORMAL
 
A_NORMAL


	)

218 
	#WA_STANDOUT
 
A_STANDOUT


	)

219 
	#WA_UNDERLINE
 
A_UNDERLINE


	)

220 
	#WA_REVERSE
 
A_REVERSE


	)

221 
	#WA_BLINK
 
A_BLINK


	)

222 
	#WA_DIM
 
A_DIM


	)

223 
	#WA_BOLD
 
A_BOLD


	)

224 
	#WA_ALTCHARSET
 
A_ALTCHARSET


	)

225 
	#WA_INVIS
 
A_INVIS


	)

226 
	#WA_PROTECT
 
A_PROTECT


	)

227 
	#WA_HORIZONTAL
 
A_HORIZONTAL


	)

228 
	#WA_LEFT
 
A_LEFT


	)

229 
	#WA_LOW
 
A_LOW


	)

230 
	#WA_RIGHT
 
A_RIGHT


	)

231 
	#WA_TOP
 
A_TOP


	)

232 
	#WA_VERTICAL
 
A_VERTICAL


	)

235 
	#COLOR_BLACK
 0

	)

236 
	#COLOR_RED
 1

	)

237 
	#COLOR_GREEN
 2

	)

238 
	#COLOR_YELLOW
 3

	)

239 
	#COLOR_BLUE
 4

	)

240 
	#COLOR_MAGENTA
 5

	)

241 
	#COLOR_CYAN
 6

	)

242 
	#COLOR_WHITE
 7

	)

246 #i‡0 || 
NCURSES_REENTRANT


247 
NCURSES_WRAPPED_VAR
(
chty≥
*, 
acs_m≠
);

248 
	#acs_m≠
 
	`NCURSES_PUBLIC_VAR
(
	`acs_m≠
())

	)

250 
NCURSES_EXPORT_VAR
(
chty≥
Ë
acs_m≠
[];

253 
	#NCURSES_ACS
(
c
Ë(
acs_m≠
[
	`NCURSES_CAST
(,c)])

	)

256 
	#ACS_ULCORNER
 
	`NCURSES_ACS
('l'Ë

	)

257 
	#ACS_LLCORNER
 
	`NCURSES_ACS
('m'Ë

	)

258 
	#ACS_URCORNER
 
	`NCURSES_ACS
('k'Ë

	)

259 
	#ACS_LRCORNER
 
	`NCURSES_ACS
('j'Ë

	)

260 
	#ACS_LTEE
 
	`NCURSES_ACS
('t'Ë

	)

261 
	#ACS_RTEE
 
	`NCURSES_ACS
('u'Ë

	)

262 
	#ACS_BTEE
 
	`NCURSES_ACS
('v'Ë

	)

263 
	#ACS_TTEE
 
	`NCURSES_ACS
('w'Ë

	)

264 
	#ACS_HLINE
 
	`NCURSES_ACS
('q'Ë

	)

265 
	#ACS_VLINE
 
	`NCURSES_ACS
('x'Ë

	)

266 
	#ACS_PLUS
 
	`NCURSES_ACS
('n'Ë

	)

267 
	#ACS_S1
 
	`NCURSES_ACS
('o'Ë

	)

268 
	#ACS_S9
 
	`NCURSES_ACS
('s'Ë

	)

269 
	#ACS_DIAMOND
 
	`NCURSES_ACS
('`'Ë

	)

270 
	#ACS_CKBOARD
 
	`NCURSES_ACS
('a'Ë

	)

271 
	#ACS_DEGREE
 
	`NCURSES_ACS
('f'Ë

	)

272 
	#ACS_PLMINUS
 
	`NCURSES_ACS
('g'Ë

	)

273 
	#ACS_BULLET
 
	`NCURSES_ACS
('~'Ë

	)

275 
	#ACS_LARROW
 
	`NCURSES_ACS
(','Ë

	)

276 
	#ACS_RARROW
 
	`NCURSES_ACS
('+'Ë

	)

277 
	#ACS_DARROW
 
	`NCURSES_ACS
('.'Ë

	)

278 
	#ACS_UARROW
 
	`NCURSES_ACS
('-'Ë

	)

279 
	#ACS_BOARD
 
	`NCURSES_ACS
('h'Ë

	)

280 
	#ACS_LANTERN
 
	`NCURSES_ACS
('i'Ë

	)

281 
	#ACS_BLOCK
 
	`NCURSES_ACS
('0'Ë

	)

287 
	#ACS_S3
 
	`NCURSES_ACS
('p'Ë

	)

288 
	#ACS_S7
 
	`NCURSES_ACS
('r'Ë

	)

289 
	#ACS_LEQUAL
 
	`NCURSES_ACS
('y'Ë

	)

290 
	#ACS_GEQUAL
 
	`NCURSES_ACS
('z'Ë

	)

291 
	#ACS_PI
 
	`NCURSES_ACS
('{'Ë

	)

292 
	#ACS_NEQUAL
 
	`NCURSES_ACS
('|'Ë

	)

293 
	#ACS_STERLING
 
	`NCURSES_ACS
('}'Ë

	)

301 
	#ACS_BSSB
 
ACS_ULCORNER


	)

302 
	#ACS_SSBB
 
ACS_LLCORNER


	)

303 
	#ACS_BBSS
 
ACS_URCORNER


	)

304 
	#ACS_SBBS
 
ACS_LRCORNER


	)

305 
	#ACS_SBSS
 
ACS_RTEE


	)

306 
	#ACS_SSSB
 
ACS_LTEE


	)

307 
	#ACS_SSBS
 
ACS_BTEE


	)

308 
	#ACS_BSSS
 
ACS_TTEE


	)

309 
	#ACS_BSBS
 
ACS_HLINE


	)

310 
	#ACS_SBSB
 
ACS_VLINE


	)

311 
	#ACS_SSSS
 
ACS_PLUS


	)

313 #unde‡
ERR


314 
	#ERR
 (-1)

	)

316 #unde‡
OK


317 
	#OK
 (0)

	)

320 
	#_SUBWIN
 0x01

	)

321 
	#_ENDLINE
 0x02

	)

322 
	#_FULLWIN
 0x04

	)

323 
	#_SCROLLWIN
 0x08

	)

324 
	#_ISPAD
 0x10

	)

325 
	#_HASMOVED
 0x20

	)

326 
	#_WRAPPED
 0x40

	)

332 
	#_NOCHANGE
 -1

	)

338 
	#_NEWINDEX
 -1

	)

340 
s¸ìn
 
	tSCREEN
;

341 
_wö_°
 
	tWINDOW
;

343 
chty≥
 
	t©å_t
;

345 #ifde‡
NCURSES_WIDECHAR


348 #ifde‡
mbÀn


349 #unde‡
mbÀn


351 
	~<libutf8.h
>

355 
	~<wch¨.h
>

359 
	twch¨_t1
;

363 
	twöt_t1
;

372 
	#CCHARW_MAX
 5

	)

375 
©å_t
 
	g©å
;

376 
wch¨_t
 
	gch¨s
[
CCHARW_MAX
];

378 #unde‡
NCURSES_EXT_COLORS


379 
	#NCURSES_EXT_COLORS
 20110404

	)

380 
	gext_cﬁ‹
;

383 
	tcch¨_t
;

387 #i‡!
NCURSES_OPAQUE


388 
	gld©
;

390 
	s_wö_°


392 
NCURSES_SIZE_T
 
	g_cury
, 
	g_curx
;

395 
NCURSES_SIZE_T
 
	g_maxy
, 
	g_maxx
;

396 
NCURSES_SIZE_T
 
	g_begy
, 
	g_begx
;

398 
	g_Êags
;

401 
©å_t
 
	g_©ås
;

402 
chty≥
 
	g_bkgd
;

405 
boﬁ
 
	g_nŸimeout
;

406 
boﬁ
 
	g_˛ór
;

407 
boﬁ
 
	g_Àaveok
;

408 
boﬁ
 
	g_s¸ﬁl
;

409 
boﬁ
 
	g_idlok
;

410 
boﬁ
 
	g_idcok
;

411 
boﬁ
 
	g_immed
;

412 
boﬁ
 
	g_sync
;

413 
boﬁ
 
	g_u£_key∑d
;

414 
	g_dñay
;

416 
ld©
 *
	g_löe
;

419 
NCURSES_SIZE_T
 
	g_ªgt›
;

420 
NCURSES_SIZE_T
 
	g_ªgbŸtom
;

423 
	g_∑rx
;

424 
	g_∑ry
;

425 
WINDOW
 *
	g_∑ª¡
;

428 
	spd©


430 
NCURSES_SIZE_T
 
	g_∑d_y
, 
	g_∑d_x
;

431 
NCURSES_SIZE_T
 
	g_∑d_t›
, 
	g_∑d_À·
;

432 
NCURSES_SIZE_T
 
	g_∑d_bŸtom
, 
	g_∑d_right
;

433 } 
	g_∑d
;

435 
NCURSES_SIZE_T
 
	g_yoff£t
;

437 #ifde‡
NCURSES_WIDECHAR


438 
cch¨_t
 
	g_bkg∫d
;

440 
	g_cﬁ‹
;

450 #ifde‡
NCURSES_WGETCH_EVENTS


451 #i‡!
deföed
(
__BEOS__
Ë|| deföed(
__HAIKU__
)

453 
	#NCURSES_EVENT_VERSION
 1

	)

459 
	#_NC_EVENT_TIMEOUT_MSEC
 1

	)

460 
	#_NC_EVENT_FILE
 2

	)

461 
	#_NC_EVENT_FILE_READABLE
 2

	)

463 
	#_NC_EVENT_FILE_WRITABLE
 4

	)

464 
	#_NC_EVENT_FILE_EXCEPTION
 8

	)

469 
	gty≥
;

472 
	gtimeout_m£c
;

475 
	gÊags
;

476 
	gfd
;

477 
	gªsu…
;

478 } 
	g„v
;

479 } 
	gd©a
;

480 } 
	t_nc_evít
;

484 
	gcou¡
;

485 
	gªsu…_Êags
;

486 
_nc_evít
 *
	gevíts
[1];

487 } 
	t_nc_evíéi°
;

489 
NCURSES_EXPORT
(Ë
wgëch_evíts
 (
WINDOW
 *, 
_nc_evíéi°
 *);

490 
NCURSES_EXPORT
(Ë
wgën°r_evíts
 (
WINDOW
 *,*,,
_nc_evíéi°
 *);

502 #i‡!(
deföed
(
__GNUC__
Ë|| deföed(
__GNUG__
Ë|| deföed(
__©åibuã__
))

503 
	#__©åibuã__
(
p
Ë

	)

514 #i‚de‡
GCC_PRINTFLIKE


515 #i‡
deföed
(
GCC_PRINTF
Ë&& !deföed(
¥ötf
)

516 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,fmt,v¨)))

	)

518 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë

	)

522 #i‚de‡
GCC_SCANFLIKE


523 #i‡
deföed
(
GCC_SCANF
Ë&& !deföed(
sˇnf
)

524 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
sˇnf
,fmt,v¨)))

	)

526 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë

	)

530 #i‚def 
GCC_NORETURN


531 
	#GCC_NORETURN


	)

534 #i‚def 
GCC_UNUSED


535 
	#GCC_UNUSED


	)

542 (*
	gNCURSES_OUTC
)();

551 
NCURSES_EXPORT
(Ë
addch
 (c⁄° 
chty≥
);

552 
NCURSES_EXPORT
(Ë
addchn°r
 (c⁄° 
chty≥
 *, );

553 
NCURSES_EXPORT
(Ë
addch°r
 (c⁄° 
chty≥
 *);

554 
NCURSES_EXPORT
(Ë
addn°r
 (const *, );

555 
NCURSES_EXPORT
(Ë
add°r
 (const *);

556 
NCURSES_EXPORT
(Ë
©åoff
 (
NCURSES_ATTR_T
);

557 
NCURSES_EXPORT
(Ë
©å⁄
 (
NCURSES_ATTR_T
);

558 
NCURSES_EXPORT
(Ë
©å£t
 (
NCURSES_ATTR_T
);

559 
NCURSES_EXPORT
(Ë
©å_gë
 (
©å_t
 *, *, *);

560 
NCURSES_EXPORT
(Ë
©å_off
 (
©å_t
, *);

561 
NCURSES_EXPORT
(Ë
©å_⁄
 (
©å_t
, *);

562 
NCURSES_EXPORT
(Ë
©å_£t
 (
©å_t
, , *);

563 
NCURSES_EXPORT
(Ë
baudøã
 ();

564 
NCURSES_EXPORT
(Ë
bìp
 ();

565 
NCURSES_EXPORT
(Ë
bkgd
 (
chty≥
);

566 
NCURSES_EXPORT
(Ë
bkgd£t
 (
chty≥
);

567 
NCURSES_EXPORT
(Ë
b‹dî
 (
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

568 
NCURSES_EXPORT
(Ë
box
 (
WINDOW
 *, 
chty≥
, chtype);

569 
NCURSES_EXPORT
(
boﬁ
Ë
ˇn_ch™ge_cﬁ‹
 ();

570 
NCURSES_EXPORT
(Ë
cbªak
 ();

571 
NCURSES_EXPORT
(Ë
chg©
 (, 
©å_t
, , const *);

572 
NCURSES_EXPORT
(Ë
˛ór
 ();

573 
NCURSES_EXPORT
(Ë
˛órok
 (
WINDOW
 *,
boﬁ
);

574 
NCURSES_EXPORT
(Ë
˛πobŸ
 ();

575 
NCURSES_EXPORT
(Ë
˛π€ﬁ
 ();

576 
NCURSES_EXPORT
(Ë
cﬁ‹_c⁄ã¡
 (,*,*,*);

577 
NCURSES_EXPORT
(Ë
cﬁ‹_£t
 (,*);

578 
NCURSES_EXPORT
(Ë
COLOR_PAIR
 ();

579 
NCURSES_EXPORT
(Ë
c›ywö
 (c⁄° 
WINDOW
*,WINDOW*,,,,,,,);

580 
NCURSES_EXPORT
(Ë
curs_£t
 ();

581 
NCURSES_EXPORT
(Ë
def_¥og_mode
 ();

582 
NCURSES_EXPORT
(Ë
def_shñl_mode
 ();

583 
NCURSES_EXPORT
(Ë
dñay_ouçut
 ();

584 
NCURSES_EXPORT
(Ë
dñch
 ();

585 
NCURSES_EXPORT
(Ë
dñs¸ìn
 (
SCREEN
 *);

586 
NCURSES_EXPORT
(Ë
dñwö
 (
WINDOW
 *);

587 
NCURSES_EXPORT
(Ë
dñëñn
 ();

588 
NCURSES_EXPORT
(
WINDOW
 *Ë
dîwö
 (WINDOW *,,,,);

589 
NCURSES_EXPORT
(Ë
doupd©e
 ();

590 
NCURSES_EXPORT
(
WINDOW
 *Ë
dupwö
 (WINDOW *);

591 
NCURSES_EXPORT
(Ë
echo
 ();

592 
NCURSES_EXPORT
(Ë
echoch¨
 (c⁄° 
chty≥
);

593 
NCURSES_EXPORT
(Ë
îa£
 ();

594 
NCURSES_EXPORT
(Ë
ídwö
 ();

595 
NCURSES_EXPORT
(Ë
îa£ch¨
 ();

596 
NCURSES_EXPORT
(Ë
fûãr
 ();

597 
NCURSES_EXPORT
(Ë
Êash
 ();

598 
NCURSES_EXPORT
(Ë
Êushöp
 ();

599 
NCURSES_EXPORT
(
chty≥
Ë
gëbkgd
 (
WINDOW
 *);

600 
NCURSES_EXPORT
(Ë
gëch
 ();

601 
NCURSES_EXPORT
(Ë
gën°r
 (*, );

602 
NCURSES_EXPORT
(Ë
gë°r
 (*);

603 
NCURSES_EXPORT
(
WINDOW
 *Ë
gëwö
 (
FILE
 *);

604 
NCURSES_EXPORT
(Ë
hÆfdñay
 ();

605 
NCURSES_EXPORT
(
boﬁ
Ë
has_cﬁ‹s
 ();

606 
NCURSES_EXPORT
(
boﬁ
Ë
has_ic
 ();

607 
NCURSES_EXPORT
(
boﬁ
Ë
has_û
 ();

608 
NCURSES_EXPORT
(Ë
hlöe
 (
chty≥
, );

609 
NCURSES_EXPORT
(Ë
idcok
 (
WINDOW
 *, 
boﬁ
);

610 
NCURSES_EXPORT
(Ë
idlok
 (
WINDOW
 *, 
boﬁ
);

611 
NCURSES_EXPORT
(Ë
immedok
 (
WINDOW
 *, 
boﬁ
);

612 
NCURSES_EXPORT
(
chty≥
Ë
öch
 ();

613 
NCURSES_EXPORT
(Ë
öchn°r
 (
chty≥
 *, );

614 
NCURSES_EXPORT
(Ë
öch°r
 (
chty≥
 *);

615 
NCURSES_EXPORT
(
WINDOW
 *Ë
öôs¸
 ();

616 
NCURSES_EXPORT
(Ë
öô_cﬁ‹
 (,,,);

617 
NCURSES_EXPORT
(Ë
öô_∑ú
 (,,);

618 
NCURSES_EXPORT
(Ë
ön°r
 (*, );

619 
NCURSES_EXPORT
(Ë
ösch
 (
chty≥
);

620 
NCURSES_EXPORT
(Ë
ösdñ 
 ();

621 
NCURSES_EXPORT
(Ë
ö£π 
 ();

622 
NCURSES_EXPORT
(Ë
ö¢°r
 (const *, );

623 
NCURSES_EXPORT
(Ë
ös°r
 (const *);

624 
NCURSES_EXPORT
(Ë
ö°r
 (*);

625 
NCURSES_EXPORT
(Ë
öåÊush
 (
WINDOW
 *,
boﬁ
);

626 
NCURSES_EXPORT
(
boﬁ
Ë
i£ndwö
 ();

627 
NCURSES_EXPORT
(
boﬁ
Ë
is_löëouched
 (
WINDOW
 *,);

628 
NCURSES_EXPORT
(
boﬁ
Ë
is_wötouched
 (
WINDOW
 *);

629 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key«me
 ();

630 
NCURSES_EXPORT
(Ë
key∑d
 (
WINDOW
 *,
boﬁ
);

631 
NCURSES_EXPORT
(Ë
kûlch¨
 ();

632 
NCURSES_EXPORT
(Ë
Àaveok
 (
WINDOW
 *,
boﬁ
);

633 
NCURSES_EXPORT
(*Ë
l⁄g«me
 ();

634 
NCURSES_EXPORT
(Ë
mëa
 (
WINDOW
 *,
boﬁ
);

635 
NCURSES_EXPORT
(Ë
move
 (, );

636 
NCURSES_EXPORT
(Ë
mvaddch
 (, , c⁄° 
chty≥
);

637 
NCURSES_EXPORT
(Ë
mvaddchn°r
 (, , c⁄° 
chty≥
 *, );

638 
NCURSES_EXPORT
(Ë
mvaddch°r
 (, , c⁄° 
chty≥
 *);

639 
NCURSES_EXPORT
(Ë
mvaddn°r
 (, , const *, );

640 
NCURSES_EXPORT
(Ë
mvadd°r
 (, , const *);

641 
NCURSES_EXPORT
(Ë
mvchg©
 (, , , 
©å_t
, , const *);

642 
NCURSES_EXPORT
(Ë
mvcur
 (,,,);

643 
NCURSES_EXPORT
(Ë
mvdñch
 (, );

644 
NCURSES_EXPORT
(Ë
mvdîwö
 (
WINDOW
 *, , );

645 
NCURSES_EXPORT
(Ë
mvgëch
 (, );

646 
NCURSES_EXPORT
(Ë
mvgën°r
 (, , *, );

647 
NCURSES_EXPORT
(Ë
mvgë°r
 (, , *);

648 
NCURSES_EXPORT
(Ë
mvhlöe
 (, , 
chty≥
, );

649 
NCURSES_EXPORT
(
chty≥
Ë
mvöch
 (, );

650 
NCURSES_EXPORT
(Ë
mvöchn°r
 (, , 
chty≥
 *, );

651 
NCURSES_EXPORT
(Ë
mvöch°r
 (, , 
chty≥
 *);

652 
NCURSES_EXPORT
(Ë
mvön°r
 (, , *, );

653 
NCURSES_EXPORT
(Ë
mvösch
 (, , 
chty≥
);

654 
NCURSES_EXPORT
(Ë
mvö¢°r
 (, , const *, );

655 
NCURSES_EXPORT
(Ë
mvös°r
 (, , const *);

656 
NCURSES_EXPORT
(Ë
mvö°r
 (, , *);

657 
NCURSES_EXPORT
(Ë
mv¥ötw
 (,, const *,...)

658 
GCC_PRINTFLIKE
(3,4);

659 
NCURSES_EXPORT
(Ë
mvsˇnw
 (,, 
NCURSES_CONST
 *,...)

660 
GCC_SCANFLIKE
(3,4);

661 
NCURSES_EXPORT
(Ë
mvvlöe
 (, , 
chty≥
, );

662 
NCURSES_EXPORT
(Ë
mvwaddch
 (
WINDOW
 *, , , c⁄° 
chty≥
);

663 
NCURSES_EXPORT
(Ë
mvwaddchn°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *, );

664 
NCURSES_EXPORT
(Ë
mvwaddch°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *);

665 
NCURSES_EXPORT
(Ë
mvwaddn°r
 (
WINDOW
 *, , , const *, );

666 
NCURSES_EXPORT
(Ë
mvwadd°r
 (
WINDOW
 *, , , const *);

667 
NCURSES_EXPORT
(Ë
mvwchg©
 (
WINDOW
 *, , , , 
©å_t
, , const *);

668 
NCURSES_EXPORT
(Ë
mvwdñch
 (
WINDOW
 *, , );

669 
NCURSES_EXPORT
(Ë
mvwgëch
 (
WINDOW
 *, , );

670 
NCURSES_EXPORT
(Ë
mvwgën°r
 (
WINDOW
 *, , , *, );

671 
NCURSES_EXPORT
(Ë
mvwgë°r
 (
WINDOW
 *, , , *);

672 
NCURSES_EXPORT
(Ë
mvwhlöe
 (
WINDOW
 *, , , 
chty≥
, );

673 
NCURSES_EXPORT
(Ë
mvwö
 (
WINDOW
 *,,);

674 
NCURSES_EXPORT
(
chty≥
Ë
mvwöch
 (
WINDOW
 *, , );

675 
NCURSES_EXPORT
(Ë
mvwöchn°r
 (
WINDOW
 *, , , 
chty≥
 *, );

676 
NCURSES_EXPORT
(Ë
mvwöch°r
 (
WINDOW
 *, , , 
chty≥
 *);

677 
NCURSES_EXPORT
(Ë
mvwön°r
 (
WINDOW
 *, , , *, );

678 
NCURSES_EXPORT
(Ë
mvwösch
 (
WINDOW
 *, , , 
chty≥
);

679 
NCURSES_EXPORT
(Ë
mvwö¢°r
 (
WINDOW
 *, , , const *, );

680 
NCURSES_EXPORT
(Ë
mvwös°r
 (
WINDOW
 *, , , const *);

681 
NCURSES_EXPORT
(Ë
mvwö°r
 (
WINDOW
 *, , , *);

682 
NCURSES_EXPORT
(Ë
mvw¥ötw
 (
WINDOW
*,,, const *,...)

683 
GCC_PRINTFLIKE
(4,5);

684 
NCURSES_EXPORT
(Ë
mvwsˇnw
 (
WINDOW
 *,,, 
NCURSES_CONST
 *,...)

685 
GCC_SCANFLIKE
(4,5);

686 
NCURSES_EXPORT
(Ë
mvwvlöe
 (
WINDOW
 *,, , 
chty≥
, );

687 
NCURSES_EXPORT
(Ë
«pms
 ();

688 
NCURSES_EXPORT
(
WINDOW
 *Ë
√w∑d
 (,);

689 
NCURSES_EXPORT
(
SCREEN
 *Ë
√wãrm
 (
NCURSES_CONST
 *,
FILE
 *,FILE *);

690 
NCURSES_EXPORT
(
WINDOW
 *Ë
√wwö
 (,,,);

691 
NCURSES_EXPORT
(Ë
∆
 ();

692 
NCURSES_EXPORT
(Ë
nocbªak
 ();

693 
NCURSES_EXPORT
(Ë
nodñay
 (
WINDOW
 *,
boﬁ
);

694 
NCURSES_EXPORT
(Ë
n€cho
 ();

695 
NCURSES_EXPORT
(Ë
n⁄l
 ();

696 
NCURSES_EXPORT
(Ë
noqiÊush
 ();

697 
NCURSES_EXPORT
(Ë
n‹aw
 ();

698 
NCURSES_EXPORT
(Ë
nŸimeout
 (
WINDOW
 *,
boﬁ
);

699 
NCURSES_EXPORT
(Ë
ovîœy
 (c⁄° 
WINDOW
*,WINDOW *);

700 
NCURSES_EXPORT
(Ë
ovîwrôe
 (c⁄° 
WINDOW
*,WINDOW *);

701 
NCURSES_EXPORT
(Ë
∑ú_c⁄ã¡
 (,*,*);

702 
NCURSES_EXPORT
(Ë
PAIR_NUMBER
 ();

703 
NCURSES_EXPORT
(Ë
≥choch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

704 
NCURSES_EXPORT
(Ë
≤ouåe‰esh
 (
WINDOW
*,,,,,,);

705 
NCURSES_EXPORT
(Ë
¥e‰esh
 (
WINDOW
 *,,,,,,);

706 
NCURSES_EXPORT
(Ë
¥ötw
 (const *,...)

707 
GCC_PRINTFLIKE
(1,2);

708 
NCURSES_EXPORT
(Ë
putwö
 (
WINDOW
 *, 
FILE
 *);

709 
NCURSES_EXPORT
(Ë
qiÊush
 ();

710 
NCURSES_EXPORT
(Ë
øw
 ();

711 
NCURSES_EXPORT
(Ë
ªdøwwö
 (
WINDOW
 *);

712 
NCURSES_EXPORT
(Ë
ª‰esh
 ();

713 
NCURSES_EXPORT
(Ë
ª£ây
 ();

714 
NCURSES_EXPORT
(Ë
ª£t_¥og_mode
 ();

715 
NCURSES_EXPORT
(Ë
ª£t_shñl_mode
 ();

716 
NCURSES_EXPORT
(Ë
rùofÊöe
 (, (*)(
WINDOW
 *, ));

717 
NCURSES_EXPORT
(Ë
ßvëty
 ();

718 
NCURSES_EXPORT
(Ë
sˇnw
 (
NCURSES_CONST
 *,...)

719 
GCC_SCANFLIKE
(1,2);

720 
NCURSES_EXPORT
(Ë
s¸_dump
 (const *);

721 
NCURSES_EXPORT
(Ë
s¸_öô
 (const *);

722 
NCURSES_EXPORT
(Ë
s¸l
 ();

723 
NCURSES_EXPORT
(Ë
s¸ﬁl
 (
WINDOW
 *);

724 
NCURSES_EXPORT
(Ë
s¸ﬁlok
 (
WINDOW
 *,
boﬁ
);

725 
NCURSES_EXPORT
(Ë
s¸_ª°‹e
 (const *);

726 
NCURSES_EXPORT
(Ë
s¸_£t
 (const *);

727 
NCURSES_EXPORT
(Ë
£ts¸ªg
 (,);

728 
NCURSES_EXPORT
(
SCREEN
 *Ë
£t_ãrm
 (SCREEN *);

729 
NCURSES_EXPORT
(Ë
¶k_©åoff
 (c⁄° 
chty≥
);

730 
NCURSES_EXPORT
(Ë
¶k_©å_off
 (c⁄° 
©å_t
, *);

731 
NCURSES_EXPORT
(Ë
¶k_©å⁄
 (c⁄° 
chty≥
);

732 
NCURSES_EXPORT
(Ë
¶k_©å_⁄
 (
©å_t
,*);

733 
NCURSES_EXPORT
(Ë
¶k_©å£t
 (c⁄° 
chty≥
);

734 
NCURSES_EXPORT
(
©å_t
Ë
¶k_©å
 ();

735 
NCURSES_EXPORT
(Ë
¶k_©å_£t
 (c⁄° 
©å_t
,,*);

736 
NCURSES_EXPORT
(Ë
¶k_˛ór
 ();

737 
NCURSES_EXPORT
(Ë
¶k_cﬁ‹
 ();

738 
NCURSES_EXPORT
(Ë
¶k_öô
 ();

739 
NCURSES_EXPORT
(*Ë
¶k_œbñ
 ();

740 
NCURSES_EXPORT
(Ë
¶k_nouåe‰esh
 ();

741 
NCURSES_EXPORT
(Ë
¶k_ª‰esh
 ();

742 
NCURSES_EXPORT
(Ë
¶k_ª°‹e
 ();

743 
NCURSES_EXPORT
(Ë
¶k_£t
 (,const *,);

744 
NCURSES_EXPORT
(Ë
¶k_touch
 ();

745 
NCURSES_EXPORT
(Ë
°™dout
 ();

746 
NCURSES_EXPORT
(Ë
°™díd
 ();

747 
NCURSES_EXPORT
(Ë
°¨t_cﬁ‹
 ();

748 
NCURSES_EXPORT
(
WINDOW
 *Ë
sub∑d
 (WINDOW *, , , , );

749 
NCURSES_EXPORT
(
WINDOW
 *Ë
subwö
 (WINDOW *, , , , );

750 
NCURSES_EXPORT
(Ë
syncok
 (
WINDOW
 *, 
boﬁ
);

751 
NCURSES_EXPORT
(
chty≥
Ë
ãrm©ås
 ();

752 
NCURSES_EXPORT
(*Ë
ãrm«me
 ();

753 
NCURSES_EXPORT
(Ë
timeout
 ();

754 
NCURSES_EXPORT
(Ë
touchlöe
 (
WINDOW
 *, , );

755 
NCURSES_EXPORT
(Ë
touchwö
 (
WINDOW
 *);

756 
NCURSES_EXPORT
(Ë
ty≥ahód
 ();

757 
NCURSES_EXPORT
(Ë
ungëch
 ();

758 
NCURSES_EXPORT
(Ë
u¡ouchwö
 (
WINDOW
 *);

759 
NCURSES_EXPORT
(Ë
u£_ív
 (
boﬁ
);

760 
NCURSES_EXPORT
(Ë
vid©å
 (
chty≥
);

761 
NCURSES_EXPORT
(Ë
vidputs
 (
chty≥
, 
NCURSES_OUTC
);

762 
NCURSES_EXPORT
(Ë
vlöe
 (
chty≥
, );

763 
NCURSES_EXPORT
(Ë
vw¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

764 
NCURSES_EXPORT
(Ë
vw_¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

765 
NCURSES_EXPORT
(Ë
vwsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

766 
NCURSES_EXPORT
(Ë
vw_sˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

767 
NCURSES_EXPORT
(Ë
waddch
 (
WINDOW
 *, c⁄° 
chty≥
);

768 
NCURSES_EXPORT
(Ë
waddchn°r
 (
WINDOW
 *,c⁄° 
chty≥
 *,);

769 
NCURSES_EXPORT
(Ë
waddch°r
 (
WINDOW
 *,c⁄° 
chty≥
 *);

770 
NCURSES_EXPORT
(Ë
waddn°r
 (
WINDOW
 *,const *,);

771 
NCURSES_EXPORT
(Ë
wadd°r
 (
WINDOW
 *,const *);

772 
NCURSES_EXPORT
(Ë
w©å⁄
 (
WINDOW
 *, );

773 
NCURSES_EXPORT
(Ë
w©åoff
 (
WINDOW
 *, );

774 
NCURSES_EXPORT
(Ë
w©å£t
 (
WINDOW
 *, );

775 
NCURSES_EXPORT
(Ë
w©å_gë
 (
WINDOW
 *, 
©å_t
 *, *, *);

776 
NCURSES_EXPORT
(Ë
w©å_⁄
 (
WINDOW
 *, 
©å_t
, *);

777 
NCURSES_EXPORT
(Ë
w©å_off
 (
WINDOW
 *, 
©å_t
, *);

778 
NCURSES_EXPORT
(Ë
w©å_£t
 (
WINDOW
 *, 
©å_t
, , *);

779 
NCURSES_EXPORT
(Ë
wbkgd
 (
WINDOW
 *, 
chty≥
);

780 
NCURSES_EXPORT
(Ë
wbkgd£t
 (
WINDOW
 *,
chty≥
);

781 
NCURSES_EXPORT
(Ë
wb‹dî
 (
WINDOW
 *,
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

782 
NCURSES_EXPORT
(Ë
wchg©
 (
WINDOW
 *, , 
©å_t
, , const *);

783 
NCURSES_EXPORT
(Ë
w˛ór
 (
WINDOW
 *);

784 
NCURSES_EXPORT
(Ë
w˛πobŸ
 (
WINDOW
 *);

785 
NCURSES_EXPORT
(Ë
w˛π€ﬁ
 (
WINDOW
 *);

786 
NCURSES_EXPORT
(Ë
wcﬁ‹_£t
 (
WINDOW
*,,*);

787 
NCURSES_EXPORT
(Ë
wcursyncup
 (
WINDOW
 *);

788 
NCURSES_EXPORT
(Ë
wdñch
 (
WINDOW
 *);

789 
NCURSES_EXPORT
(Ë
wdñëñn
 (
WINDOW
 *);

790 
NCURSES_EXPORT
(Ë
wechoch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

791 
NCURSES_EXPORT
(Ë
wîa£
 (
WINDOW
 *);

792 
NCURSES_EXPORT
(Ë
wgëch
 (
WINDOW
 *);

793 
NCURSES_EXPORT
(Ë
wgën°r
 (
WINDOW
 *,*,);

794 
NCURSES_EXPORT
(Ë
wgë°r
 (
WINDOW
 *, *);

795 
NCURSES_EXPORT
(Ë
whlöe
 (
WINDOW
 *, 
chty≥
, );

796 
NCURSES_EXPORT
(
chty≥
Ë
wöch
 (
WINDOW
 *);

797 
NCURSES_EXPORT
(Ë
wöchn°r
 (
WINDOW
 *, 
chty≥
 *, );

798 
NCURSES_EXPORT
(Ë
wöch°r
 (
WINDOW
 *, 
chty≥
 *);

799 
NCURSES_EXPORT
(Ë
wön°r
 (
WINDOW
 *, *, );

800 
NCURSES_EXPORT
(Ë
wösch
 (
WINDOW
 *, 
chty≥
);

801 
NCURSES_EXPORT
(Ë
wösdñ 
 (
WINDOW
 *,);

802 
NCURSES_EXPORT
(Ë
wö£π 
 (
WINDOW
 *);

803 
NCURSES_EXPORT
(Ë
wö¢°r
 (
WINDOW
 *, const *,);

804 
NCURSES_EXPORT
(Ë
wös°r
 (
WINDOW
 *, const *);

805 
NCURSES_EXPORT
(Ë
wö°r
 (
WINDOW
 *, *);

806 
NCURSES_EXPORT
(Ë
wmove
 (
WINDOW
 *,,);

807 
NCURSES_EXPORT
(Ë
wnouåe‰esh
 (
WINDOW
 *);

808 
NCURSES_EXPORT
(Ë
w¥ötw
 (
WINDOW
 *, const *,...)

809 
GCC_PRINTFLIKE
(2,3);

810 
NCURSES_EXPORT
(Ë
wªdøw 
 (
WINDOW
 *,,);

811 
NCURSES_EXPORT
(Ë
wª‰esh
 (
WINDOW
 *);

812 
NCURSES_EXPORT
(Ë
wsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,...)

813 
GCC_SCANFLIKE
(2,3);

814 
NCURSES_EXPORT
(Ë
ws¸l
 (
WINDOW
 *,);

815 
NCURSES_EXPORT
(Ë
w£ts¸ªg
 (
WINDOW
 *,,);

816 
NCURSES_EXPORT
(Ë
w°™dout
 (
WINDOW
 *);

817 
NCURSES_EXPORT
(Ë
w°™díd
 (
WINDOW
 *);

818 
NCURSES_EXPORT
(Ë
wsyncdown
 (
WINDOW
 *);

819 
NCURSES_EXPORT
(Ë
wsyncup
 (
WINDOW
 *);

820 
NCURSES_EXPORT
(Ë
wtimeout
 (
WINDOW
 *,);

821 
NCURSES_EXPORT
(Ë
wtouch 
 (
WINDOW
 *,,,);

822 
NCURSES_EXPORT
(Ë
wvlöe
 (
WINDOW
 *,
chty≥
,);

827 
NCURSES_EXPORT
(Ë
tigëÊag
 (
NCURSES_CONST
 *);

828 
NCURSES_EXPORT
(Ë
tigënum
 (
NCURSES_CONST
 *);

829 
NCURSES_EXPORT
(*Ë
tigë°r
 (
NCURSES_CONST
 *);

830 
NCURSES_EXPORT
(Ë
puç
 (const *);

832 #i‡
NCURSES_TPARM_VARARGS


833 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ...);

835 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ,,,,,,,,);

836 
NCURSES_EXPORT
(*Ë
ç¨m_v¨¨gs
 (
NCURSES_CONST
 *, ...);

839 
NCURSES_EXPORT
(*Ë
tù¨m
 (const *, ...);

844 
NCURSES_EXPORT
(Ë
gë©ås
 (c⁄° 
WINDOW
 *);

845 
NCURSES_EXPORT
(Ë
gëcurx
 (c⁄° 
WINDOW
 *);

846 
NCURSES_EXPORT
(Ë
gëcury
 (c⁄° 
WINDOW
 *);

847 
NCURSES_EXPORT
(Ë
gëbegx
 (c⁄° 
WINDOW
 *);

848 
NCURSES_EXPORT
(Ë
gëbegy
 (c⁄° 
WINDOW
 *);

849 
NCURSES_EXPORT
(Ë
gëmaxx
 (c⁄° 
WINDOW
 *);

850 
NCURSES_EXPORT
(Ë
gëmaxy
 (c⁄° 
WINDOW
 *);

851 
NCURSES_EXPORT
(Ë
gë∑rx
 (c⁄° 
WINDOW
 *);

852 
NCURSES_EXPORT
(Ë
gë∑ry
 (c⁄° 
WINDOW
 *);

857 #i‚de‡
NCURSES_WIDECHAR


858 
	#vid_©å
(
a
,
∑ú
,
›ts
Ë
	`vid©å
◊)

	)

865 #unde‡
NCURSES_EXT_FUNCS


866 
	#NCURSES_EXT_FUNCS
 20110404

	)

867 (*
	gNCURSES_WINDOW_CB
)(
	tWINDOW
 *, *);

868 (*
	gNCURSES_SCREEN_CB
)(
	tSCREEN
 *, *);

869 
NCURSES_EXPORT
(
boﬁ
Ë
is_ãrm_ªsized
 (, );

870 
NCURSES_EXPORT
(*Ë
keybound
 (, );

871 
NCURSES_EXPORT
(c⁄° *Ë
cur£s_vîsi⁄
 ();

872 
NCURSES_EXPORT
(Ë
assume_deÁu…_cﬁ‹s
 (, );

873 
NCURSES_EXPORT
(Ë
deföe_key
 (const *, );

874 
NCURSES_EXPORT
(Ë
gë_escdñay
 ();

875 
NCURSES_EXPORT
(Ë
key_deföed
 (const *);

876 
NCURSES_EXPORT
(Ë
keyok
 (, 
boﬁ
);

877 
NCURSES_EXPORT
(Ë
ªsize_ãrm
 (, );

878 
NCURSES_EXPORT
(Ë
ªsizëîm
 (, );

879 
NCURSES_EXPORT
(Ë
£t_escdñay
 ();

880 
NCURSES_EXPORT
(Ë
£t_èbsize
 ();

881 
NCURSES_EXPORT
(Ë
u£_deÁu…_cﬁ‹s
 ();

882 
NCURSES_EXPORT
(Ë
u£_exãnded_«mes
 (
boﬁ
);

883 
NCURSES_EXPORT
(Ë
u£_Àgacy_codög
 ();

884 
NCURSES_EXPORT
(Ë
u£_s¸ìn
 (
SCREEN
 *, 
NCURSES_SCREEN_CB
, *);

885 
NCURSES_EXPORT
(Ë
u£_wödow
 (
WINDOW
 *, 
NCURSES_WINDOW_CB
, *);

886 
NCURSES_EXPORT
(Ë
wªsize
 (
WINDOW
 *, , );

887 
NCURSES_EXPORT
(Ë
nofûãr
();

893 
NCURSES_EXPORT
(
WINDOW
 *Ë
wgë∑ª¡
 (const WINDOW *);

894 
NCURSES_EXPORT
(
boﬁ
Ë
is_˛óªd
 (c⁄° 
WINDOW
 *);

895 
NCURSES_EXPORT
(
boﬁ
Ë
is_idcok
 (c⁄° 
WINDOW
 *);

896 
NCURSES_EXPORT
(
boﬁ
Ë
is_idlok
 (c⁄° 
WINDOW
 *);

897 
NCURSES_EXPORT
(
boﬁ
Ë
is_immedok
 (c⁄° 
WINDOW
 *);

898 
NCURSES_EXPORT
(
boﬁ
Ë
is_key∑d
 (c⁄° 
WINDOW
 *);

899 
NCURSES_EXPORT
(
boﬁ
Ë
is_Àaveok
 (c⁄° 
WINDOW
 *);

900 
NCURSES_EXPORT
(
boﬁ
Ë
is_nodñay
 (c⁄° 
WINDOW
 *);

901 
NCURSES_EXPORT
(
boﬁ
Ë
is_nŸimeout
 (c⁄° 
WINDOW
 *);

902 
NCURSES_EXPORT
(
boﬁ
Ë
is_∑d
 (c⁄° 
WINDOW
 *);

903 
NCURSES_EXPORT
(
boﬁ
Ë
is_s¸ﬁlok
 (c⁄° 
WINDOW
 *);

904 
NCURSES_EXPORT
(
boﬁ
Ë
is_subwö
 (c⁄° 
WINDOW
 *);

905 
NCURSES_EXPORT
(
boﬁ
Ë
is_syncok
 (c⁄° 
WINDOW
 *);

906 
NCURSES_EXPORT
(Ë
wgës¸ªg
 (c⁄° 
WINDOW
 *, *, *);

909 
	#cur£s_vîsi⁄
(Ë
NCURSES_VERSION


	)

917 #unde‡
NCURSES_SP_FUNCS


918 
	#NCURSES_SP_FUNCS
 20110404

	)

919 
	#NCURSES_SP_NAME
(
«me
Ë«me##
_•


	)

922 
	#NCURSES_SP_OUTC
 
	`NCURSES_SP_NAME
(
NCURSES_OUTC
)

	)

923 (*
	gNCURSES_SP_OUTC
)(
	tSCREEN
*, );

925 
NCURSES_EXPORT
(
SCREEN
 *Ë
√w_¥es¸
 ();

927 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
baudøã
Ë(
SCREEN
*);

928 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
bìp
Ë(
SCREEN
*);

929 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
ˇn_ch™ge_cﬁ‹
Ë(
SCREEN
*);

930 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
cbªak
Ë(
SCREEN
*);

931 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
curs_£t
Ë(
SCREEN
*, );

932 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
cﬁ‹_c⁄ã¡
Ë(
SCREEN
*, , *, *, *);

933 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
def_¥og_mode
Ë(
SCREEN
*);

934 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
def_shñl_mode
Ë(
SCREEN
*);

935 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
dñay_ouçut
Ë(
SCREEN
*, );

936 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
doupd©e
Ë(
SCREEN
*);

937 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
echo
Ë(
SCREEN
*);

938 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ídwö
Ë(
SCREEN
*);

939 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
îa£ch¨
Ë(
SCREEN
*);

940 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
fûãr
Ë(
SCREEN
*);

941 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
Êash
Ë(
SCREEN
*);

942 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
Êushöp
Ë(
SCREEN
*);

943 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
gëwö
Ë(
SCREEN
*, 
FILE
 *);

944 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
hÆfdñay
Ë(
SCREEN
*, );

945 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_cﬁ‹s
Ë(
SCREEN
*);

946 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_ic
Ë(
SCREEN
*);

947 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_û
Ë(
SCREEN
*);

948 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_cﬁ‹
Ë(
SCREEN
*, , , , );

949 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_∑ú
Ë(
SCREEN
*, , , );

950 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öåÊush
Ë(
SCREEN
*, 
WINDOW
*, 
boﬁ
);

951 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
i£ndwö
Ë(
SCREEN
*);

952 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
NCURSES_SP_NAME
(
key«me
Ë(
SCREEN
*, );

953 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
kûlch¨
Ë(
SCREEN
*);

954 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
l⁄g«me
Ë(
SCREEN
*);

955 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
mvcur
Ë(
SCREEN
*, , , , );

956 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
«pms
Ë(
SCREEN
*, );

957 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
√w∑d
Ë(
SCREEN
*, , );

958 
NCURSES_EXPORT
(
SCREEN
 *Ë
NCURSES_SP_NAME
(
√wãrm
Ë(SCREEN*, 
NCURSES_CONST
 *, 
FILE
 *, FILE *);

959 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
√wwö
Ë(
SCREEN
*, , , , );

960 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
∆
Ë(
SCREEN
*);

961 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
nocbªak
Ë(
SCREEN
*);

962 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n€cho
Ë(
SCREEN
*);

963 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n⁄l
Ë(
SCREEN
*);

964 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
noqiÊush
Ë(
SCREEN
*);

965 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n‹aw
Ë(
SCREEN
*);

966 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
∑ú_c⁄ã¡
Ë(
SCREEN
*, , *, *);

967 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
qiÊush
Ë(
SCREEN
*);

968 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
øw
Ë(
SCREEN
*);

969 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£t_¥og_mode
Ë(
SCREEN
*);

970 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£t_shñl_mode
Ë(
SCREEN
*);

971 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£ây
Ë(
SCREEN
*);

972 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
rùofÊöe
Ë(
SCREEN
*, , (*)(
WINDOW
 *, ));

973 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ßvëty
Ë(
SCREEN
*);

974 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_öô
Ë(
SCREEN
*, const *);

975 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_ª°‹e
Ë(
SCREEN
*, const *);

976 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_£t
Ë(
SCREEN
*, const *);

977 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©åoff
Ë(
SCREEN
*, c⁄° 
chty≥
);

978 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å⁄
Ë(
SCREEN
*, c⁄° 
chty≥
);

979 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å£t
Ë(
SCREEN
*, c⁄° 
chty≥
);

980 
NCURSES_EXPORT
(
©å_t
Ë
NCURSES_SP_NAME
(
¶k_©å
Ë(
SCREEN
*);

981 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å_£t
Ë(
SCREEN
*, c⁄° 
©å_t
, , *);

982 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_˛ór
Ë(
SCREEN
*);

983 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_cﬁ‹
Ë(
SCREEN
*, );

984 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_öô
Ë(
SCREEN
*, );

985 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
¶k_œbñ
Ë(
SCREEN
*, );

986 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_nouåe‰esh
Ë(
SCREEN
*);

987 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_ª‰esh
Ë(
SCREEN
*);

988 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_ª°‹e
Ë(
SCREEN
*);

989 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_£t
Ë(
SCREEN
*, , const *, );

990 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_touch
Ë(
SCREEN
*);

991 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
°¨t_cﬁ‹
Ë(
SCREEN
*);

992 
NCURSES_EXPORT
(
chty≥
Ë
NCURSES_SP_NAME
(
ãrm©ås
Ë(
SCREEN
*);

993 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
ãrm«me
Ë(
SCREEN
*);

994 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ty≥ahód
Ë(
SCREEN
*, );

995 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungëch
Ë(
SCREEN
*, );

996 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_ív
Ë(
SCREEN
*, 
boﬁ
);

997 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vid©å
Ë(
SCREEN
*, 
chty≥
);

998 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vidputs
Ë(
SCREEN
*, 
chty≥
, 
NCURSES_SP_OUTC
);

1000 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
keybound
Ë(
SCREEN
*, , );

1001 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
assume_deÁu…_cﬁ‹s
Ë(
SCREEN
*, , );

1002 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
deföe_key
Ë(
SCREEN
*, const *, );

1003 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
gë_escdñay
Ë(
SCREEN
*);

1004 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
is_ãrm_ªsized
Ë(
SCREEN
*, , );

1005 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
key_deföed
Ë(
SCREEN
*, const *);

1006 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
keyok
Ë(
SCREEN
*, , 
boﬁ
);

1007 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
nofûãr
Ë(
SCREEN
*);

1008 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ªsize_ãrm
Ë(
SCREEN
*, , );

1009 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ªsizëîm
Ë(
SCREEN
*, , );

1010 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
£t_escdñay
Ë(
SCREEN
*, );

1011 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
£t_èbsize
Ë(
SCREEN
*, );

1012 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_deÁu…_cﬁ‹s
Ë(
SCREEN
*);

1013 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_Àgacy_codög
Ë(
SCREEN
*, );

1016 #unde‡
NCURSES_SP_FUNCS


1017 
	#NCURSES_SP_FUNCS
 0

	)

1018 
	#NCURSES_SP_NAME
(
«me
Ë
	)
name

1019 
	#NCURSES_SP_OUTC
 
NCURSES_OUTC


	)

1024 
	#NCURSES_ATTR_SHIFT
 8

	)

1025 
	#NCURSES_BITS
(
mask
,
shi·
Ë((maskË<< ((shi·Ë+ 
NCURSES_ATTR_SHIFT
))

	)

1027 
	#A_NORMAL
 (1UL - 1UL)

	)

1028 
	#A_ATTRIBUTES
 
	`NCURSES_BITS
(~(1UL - 1UL),0)

	)

1029 
	#A_CHARTEXT
 (
	`NCURSES_BITS
(1UL,0Ë- 1UL)

	)

1030 
	#A_COLOR
 
	`NCURSES_BITS
(((1ULË<< 8Ë- 1UL,0)

	)

1031 
	#A_STANDOUT
 
	`NCURSES_BITS
(1UL,8)

	)

1032 
	#A_UNDERLINE
 
	`NCURSES_BITS
(1UL,9)

	)

1033 
	#A_REVERSE
 
	`NCURSES_BITS
(1UL,10)

	)

1034 
	#A_BLINK
 
	`NCURSES_BITS
(1UL,11)

	)

1035 
	#A_DIM
 
	`NCURSES_BITS
(1UL,12)

	)

1036 
	#A_BOLD
 
	`NCURSES_BITS
(1UL,13)

	)

1037 
	#A_ALTCHARSET
 
	`NCURSES_BITS
(1UL,14)

	)

1038 
	#A_INVIS
 
	`NCURSES_BITS
(1UL,15)

	)

1039 
	#A_PROTECT
 
	`NCURSES_BITS
(1UL,16)

	)

1040 
	#A_HORIZONTAL
 
	`NCURSES_BITS
(1UL,17)

	)

1041 
	#A_LEFT
 
	`NCURSES_BITS
(1UL,18)

	)

1042 
	#A_LOW
 
	`NCURSES_BITS
(1UL,19)

	)

1043 
	#A_RIGHT
 
	`NCURSES_BITS
(1UL,20)

	)

1044 
	#A_TOP
 
	`NCURSES_BITS
(1UL,21)

	)

1045 
	#A_VERTICAL
 
	`NCURSES_BITS
(1UL,22)

	)

1057 
	#gëyx
(
wö
,
y
,
x
Ë(y = 
	`gëcury
(wö), x = 
	`gëcurx
(wö))

	)

1058 
	#gëbegyx
(
wö
,
y
,
x
Ë(y = 
	`gëbegy
(wö), x = 
	`gëbegx
(wö))

	)

1059 
	#gëmaxyx
(
wö
,
y
,
x
Ë(y = 
	`gëmaxy
(wö), x = 
	`gëmaxx
(wö))

	)

1060 
	#gë∑ryx
(
wö
,
y
,
x
Ë(y = 
	`gë∑ry
(wö), x = 
	`gë∑rx
(wö))

	)

1062 
	#gësyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

1063 i‡(
	`is_Àaveok
(
√ws¸
)) \

1064 (
y
Ë(
x
) = -1; \

1066 
	`gëyx
(
√ws¸
,(
y
), (
x
)); \

1068 } 0)

	)

1070 
	#£tsyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

1071 i‡((
y
Ë=-1 && (
x
) == -1) \

1072 
	`Àaveok
(
√ws¸
, 
TRUE
); \

1074 
	`Àaveok
(
√ws¸
, 
FALSE
); \

1075 
	`wmove
(
√ws¸
, (
y
), (
x
)); \

1078 } 0)

	)

1080 #i‚de‡
NCURSES_NOMACROS


1086 
	#wgë°r
(
w
, 
s
Ë
	`wgën°r
(w, s, -1)

	)

1087 
	#gën°r
(
s
, 
n
Ë
	`wgën°r
(
°ds¸
, s,Ç)

	)

1089 
	#£âîm
(
ãrm
Ë
	`£tu±îm
—îm, 1, (*)0)

	)

1091 
	#fixãrm
(Ë
	`ª£t_¥og_mode
()

	)

1092 
	#ª£âîm
(Ë
	`ª£t_shñl_mode
()

	)

1093 
	#ßvëîm
(Ë
	`def_¥og_mode
()

	)

1094 
	#¸mode
(Ë
	`cbªak
()

	)

1095 
	#no¸mode
(Ë
	`nocbªak
()

	)

1096 
	#gëtmode
()

	)

1099 #i‡!
NCURSES_OPAQUE


1100 
	#gë©ås
(
wö
Ë
	`NCURSES_CAST
(, (wöË? (wö)->
_©ås
 : 
A_NORMAL
)

	)

1101 
	#gëcurx
(
wö
Ë((wöË? (wö)->
_curx
 : 
ERR
)

	)

1102 
	#gëcury
(
wö
Ë((wöË? (wö)->
_cury
 : 
ERR
)

	)

1103 
	#gëbegx
(
wö
Ë((wöË? (wö)->
_begx
 : 
ERR
)

	)

1104 
	#gëbegy
(
wö
Ë((wöË? (wö)->
_begy
 : 
ERR
)

	)

1105 
	#gëmaxx
(
wö
Ë((wöË? ((wö)->
_maxx
 + 1Ë: 
ERR
)

	)

1106 
	#gëmaxy
(
wö
Ë((wöË? ((wö)->
_maxy
 + 1Ë: 
ERR
)

	)

1107 
	#gë∑rx
(
wö
Ë((wöË? (wö)->
_∑rx
 : 
ERR
)

	)

1108 
	#gë∑ry
(
wö
Ë((wöË? (wö)->
_∑ry
 : 
ERR
)

	)

1111 
	#w°™dout
(
wö
Ë(
	`w©å£t
(wö,
A_STANDOUT
))

	)

1112 
	#w°™díd
(
wö
Ë(
	`w©å£t
(wö,
A_NORMAL
))

	)

1114 
	#w©å⁄
(
wö
,
©
Ë
	`w©å_⁄
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

1115 
	#w©åoff
(
wö
,
©
Ë
	`w©å_off
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

1117 #i‡!
NCURSES_OPAQUE


1118 #i‡
deföed
(
NCURSES_WIDECHAR
) && 0

1119 
	#w©å£t
(
wö
,
©
) ((win) \

1120 ? ((
wö
)->
_cﬁ‹
 = 
	`PAIR_NUMBER
(
©
), \

1121 (
wö
)->
_©ås
 = 
	`NCURSES_CAST
(
©å_t
, 
©
), \

1122 
OK
) \

1123 : 
ERR
)

	)

1125 
	#w©å£t
(
wö
,
©
) ((win) \

1126 ? ((
wö
)->
_©ås
 = 
	`NCURSES_CAST
(
©å_t
, 
©
), \

1127 
OK
) \

1128 : 
ERR
)

	)

1132 
	#s¸ﬁl
(
wö
Ë
	`ws¸l
(wö,1)

	)

1134 
	#touchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 1)

	)

1135 
	#touchlöe
(
wö
, 
s
, 
c
Ë
	`wtouch 
((wö), s, c, 1)

	)

1136 
	#u¡ouchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 0)

	)

1138 
	#box
(
wö
, 
v
, 
h
Ë
	`wb‹dî
(wö, v, v, h, h, 0, 0, 0, 0)

	)

1139 
	#b‹dî
(
ls
, 
rs
, 
ts
, 
bs
, 
é
, 
å
, 
bl
, 
br
Ë
	`wb‹dî
(
°ds¸
,Üs,Ñs,Ås, bs,Ål,År, bl, br)

	)

1140 
	#hlöe
(
ch
, 
n
Ë
	`whlöe
(
°ds¸
, ch,Ç)

	)

1141 
	#vlöe
(
ch
, 
n
Ë
	`wvlöe
(
°ds¸
, ch,Ç)

	)

1143 
	#wö°r
(
w
, 
s
Ë
	`wön°r
(w, s, -1)

	)

1144 
	#wöch°r
(
w
, 
s
Ë
	`wöchn°r
(w, s, -1)

	)

1145 
	#wös°r
(
w
, 
s
Ë
	`wö¢°r
(w, s, -1)

	)

1147 #i‡!
NCURSES_OPAQUE


1148 
	#ªdøwwö
(
wö
Ë
	`wªdøw 
(wö, 0, (wö)->
_maxy
+1)

	)

1151 
	#wadd°r
(
wö
,
°r
Ë
	`waddn°r
(wö,°r,-1)

	)

1152 
	#waddch°r
(
wö
,
°r
Ë
	`waddchn°r
(wö,°r,-1)

	)

1157 
	#COLOR_PAIR
(
n
Ë
	`NCURSES_BITS
“, 0)

	)

1158 
	#PAIR_NUMBER
(
a
Ë(
	`NCURSES_CAST
(,((NCURSES_CAST(,aË& 
A_COLOR
Ë>> 
NCURSES_ATTR_SHIFT
)))

	)

1164 
	#addch
(
ch
Ë
	`waddch
(
°ds¸
,ch)

	)

1165 
	#addchn°r
(
°r
,
n
Ë
	`waddchn°r
(
°ds¸
,°r,n)

	)

1166 
	#addch°r
(
°r
Ë
	`waddch°r
(
°ds¸
,°r)

	)

1167 
	#addn°r
(
°r
,
n
Ë
	`waddn°r
(
°ds¸
,°r,n)

	)

1168 
	#add°r
(
°r
Ë
	`waddn°r
(
°ds¸
,°r,-1)

	)

1169 
	#©åoff
(
©
Ë
	`w©åoff
(
°ds¸
,©)

	)

1170 
	#©å⁄
(
©
Ë
	`w©å⁄
(
°ds¸
,©)

	)

1171 
	#©å£t
(
©
Ë
	`w©å£t
(
°ds¸
,©)

	)

1172 
	#©å_gë
(
≠
,
˝
,
o
Ë
	`w©å_gë
(
°ds¸
,≠,˝,o)

	)

1173 
	#©å_off
(
a
,
o
Ë
	`w©å_off
(
°ds¸
,a,o)

	)

1174 
	#©å_⁄
(
a
,
o
Ë
	`w©å_⁄
(
°ds¸
,a,o)

	)

1175 
	#©å_£t
(
a
,
c
,
o
Ë
	`w©å_£t
(
°ds¸
,a,c,o)

	)

1176 
	#bkgd
(
ch
Ë
	`wbkgd
(
°ds¸
,ch)

	)

1177 
	#bkgd£t
(
ch
Ë
	`wbkgd£t
(
°ds¸
,ch)

	)

1178 
	#chg©
(
n
,
a
,
c
,
o
Ë
	`wchg©
(
°ds¸
,n,a,c,o)

	)

1179 
	#˛ór
(Ë
	`w˛ór
(
°ds¸
)

	)

1180 
	#˛πobŸ
(Ë
	`w˛πobŸ
(
°ds¸
)

	)

1181 
	#˛π€ﬁ
(Ë
	`w˛π€ﬁ
(
°ds¸
)

	)

1182 
	#cﬁ‹_£t
(
c
,
o
Ë
	`wcﬁ‹_£t
(
°ds¸
,c,o)

	)

1183 
	#dñch
(Ë
	`wdñch
(
°ds¸
)

	)

1184 
	#dñëñn
(Ë
	`wösdñ 
(
°ds¸
,-1)

	)

1185 
	#echoch¨
(
c
Ë
	`wechoch¨
(
°ds¸
,c)

	)

1186 
	#îa£
(Ë
	`wîa£
(
°ds¸
)

	)

1187 
	#gëch
(Ë
	`wgëch
(
°ds¸
)

	)

1188 
	#gë°r
(
°r
Ë
	`wgë°r
(
°ds¸
,°r)

	)

1189 
	#öch
(Ë
	`wöch
(
°ds¸
)

	)

1190 
	#öchn°r
(
s
,
n
Ë
	`wöchn°r
(
°ds¸
,s,n)

	)

1191 
	#öch°r
(
s
Ë
	`wöch°r
(
°ds¸
,s)

	)

1192 
	#ön°r
(
s
,
n
Ë
	`wön°r
(
°ds¸
,s,n)

	)

1193 
	#ösch
(
c
Ë
	`wösch
(
°ds¸
,c)

	)

1194 
	#ösdñ 
(
n
Ë
	`wösdñ 
(
°ds¸
,n)

	)

1195 
	#ö£π 
(Ë
	`wösdñ 
(
°ds¸
,1)

	)

1196 
	#ö¢°r
(
s
,
n
Ë
	`wö¢°r
(
°ds¸
,s,n)

	)

1197 
	#ös°r
(
s
Ë
	`wös°r
(
°ds¸
,s)

	)

1198 
	#ö°r
(
s
Ë
	`wö°r
(
°ds¸
,s)

	)

1199 
	#move
(
y
,
x
Ë
	`wmove
(
°ds¸
,y,x)

	)

1200 
	#ª‰esh
(Ë
	`wª‰esh
(
°ds¸
)

	)

1201 
	#s¸l
(
n
Ë
	`ws¸l
(
°ds¸
,n)

	)

1202 
	#£ts¸ªg
(
t
,
b
Ë
	`w£ts¸ªg
(
°ds¸
,t,b)

	)

1203 
	#°™díd
(Ë
	`w°™díd
(
°ds¸
)

	)

1204 
	#°™dout
(Ë
	`w°™dout
(
°ds¸
)

	)

1205 
	#timeout
(
dñay
Ë
	`wtimeout
(
°ds¸
,dñay)

	)

1206 
	#wdñëñn
(
wö
Ë
	`wösdñ 
(wö,-1)

	)

1207 
	#wö£π 
(
wö
Ë
	`wösdñ 
(wö,1)

	)

1213 
	#mvwaddch
(
wö
,
y
,
x
,
ch
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddch
(wö,ch))

	)

1214 
	#mvwaddchn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,n))

	)

1215 
	#mvwaddch°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,-1))

	)

1216 
	#mvwaddn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,n))

	)

1217 
	#mvwadd°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,-1))

	)

1218 
	#mvwdñch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wdñch
(wö))

	)

1219 
	#mvwchg©
(
wö
,
y
,
x
,
n
,
a
,
c
,
o
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wchg©
(wö,n,a,c,o))

	)

1220 
	#mvwgëch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgëch
(wö))

	)

1221 
	#mvwgën°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgën°r
(wö,°r,n))

	)

1222 
	#mvwgë°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë°r
(wö,°r))

	)

1223 
	#mvwhlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`whlöe
(wö,c,n))

	)

1224 
	#mvwöch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? 
	`NCURSES_CAST
(
chty≥
, ERRË: 
	`wöch
(wö))

	)

1225 
	#mvwöchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöchn°r
(wö,s,n))

	)

1226 
	#mvwöch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöch°r
(wö,s))

	)

1227 
	#mvwön°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wön°r
(wö,s,n))

	)

1228 
	#mvwösch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wösch
(wö,c))

	)

1229 
	#mvwö¢°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö¢°r
(wö,s,n))

	)

1230 
	#mvwös°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös°r
(wö,s))

	)

1231 
	#mvwö°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö°r
(wö,s))

	)

1232 
	#mvwvlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wvlöe
(wö,c,n))

	)

1234 
	#mvaddch
(
y
,
x
,
ch
Ë
	`mvwaddch
(
°ds¸
,y,x,ch)

	)

1235 
	#mvaddchn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddchn°r
(
°ds¸
,y,x,°r,n)

	)

1236 
	#mvaddch°r
(
y
,
x
,
°r
Ë
	`mvwaddch°r
(
°ds¸
,y,x,°r)

	)

1237 
	#mvaddn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddn°r
(
°ds¸
,y,x,°r,n)

	)

1238 
	#mvadd°r
(
y
,
x
,
°r
Ë
	`mvwadd°r
(
°ds¸
,y,x,°r)

	)

1239 
	#mvchg©
(
y
,
x
,
n
,
a
,
c
,
o
Ë
	`mvwchg©
(
°ds¸
,y,x,n,a,c,o)

	)

1240 
	#mvdñch
(
y
,
x
Ë
	`mvwdñch
(
°ds¸
,y,x)

	)

1241 
	#mvgëch
(
y
,
x
Ë
	`mvwgëch
(
°ds¸
,y,x)

	)

1242 
	#mvgën°r
(
y
,
x
,
°r
,
n
Ë
	`mvwgën°r
(
°ds¸
,y,x,°r,n)

	)

1243 
	#mvgë°r
(
y
,
x
,
°r
Ë
	`mvwgë°r
(
°ds¸
,y,x,°r)

	)

1244 
	#mvhlöe
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe
(
°ds¸
,y,x,c,n)

	)

1245 
	#mvöch
(
y
,
x
Ë
	`mvwöch
(
°ds¸
,y,x)

	)

1246 
	#mvöchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwöchn°r
(
°ds¸
,y,x,s,n)

	)

1247 
	#mvöch°r
(
y
,
x
,
s
Ë
	`mvwöch°r
(
°ds¸
,y,x,s)

	)

1248 
	#mvön°r
(
y
,
x
,
s
,
n
Ë
	`mvwön°r
(
°ds¸
,y,x,s,n)

	)

1249 
	#mvösch
(
y
,
x
,
c
Ë
	`mvwösch
(
°ds¸
,y,x,c)

	)

1250 
	#mvö¢°r
(
y
,
x
,
s
,
n
Ë
	`mvwö¢°r
(
°ds¸
,y,x,s,n)

	)

1251 
	#mvös°r
(
y
,
x
,
s
Ë
	`mvwös°r
(
°ds¸
,y,x,s)

	)

1252 
	#mvö°r
(
y
,
x
,
s
Ë
	`mvwö°r
(
°ds¸
,y,x,s)

	)

1253 
	#mvvlöe
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe
(
°ds¸
,y,x,c,n)

	)

1258 #i‡!
NCURSES_OPAQUE


1259 
	#gëbkgd
(
wö
Ë((wö)->
_bkgd
)

	)

1262 
	#¶k_©å_off
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©åoff
◊))

	)

1263 
	#¶k_©å_⁄
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©å⁄
◊))

	)

1265 #i‡!
NCURSES_OPAQUE


1266 #i‡
deföed
(
NCURSES_WIDECHAR
) && 0

1267 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = (◊Ë& ~
A_COLOR
), \

1268 (
wö
)->
_cﬁ‹
 = (
p
), \

1269 
OK
)

	)

1270 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!(*)0 && (*◊Ë(wö)->
_©ås
)), \

1271 ()((
p
Ë!(*)0 && (*’Ë()(
wö
)->
_cﬁ‹
)), \

1272 
OK
)

	)

1274 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = ((◊Ë& ~
A_COLOR
Ë| (
©å_t
)
	`COLOR_PAIR
’)), 
OK
)

	)

1275 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!(*)0 && (*◊Ë(wö)->
_©ås
)), \

1276 ()((
p
Ë!(*)0 && (*’Ë()
	`PAIR_NUMBER
((
wö
)->
_©ås
))), \

1277 
OK
)

	)

1287 
	#vw_¥ötw
 
vw¥ötw


	)

1288 
	#vw_sˇnw
 
vwsˇnw


	)

1294 
	#vssˇnf
(
a
,
b
,
c
Ë
	`_nc_vssˇnf
◊,b,c)

	)

1295 
NCURSES_EXPORT
(Ë
vssˇnf
(c⁄° *, c⁄° *, 
va_li°
);

1302 #i‡!
NCURSES_OPAQUE


1303 
	#is_˛óªd
(
wö
Ë((wöË? (wö)->
_˛ór
 : 
FALSE
)

	)

1304 
	#is_idcok
(
wö
Ë((wöË? (wö)->
_idcok
 : 
FALSE
)

	)

1305 
	#is_idlok
(
wö
Ë((wöË? (wö)->
_idlok
 : 
FALSE
)

	)

1306 
	#is_immedok
(
wö
Ë((wöË? (wö)->
_immed
 : 
FALSE
)

	)

1307 
	#is_key∑d
(
wö
Ë((wöË? (wö)->
_u£_key∑d
 : 
FALSE
)

	)

1308 
	#is_Àaveok
(
wö
Ë((wöË? (wö)->
_Àaveok
 : 
FALSE
)

	)

1309 
	#is_nodñay
(
wö
Ë((wöË? ((wö)->
_dñay
 =0Ë: 
FALSE
)

	)

1310 
	#is_nŸimeout
(
wö
Ë((wöË? (wö)->
_nŸimeout
 : 
FALSE
)

	)

1311 
	#is_∑d
(
wö
Ë((wöË? ((wö)->
_Êags
 & 
_ISPAD
Ë!0 : 
FALSE
)

	)

1312 
	#is_s¸ﬁlok
(
wö
Ë((wöË? (wö)->
_s¸ﬁl
 : 
FALSE
)

	)

1313 
	#is_subwö
(
wö
Ë((wöË? ((wö)->
_Êags
 & 
_SUBWIN
Ë!0 : 
FALSE
)

	)

1314 
	#is_syncok
(
wö
Ë((wöË? (wö)->
_sync
 : 
FALSE
)

	)

1315 
	#wgë∑ª¡
(
wö
Ë((wöË? (wö)->
_∑ª¡
 : 0)

	)

1316 
	#wgës¸ªg
(
wö
,
t
,
b
Ë((wöË? (*—Ë(wö)->
_ªgt›
, *(bË(wö)->
_ªgbŸtom
, 
OK
Ë: 
ERR
)

	)

1330 #i‡
NCURSES_REENTRANT


1332 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
curs¸
);

1333 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
√ws¸
);

1334 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
°ds¸
);

1335 
NCURSES_WRAPPED_VAR
(*, 
âyty≥
);

1336 
NCURSES_WRAPPED_VAR
(, 
COLORS
);

1337 
NCURSES_WRAPPED_VAR
(, 
COLOR_PAIRS
);

1338 
NCURSES_WRAPPED_VAR
(, 
COLS
);

1339 
NCURSES_WRAPPED_VAR
(, 
ESCDELAY
);

1340 
NCURSES_WRAPPED_VAR
(, 
LINES
);

1341 
NCURSES_WRAPPED_VAR
(, 
TABSIZE
);

1343 
	#curs¸
 
	`NCURSES_PUBLIC_VAR
(
	`curs¸
())

	)

1344 
	#√ws¸
 
	`NCURSES_PUBLIC_VAR
(
	`√ws¸
())

	)

1345 
	#°ds¸
 
	`NCURSES_PUBLIC_VAR
(
	`°ds¸
())

	)

1346 
	#âyty≥
 
	`NCURSES_PUBLIC_VAR
(
	`âyty≥
())

	)

1347 
	#COLORS
 
	`NCURSES_PUBLIC_VAR
(
	`COLORS
())

	)

1348 
	#COLOR_PAIRS
 
	`NCURSES_PUBLIC_VAR
(
	`COLOR_PAIRS
())

	)

1349 
	#COLS
 
	`NCURSES_PUBLIC_VAR
(
	`COLS
())

	)

1350 
	#ESCDELAY
 
	`NCURSES_PUBLIC_VAR
(
	`ESCDELAY
())

	)

1351 
	#LINES
 
	`NCURSES_PUBLIC_VAR
(
	`LINES
())

	)

1352 
	#TABSIZE
 
	`NCURSES_PUBLIC_VAR
(
	`TABSIZE
())

	)

1356 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
curs¸
;

1357 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
√ws¸
;

1358 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
°ds¸
;

1359 
NCURSES_EXPORT_VAR
(Ë
âyty≥
[];

1360 
NCURSES_EXPORT_VAR
(Ë
COLORS
;

1361 
NCURSES_EXPORT_VAR
(Ë
COLOR_PAIRS
;

1362 
NCURSES_EXPORT_VAR
(Ë
COLS
;

1363 
NCURSES_EXPORT_VAR
(Ë
ESCDELAY
;

1364 
NCURSES_EXPORT_VAR
(Ë
LINES
;

1365 
NCURSES_EXPORT_VAR
(Ë
TABSIZE
;

1381 
	#KEY_CODE_YES
 0400

	)

1382 
	#KEY_MIN
 0401

	)

1383 
	#KEY_BREAK
 0401

	)

1384 
	#KEY_SRESET
 0530

	)

1385 
	#KEY_RESET
 0531

	)

1389 
	#KEY_DOWN
 0402

	)

1390 
	#KEY_UP
 0403

	)

1391 
	#KEY_LEFT
 0404

	)

1392 
	#KEY_RIGHT
 0405

	)

1393 
	#KEY_HOME
 0406

	)

1394 
	#KEY_BACKSPACE
 0407

	)

1395 
	#KEY_F0
 0410

	)

1396 
	#KEY_F
(
n
Ë(
KEY_F0
+“)Ë

	)

1397 
	#KEY_DL
 0510

	)

1398 
	#KEY_IL
 0511

	)

1399 
	#KEY_DC
 0512

	)

1400 
	#KEY_IC
 0513

	)

1401 
	#KEY_EIC
 0514

	)

1402 
	#KEY_CLEAR
 0515

	)

1403 
	#KEY_EOS
 0516

	)

1404 
	#KEY_EOL
 0517

	)

1405 
	#KEY_SF
 0520

	)

1406 
	#KEY_SR
 0521

	)

1407 
	#KEY_NPAGE
 0522

	)

1408 
	#KEY_PPAGE
 0523

	)

1409 
	#KEY_STAB
 0524

	)

1410 
	#KEY_CTAB
 0525

	)

1411 
	#KEY_CATAB
 0526

	)

1412 
	#KEY_ENTER
 0527

	)

1413 
	#KEY_PRINT
 0532

	)

1414 
	#KEY_LL
 0533

	)

1415 
	#KEY_A1
 0534

	)

1416 
	#KEY_A3
 0535

	)

1417 
	#KEY_B2
 0536

	)

1418 
	#KEY_C1
 0537

	)

1419 
	#KEY_C3
 0540

	)

1420 
	#KEY_BTAB
 0541

	)

1421 
	#KEY_BEG
 0542

	)

1422 
	#KEY_CANCEL
 0543

	)

1423 
	#KEY_CLOSE
 0544

	)

1424 
	#KEY_COMMAND
 0545

	)

1425 
	#KEY_COPY
 0546

	)

1426 
	#KEY_CREATE
 0547

	)

1427 
	#KEY_END
 0550

	)

1428 
	#KEY_EXIT
 0551

	)

1429 
	#KEY_FIND
 0552

	)

1430 
	#KEY_HELP
 0553

	)

1431 
	#KEY_MARK
 0554

	)

1432 
	#KEY_MESSAGE
 0555

	)

1433 
	#KEY_MOVE
 0556

	)

1434 
	#KEY_NEXT
 0557

	)

1435 
	#KEY_OPEN
 0560

	)

1436 
	#KEY_OPTIONS
 0561

	)

1437 
	#KEY_PREVIOUS
 0562

	)

1438 
	#KEY_REDO
 0563

	)

1439 
	#KEY_REFERENCE
 0564

	)

1440 
	#KEY_REFRESH
 0565

	)

1441 
	#KEY_REPLACE
 0566

	)

1442 
	#KEY_RESTART
 0567

	)

1443 
	#KEY_RESUME
 0570

	)

1444 
	#KEY_SAVE
 0571

	)

1445 
	#KEY_SBEG
 0572

	)

1446 
	#KEY_SCANCEL
 0573

	)

1447 
	#KEY_SCOMMAND
 0574

	)

1448 
	#KEY_SCOPY
 0575

	)

1449 
	#KEY_SCREATE
 0576

	)

1450 
	#KEY_SDC
 0577

	)

1451 
	#KEY_SDL
 0600

	)

1452 
	#KEY_SELECT
 0601

	)

1453 
	#KEY_SEND
 0602

	)

1454 
	#KEY_SEOL
 0603

	)

1455 
	#KEY_SEXIT
 0604

	)

1456 
	#KEY_SFIND
 0605

	)

1457 
	#KEY_SHELP
 0606

	)

1458 
	#KEY_SHOME
 0607

	)

1459 
	#KEY_SIC
 0610

	)

1460 
	#KEY_SLEFT
 0611

	)

1461 
	#KEY_SMESSAGE
 0612

	)

1462 
	#KEY_SMOVE
 0613

	)

1463 
	#KEY_SNEXT
 0614

	)

1464 
	#KEY_SOPTIONS
 0615

	)

1465 
	#KEY_SPREVIOUS
 0616

	)

1466 
	#KEY_SPRINT
 0617

	)

1467 
	#KEY_SREDO
 0620

	)

1468 
	#KEY_SREPLACE
 0621

	)

1469 
	#KEY_SRIGHT
 0622

	)

1470 
	#KEY_SRSUME
 0623

	)

1471 
	#KEY_SSAVE
 0624

	)

1472 
	#KEY_SSUSPEND
 0625

	)

1473 
	#KEY_SUNDO
 0626

	)

1474 
	#KEY_SUSPEND
 0627

	)

1475 
	#KEY_UNDO
 0630

	)

1476 
	#KEY_MOUSE
 0631

	)

1477 
	#KEY_RESIZE
 0632

	)

1478 
	#KEY_EVENT
 0633

	)

1480 
	#KEY_MAX
 0777

	)

1487 
	#_XOPEN_CURSES
 1

	)

1489 #ifde‡
NCURSES_WIDECHAR


1491 
NCURSES_EXPORT_VAR
(
cch¨_t
 *Ë
_nc_wacs
;

1493 
	#NCURSES_WACS
(
c
Ë(&
_nc_wacs
[()c])

	)

1495 
	#WACS_BSSB
 
	`NCURSES_WACS
('l')

	)

1496 
	#WACS_SSBB
 
	`NCURSES_WACS
('m')

	)

1497 
	#WACS_BBSS
 
	`NCURSES_WACS
('k')

	)

1498 
	#WACS_SBBS
 
	`NCURSES_WACS
('j')

	)

1499 
	#WACS_SBSS
 
	`NCURSES_WACS
('u')

	)

1500 
	#WACS_SSSB
 
	`NCURSES_WACS
('t')

	)

1501 
	#WACS_SSBS
 
	`NCURSES_WACS
('v')

	)

1502 
	#WACS_BSSS
 
	`NCURSES_WACS
('w')

	)

1503 
	#WACS_BSBS
 
	`NCURSES_WACS
('q')

	)

1504 
	#WACS_SBSB
 
	`NCURSES_WACS
('x')

	)

1505 
	#WACS_SSSS
 
	`NCURSES_WACS
('n')

	)

1507 
	#WACS_ULCORNER
 
WACS_BSSB


	)

1508 
	#WACS_LLCORNER
 
WACS_SSBB


	)

1509 
	#WACS_URCORNER
 
WACS_BBSS


	)

1510 
	#WACS_LRCORNER
 
WACS_SBBS


	)

1511 
	#WACS_RTEE
 
WACS_SBSS


	)

1512 
	#WACS_LTEE
 
WACS_SSSB


	)

1513 
	#WACS_BTEE
 
WACS_SSBS


	)

1514 
	#WACS_TTEE
 
WACS_BSSS


	)

1515 
	#WACS_HLINE
 
WACS_BSBS


	)

1516 
	#WACS_VLINE
 
WACS_SBSB


	)

1517 
	#WACS_PLUS
 
WACS_SSSS


	)

1519 
	#WACS_S1
 
	`NCURSES_WACS
('o'Ë

	)

1520 
	#WACS_S9
 
	`NCURSES_WACS
('s'Ë

	)

1521 
	#WACS_DIAMOND
 
	`NCURSES_WACS
('`'Ë

	)

1522 
	#WACS_CKBOARD
 
	`NCURSES_WACS
('a'Ë

	)

1523 
	#WACS_DEGREE
 
	`NCURSES_WACS
('f'Ë

	)

1524 
	#WACS_PLMINUS
 
	`NCURSES_WACS
('g'Ë

	)

1525 
	#WACS_BULLET
 
	`NCURSES_WACS
('~'Ë

	)

1528 
	#WACS_LARROW
 
	`NCURSES_WACS
(','Ë

	)

1529 
	#WACS_RARROW
 
	`NCURSES_WACS
('+'Ë

	)

1530 
	#WACS_DARROW
 
	`NCURSES_WACS
('.'Ë

	)

1531 
	#WACS_UARROW
 
	`NCURSES_WACS
('-'Ë

	)

1532 
	#WACS_BOARD
 
	`NCURSES_WACS
('h'Ë

	)

1533 
	#WACS_LANTERN
 
	`NCURSES_WACS
('i'Ë

	)

1534 
	#WACS_BLOCK
 
	`NCURSES_WACS
('0'Ë

	)

1537 
	#WACS_S3
 
	`NCURSES_WACS
('p'Ë

	)

1538 
	#WACS_S7
 
	`NCURSES_WACS
('r'Ë

	)

1539 
	#WACS_LEQUAL
 
	`NCURSES_WACS
('y'Ë

	)

1540 
	#WACS_GEQUAL
 
	`NCURSES_WACS
('z'Ë

	)

1541 
	#WACS_PI
 
	`NCURSES_WACS
('{'Ë

	)

1542 
	#WACS_NEQUAL
 
	`NCURSES_WACS
('|'Ë

	)

1543 
	#WACS_STERLING
 
	`NCURSES_WACS
('}'Ë

	)

1546 
	#WACS_BDDB
 
	`NCURSES_WACS
('C')

	)

1547 
	#WACS_DDBB
 
	`NCURSES_WACS
('D')

	)

1548 
	#WACS_BBDD
 
	`NCURSES_WACS
('B')

	)

1549 
	#WACS_DBBD
 
	`NCURSES_WACS
('A')

	)

1550 
	#WACS_DBDD
 
	`NCURSES_WACS
('G')

	)

1551 
	#WACS_DDDB
 
	`NCURSES_WACS
('F')

	)

1552 
	#WACS_DDBD
 
	`NCURSES_WACS
('H')

	)

1553 
	#WACS_BDDD
 
	`NCURSES_WACS
('I')

	)

1554 
	#WACS_BDBD
 
	`NCURSES_WACS
('R')

	)

1555 
	#WACS_DBDB
 
	`NCURSES_WACS
('Y')

	)

1556 
	#WACS_DDDD
 
	`NCURSES_WACS
('E')

	)

1558 
	#WACS_D_ULCORNER
 
WACS_BDDB


	)

1559 
	#WACS_D_LLCORNER
 
WACS_DDBB


	)

1560 
	#WACS_D_URCORNER
 
WACS_BBDD


	)

1561 
	#WACS_D_LRCORNER
 
WACS_DBBD


	)

1562 
	#WACS_D_RTEE
 
WACS_DBDD


	)

1563 
	#WACS_D_LTEE
 
WACS_DDDB


	)

1564 
	#WACS_D_BTEE
 
WACS_DDBD


	)

1565 
	#WACS_D_TTEE
 
WACS_BDDD


	)

1566 
	#WACS_D_HLINE
 
WACS_BDBD


	)

1567 
	#WACS_D_VLINE
 
WACS_DBDB


	)

1568 
	#WACS_D_PLUS
 
WACS_DDDD


	)

1571 
	#WACS_BTTB
 
	`NCURSES_WACS
('L')

	)

1572 
	#WACS_TTBB
 
	`NCURSES_WACS
('M')

	)

1573 
	#WACS_BBTT
 
	`NCURSES_WACS
('K')

	)

1574 
	#WACS_TBBT
 
	`NCURSES_WACS
('J')

	)

1575 
	#WACS_TBTT
 
	`NCURSES_WACS
('U')

	)

1576 
	#WACS_TTTB
 
	`NCURSES_WACS
('T')

	)

1577 
	#WACS_TTBT
 
	`NCURSES_WACS
('V')

	)

1578 
	#WACS_BTTT
 
	`NCURSES_WACS
('W')

	)

1579 
	#WACS_BTBT
 
	`NCURSES_WACS
('Q')

	)

1580 
	#WACS_TBTB
 
	`NCURSES_WACS
('X')

	)

1581 
	#WACS_TTTT
 
	`NCURSES_WACS
('N')

	)

1583 
	#WACS_T_ULCORNER
 
WACS_BTTB


	)

1584 
	#WACS_T_LLCORNER
 
WACS_TTBB


	)

1585 
	#WACS_T_URCORNER
 
WACS_BBTT


	)

1586 
	#WACS_T_LRCORNER
 
WACS_TBBT


	)

1587 
	#WACS_T_RTEE
 
WACS_TBTT


	)

1588 
	#WACS_T_LTEE
 
WACS_TTTB


	)

1589 
	#WACS_T_BTEE
 
WACS_TTBT


	)

1590 
	#WACS_T_TTEE
 
WACS_BTTT


	)

1591 
	#WACS_T_HLINE
 
WACS_BTBT


	)

1592 
	#WACS_T_VLINE
 
WACS_TBTB


	)

1593 
	#WACS_T_PLUS
 
WACS_TTTT


	)

1604 
NCURSES_EXPORT
(Ë
add_wch
 (c⁄° 
cch¨_t
 *);

1605 
NCURSES_EXPORT
(Ë
add_wchn°r
 (c⁄° 
cch¨_t
 *, );

1606 
NCURSES_EXPORT
(Ë
add_wch°r
 (c⁄° 
cch¨_t
 *);

1607 
NCURSES_EXPORT
(Ë
addnw°r
 (c⁄° 
wch¨_t
 *, );

1608 
NCURSES_EXPORT
(Ë
addw°r
 (c⁄° 
wch¨_t
 *);

1609 
NCURSES_EXPORT
(Ë
bkg∫d
 (c⁄° 
cch¨_t
 *);

1610 
NCURSES_EXPORT
(Ë
bkg∫d£t
 (c⁄° 
cch¨_t
 *);

1611 
NCURSES_EXPORT
(Ë
b‹dî_£t
 (c⁄° 
cch¨_t
*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*);

1612 
NCURSES_EXPORT
(Ë
box_£t
 (
WINDOW
 *, c⁄° 
cch¨_t
 *, const cchar_t *);

1613 
NCURSES_EXPORT
(Ë
echo_wch¨
 (c⁄° 
cch¨_t
 *);

1614 
NCURSES_EXPORT
(Ë
îa£wch¨
 (
wch¨_t
*);

1615 
NCURSES_EXPORT
(Ë
gë_wch
 (
wöt_t
 *);

1616 
NCURSES_EXPORT
(Ë
gë_w°r
 (
wöt_t
 *);

1617 
NCURSES_EXPORT
(Ë
gëbkg∫d
 (
cch¨_t
 *);

1618 
NCURSES_EXPORT
(Ë
gëcch¨
 (c⁄° 
cch¨_t
 *, 
wch¨_t
*, 
©å_t
*, *, *);

1619 
NCURSES_EXPORT
(Ë
gën_w°r
 (
wöt_t
 *, );

1620 
NCURSES_EXPORT
(Ë
hlöe_£t
 (c⁄° 
cch¨_t
 *, );

1621 
NCURSES_EXPORT
(Ë
ö_wch
 (
cch¨_t
 *);

1622 
NCURSES_EXPORT
(Ë
ö_wchn°r
 (
cch¨_t
 *, );

1623 
NCURSES_EXPORT
(Ë
ö_wch°r
 (
cch¨_t
 *);

1624 
NCURSES_EXPORT
(Ë
önw°r
 (
wch¨_t
 *, );

1625 
NCURSES_EXPORT
(Ë
ös_nw°r
 (c⁄° 
wch¨_t
 *, );

1626 
NCURSES_EXPORT
(Ë
ös_wch
 (c⁄° 
cch¨_t
 *);

1627 
NCURSES_EXPORT
(Ë
ös_w°r
 (c⁄° 
wch¨_t
 *);

1628 
NCURSES_EXPORT
(Ë
öw°r
 (
wch¨_t
 *);

1629 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key_«me
 (
wch¨_t
);

1630 
NCURSES_EXPORT
(Ë
kûlwch¨
 (
wch¨_t
 *);

1631 
NCURSES_EXPORT
(Ë
mvadd_wch
 (, , c⁄° 
cch¨_t
 *);

1632 
NCURSES_EXPORT
(Ë
mvadd_wchn°r
 (, , c⁄° 
cch¨_t
 *, );

1633 
NCURSES_EXPORT
(Ë
mvadd_wch°r
 (, , c⁄° 
cch¨_t
 *);

1634 
NCURSES_EXPORT
(Ë
mvaddnw°r
 (, , c⁄° 
wch¨_t
 *, );

1635 
NCURSES_EXPORT
(Ë
mvaddw°r
 (, , c⁄° 
wch¨_t
 *);

1636 
NCURSES_EXPORT
(Ë
mvgë_wch
 (, , 
wöt_t
 *);

1637 
NCURSES_EXPORT
(Ë
mvgë_w°r
 (, , 
wöt_t
 *);

1638 
NCURSES_EXPORT
(Ë
mvgën_w°r
 (, , 
wöt_t
 *, );

1639 
NCURSES_EXPORT
(Ë
mvhlöe_£t
 (, , c⁄° 
cch¨_t
 *, );

1640 
NCURSES_EXPORT
(Ë
mvö_wch
 (, , 
cch¨_t
 *);

1641 
NCURSES_EXPORT
(Ë
mvö_wchn°r
 (, , 
cch¨_t
 *, );

1642 
NCURSES_EXPORT
(Ë
mvö_wch°r
 (, , 
cch¨_t
 *);

1643 
NCURSES_EXPORT
(Ë
mvönw°r
 (, , 
wch¨_t
 *, );

1644 
NCURSES_EXPORT
(Ë
mvös_nw°r
 (, , c⁄° 
wch¨_t
 *, );

1645 
NCURSES_EXPORT
(Ë
mvös_wch
 (, , c⁄° 
cch¨_t
 *);

1646 
NCURSES_EXPORT
(Ë
mvös_w°r
 (, , c⁄° 
wch¨_t
 *);

1647 
NCURSES_EXPORT
(Ë
mvöw°r
 (, , 
wch¨_t
 *);

1648 
NCURSES_EXPORT
(Ë
mvvlöe_£t
 (, , c⁄° 
cch¨_t
 *, );

1649 
NCURSES_EXPORT
(Ë
mvwadd_wch
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *);

1650 
NCURSES_EXPORT
(Ë
mvwadd_wchn°r
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *, );

1651 
NCURSES_EXPORT
(Ë
mvwadd_wch°r
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *);

1652 
NCURSES_EXPORT
(Ë
mvwaddnw°r
 (
WINDOW
 *, , , c⁄° 
wch¨_t
 *, );

1653 
NCURSES_EXPORT
(Ë
mvwaddw°r
 (
WINDOW
 *, , , c⁄° 
wch¨_t
 *);

1654 
NCURSES_EXPORT
(Ë
mvwgë_wch
 (
WINDOW
 *, , , 
wöt_t
 *);

1655 
NCURSES_EXPORT
(Ë
mvwgë_w°r
 (
WINDOW
 *, , , 
wöt_t
 *);

1656 
NCURSES_EXPORT
(Ë
mvwgën_w°r
 (
WINDOW
 *, , , 
wöt_t
 *, );

1657 
NCURSES_EXPORT
(Ë
mvwhlöe_£t
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *, );

1658 
NCURSES_EXPORT
(Ë
mvwö_wch
 (
WINDOW
 *, , , 
cch¨_t
 *);

1659 
NCURSES_EXPORT
(Ë
mvwö_wchn°r
 (
WINDOW
 *, ,, 
cch¨_t
 *,);

1660 
NCURSES_EXPORT
(Ë
mvwö_wch°r
 (
WINDOW
 *, , , 
cch¨_t
 *);

1661 
NCURSES_EXPORT
(Ë
mvwönw°r
 (
WINDOW
 *, , , 
wch¨_t
 *, );

1662 
NCURSES_EXPORT
(Ë
mvwös_nw°r
 (
WINDOW
 *, ,, c⁄° 
wch¨_t
 *,);

1663 
NCURSES_EXPORT
(Ë
mvwös_wch
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *);

1664 
NCURSES_EXPORT
(Ë
mvwös_w°r
 (
WINDOW
 *, , , c⁄° 
wch¨_t
 *);

1665 
NCURSES_EXPORT
(Ë
mvwöw°r
 (
WINDOW
 *, , , 
wch¨_t
 *);

1666 
NCURSES_EXPORT
(Ë
mvwvlöe_£t
 (
WINDOW
 *, ,, c⁄° 
cch¨_t
 *,);

1667 
NCURSES_EXPORT
(Ë
≥cho_wch¨
 (
WINDOW
 *, c⁄° 
cch¨_t
 *);

1668 
NCURSES_EXPORT
(Ë
£tcch¨
 (
cch¨_t
 *, c⁄° 
wch¨_t
 *, c⁄° 
©å_t
, , const *);

1669 
NCURSES_EXPORT
(Ë
¶k_w£t
 (, c⁄° 
wch¨_t
 *, );

1670 
NCURSES_EXPORT
(
©å_t
Ë
ãrm_©ås
 ();

1671 
NCURSES_EXPORT
(Ë
ungë_wch
 (c⁄° 
wch¨_t
);

1672 
NCURSES_EXPORT
(Ë
vid_©å
 (
©å_t
, , *);

1673 
NCURSES_EXPORT
(Ë
vid_puts
 (
©å_t
, , *, 
NCURSES_OUTC
);

1674 
NCURSES_EXPORT
(Ë
vlöe_£t
 (c⁄° 
cch¨_t
 *, );

1675 
NCURSES_EXPORT
(Ë
wadd_wch
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1676 
NCURSES_EXPORT
(Ë
wadd_wchn°r
 (
WINDOW
 *,c⁄° 
cch¨_t
 *,);

1677 
NCURSES_EXPORT
(Ë
wadd_wch°r
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1678 
NCURSES_EXPORT
(Ë
waddnw°r
 (
WINDOW
 *,c⁄° 
wch¨_t
 *,);

1679 
NCURSES_EXPORT
(Ë
waddw°r
 (
WINDOW
 *,c⁄° 
wch¨_t
 *);

1680 
NCURSES_EXPORT
(Ë
wbkg∫d
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1681 
NCURSES_EXPORT
(Ë
wbkg∫d£t
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1682 
NCURSES_EXPORT
(Ë
wb‹dî_£t
 (
WINDOW
 *,c⁄° 
cch¨_t
*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*);

1683 
NCURSES_EXPORT
(Ë
wecho_wch¨
 (
WINDOW
 *, c⁄° 
cch¨_t
 *);

1684 
NCURSES_EXPORT
(Ë
wgë_wch
 (
WINDOW
 *, 
wöt_t
 *);

1685 
NCURSES_EXPORT
(Ë
wgë_w°r
 (
WINDOW
 *, 
wöt_t
 *);

1686 
NCURSES_EXPORT
(Ë
wgëbkg∫d
 (
WINDOW
 *, 
cch¨_t
 *);

1687 
NCURSES_EXPORT
(Ë
wgën_w°r
 (
WINDOW
 *,
wöt_t
 *, );

1688 
NCURSES_EXPORT
(Ë
whlöe_£t
 (
WINDOW
 *, c⁄° 
cch¨_t
 *, );

1689 
NCURSES_EXPORT
(Ë
wö_wch
 (
WINDOW
 *, 
cch¨_t
 *);

1690 
NCURSES_EXPORT
(Ë
wö_wchn°r
 (
WINDOW
 *, 
cch¨_t
 *, );

1691 
NCURSES_EXPORT
(Ë
wö_wch°r
 (
WINDOW
 *, 
cch¨_t
 *);

1692 
NCURSES_EXPORT
(Ë
wönw°r
 (
WINDOW
 *, 
wch¨_t
 *, );

1693 
NCURSES_EXPORT
(Ë
wös_nw°r
 (
WINDOW
 *, c⁄° 
wch¨_t
 *, );

1694 
NCURSES_EXPORT
(Ë
wös_wch
 (
WINDOW
 *, c⁄° 
cch¨_t
 *);

1695 
NCURSES_EXPORT
(Ë
wös_w°r
 (
WINDOW
 *, c⁄° 
wch¨_t
 *);

1696 
NCURSES_EXPORT
(Ë
wöw°r
 (
WINDOW
 *, 
wch¨_t
 *);

1697 
NCURSES_EXPORT
(
wch¨_t
*Ë
wun˘æ
 (
cch¨_t
 *);

1698 
NCURSES_EXPORT
(Ë
wvlöe_£t
 (
WINDOW
 *, c⁄° 
cch¨_t
 *, );

1700 #i‡
NCURSES_SP_FUNCS


1701 
NCURSES_EXPORT
(
©å_t
Ë
NCURSES_SP_NAME
(
ãrm_©ås
Ë(
SCREEN
*);

1702 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungë_wch
Ë(
SCREEN
*, c⁄° 
wch¨_t
);

1703 
NCURSES_EXPORT
(
wch¨_t
*Ë
NCURSES_SP_NAME
(
wun˘æ
Ë(
SCREEN
*, 
cch¨_t
 *);

1704 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vid_©å
Ë(
SCREEN
*, 
©å_t
, , *);

1705 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vid_puts
Ë(
SCREEN
*, 
©å_t
, , *, 
NCURSES_SP_OUTC
);

1708 #i‚de‡
NCURSES_NOMACROS


1713 
	#add_wch
(
c
Ë
	`wadd_wch
(
°ds¸
,c)

	)

1714 
	#add_wchn°r
(
°r
,
n
Ë
	`wadd_wchn°r
(
°ds¸
,°r,n)

	)

1715 
	#add_wch°r
(
°r
Ë
	`wadd_wch°r
(
°ds¸
,°r)

	)

1716 
	#addnw°r
(
w°r
,
n
Ë
	`waddnw°r
(
°ds¸
,w°r,n)

	)

1717 
	#addw°r
(
w°r
Ë
	`waddw°r
(
°ds¸
,w°r)

	)

1718 
	#bkg∫d
(
c
Ë
	`wbkg∫d
(
°ds¸
,c)

	)

1719 
	#bkg∫d£t
(
c
Ë
	`wbkg∫d£t
(
°ds¸
,c)

	)

1720 
	#b‹dî_£t
(
l
,
r
,
t
,
b
,
é
,
å
,
bl
,
br
Ë
	`wb‹dî_£t
(
°ds¸
,l,r,t,b,é,å,bl,br)

	)

1721 
	#box_£t
(
w
,
v
,
h
Ë
	`wb‹dî_£t
(w,v,v,h,h,0,0,0,0)

	)

1722 
	#echo_wch¨
(
c
Ë
	`wecho_wch¨
(
°ds¸
,c)

	)

1723 
	#gë_wch
(
c
Ë
	`wgë_wch
(
°ds¸
,c)

	)

1724 
	#gë_w°r
(
t
Ë
	`wgë_w°r
(
°ds¸
,t)

	)

1725 
	#gëbkg∫d
(
wch
Ë
	`wgëbkg∫d
(
°ds¸
,wch)

	)

1726 
	#gën_w°r
(
t
,
n
Ë
	`wgën_w°r
(
°ds¸
,t,n)

	)

1727 
	#hlöe_£t
(
c
,
n
Ë
	`whlöe_£t
(
°ds¸
,c,n)

	)

1728 
	#ö_wch
(
c
Ë
	`wö_wch
(
°ds¸
,c)

	)

1729 
	#ö_wchn°r
(
c
,
n
Ë
	`wö_wchn°r
(
°ds¸
,c,n)

	)

1730 
	#ö_wch°r
(
c
Ë
	`wö_wch°r
(
°ds¸
,c)

	)

1731 
	#önw°r
(
c
,
n
Ë
	`wönw°r
(
°ds¸
,c,n)

	)

1732 
	#ös_nw°r
(
t
,
n
Ë
	`wös_nw°r
(
°ds¸
,t,n)

	)

1733 
	#ös_wch
(
c
Ë
	`wös_wch
(
°ds¸
,c)

	)

1734 
	#ös_w°r
(
t
Ë
	`wös_w°r
(
°ds¸
,t)

	)

1735 
	#öw°r
(
c
Ë
	`wöw°r
(
°ds¸
,c)

	)

1736 
	#vlöe_£t
(
c
,
n
Ë
	`wvlöe_£t
(
°ds¸
,c,n)

	)

1737 
	#wadd_wch°r
(
wö
,
°r
Ë
	`wadd_wchn°r
(wö,°r,-1)

	)

1738 
	#waddw°r
(
wö
,
w°r
Ë
	`waddnw°r
(wö,w°r,-1)

	)

1739 
	#wgë_w°r
(
w
,
t
Ë
	`wgën_w°r
(w,t,-1)

	)

1740 
	#wö_wch°r
(
w
,
c
Ë
	`wö_wchn°r
(w,c,-1)

	)

1741 
	#wös_w°r
(
w
,
t
Ë
	`wös_nw°r
(w,t,-1)

	)

1743 #i‡!
NCURSES_OPAQUE


1744 
	#wgëbkg∫d
(
wö
,
wch
Ë(*wch = wö->
_bkg∫d
, 
OK
)

	)

1747 
	#mvadd_wch
(
y
,
x
,
c
Ë
	`mvwadd_wch
(
°ds¸
,y,x,c)

	)

1748 
	#mvadd_wchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwadd_wchn°r
(
°ds¸
,y,x,s,n)

	)

1749 
	#mvadd_wch°r
(
y
,
x
,
s
Ë
	`mvwadd_wch°r
(
°ds¸
,y,x,s)

	)

1750 
	#mvaddnw°r
(
y
,
x
,
w°r
,
n
Ë
	`mvwaddnw°r
(
°ds¸
,y,x,w°r,n)

	)

1751 
	#mvaddw°r
(
y
,
x
,
w°r
Ë
	`mvwaddw°r
(
°ds¸
,y,x,w°r)

	)

1752 
	#mvgë_wch
(
y
,
x
,
c
Ë
	`mvwgë_wch
(
°ds¸
,y,x,c)

	)

1753 
	#mvgë_w°r
(
y
,
x
,
t
Ë
	`mvwgë_w°r
(
°ds¸
,y,x,t)

	)

1754 
	#mvgën_w°r
(
y
,
x
,
t
,
n
Ë
	`mvwgën_w°r
(
°ds¸
,y,x,t,n)

	)

1755 
	#mvhlöe_£t
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe_£t
(
°ds¸
,y,x,c,n)

	)

1756 
	#mvö_wch
(
y
,
x
,
c
Ë
	`mvwö_wch
(
°ds¸
,y,x,c)

	)

1757 
	#mvö_wchn°r
(
y
,
x
,
c
,
n
Ë
	`mvwö_wchn°r
(
°ds¸
,y,x,c,n)

	)

1758 
	#mvö_wch°r
(
y
,
x
,
c
Ë
	`mvwö_wch°r
(
°ds¸
,y,x,c)

	)

1759 
	#mvönw°r
(
y
,
x
,
c
,
n
Ë
	`mvwönw°r
(
°ds¸
,y,x,c,n)

	)

1760 
	#mvös_nw°r
(
y
,
x
,
t
,
n
Ë
	`mvwös_nw°r
(
°ds¸
,y,x,t,n)

	)

1761 
	#mvös_wch
(
y
,
x
,
c
Ë
	`mvwös_wch
(
°ds¸
,y,x,c)

	)

1762 
	#mvös_w°r
(
y
,
x
,
t
Ë
	`mvwös_w°r
(
°ds¸
,y,x,t)

	)

1763 
	#mvöw°r
(
y
,
x
,
c
Ë
	`mvwöw°r
(
°ds¸
,y,x,c)

	)

1764 
	#mvvlöe_£t
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe_£t
(
°ds¸
,y,x,c,n)

	)

1766 
	#mvwadd_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wadd_wch
(wö,c))

	)

1767 
	#mvwadd_wchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wadd_wchn°r
(wö,s,n))

	)

1768 
	#mvwadd_wch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wadd_wch°r
(wö,s))

	)

1769 
	#mvwaddnw°r
(
wö
,
y
,
x
,
w°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddnw°r
(wö,w°r,n))

	)

1770 
	#mvwaddw°r
(
wö
,
y
,
x
,
w°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddw°r
(wö,w°r))

	)

1771 
	#mvwgë_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë_wch
(wö,c))

	)

1772 
	#mvwgë_w°r
(
wö
,
y
,
x
,
t
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë_w°r
(wö,t))

	)

1773 
	#mvwgën_w°r
(
wö
,
y
,
x
,
t
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgën_w°r
(wö,t,n))

	)

1774 
	#mvwhlöe_£t
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`whlöe_£t
(wö,c,n))

	)

1775 
	#mvwö_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö_wch
(wö,c))

	)

1776 
	#mvwö_wchn°r
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö_wchn°r
(wö,c,n))

	)

1777 
	#mvwö_wch°r
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö_wch°r
(wö,c))

	)

1778 
	#mvwönw°r
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wönw°r
(wö,c,n))

	)

1779 
	#mvwös_nw°r
(
wö
,
y
,
x
,
t
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös_nw°r
(wö,t,n))

	)

1780 
	#mvwös_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös_wch
(wö,c))

	)

1781 
	#mvwös_w°r
(
wö
,
y
,
x
,
t
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös_w°r
(wö,t))

	)

1782 
	#mvwöw°r
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöw°r
(wö,c))

	)

1783 
	#mvwvlöe_£t
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wvlöe_£t
(wö,c,n))

	)

1787 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

1788 
NCURSES_EXPORT
(c⁄° *Ë
_nc_viswbuf
(c⁄° 
wch¨_t
 *);

1789 
NCURSES_EXPORT
(c⁄° *Ë
_nc_viswibuf
(c⁄° 
wöt_t
 *);

1802 #i‡
NCURSES_MOUSE_VERSION
 > 1

1803 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 5))

	)

1805 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 6))

	)

1808 
	#NCURSES_BUTTON_RELEASED
 001L

	)

1809 
	#NCURSES_BUTTON_PRESSED
 002L

	)

1810 
	#NCURSES_BUTTON_CLICKED
 004L

	)

1811 
	#NCURSES_DOUBLE_CLICKED
 010L

	)

1812 
	#NCURSES_TRIPLE_CLICKED
 020L

	)

1813 
	#NCURSES_RESERVED_EVENT
 040L

	)

1816 
	#BUTTON1_RELEASED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_RELEASED
)

	)

1817 
	#BUTTON1_PRESSED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_PRESSED
)

	)

1818 
	#BUTTON1_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_CLICKED
)

	)

1819 
	#BUTTON1_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_DOUBLE_CLICKED
)

	)

1820 
	#BUTTON1_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_TRIPLE_CLICKED
)

	)

1822 
	#BUTTON2_RELEASED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_RELEASED
)

	)

1823 
	#BUTTON2_PRESSED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_PRESSED
)

	)

1824 
	#BUTTON2_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_CLICKED
)

	)

1825 
	#BUTTON2_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_DOUBLE_CLICKED
)

	)

1826 
	#BUTTON2_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_TRIPLE_CLICKED
)

	)

1828 
	#BUTTON3_RELEASED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_RELEASED
)

	)

1829 
	#BUTTON3_PRESSED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_PRESSED
)

	)

1830 
	#BUTTON3_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_CLICKED
)

	)

1831 
	#BUTTON3_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_DOUBLE_CLICKED
)

	)

1832 
	#BUTTON3_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_TRIPLE_CLICKED
)

	)

1834 
	#BUTTON4_RELEASED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_RELEASED
)

	)

1835 
	#BUTTON4_PRESSED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_PRESSED
)

	)

1836 
	#BUTTON4_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_CLICKED
)

	)

1837 
	#BUTTON4_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_DOUBLE_CLICKED
)

	)

1838 
	#BUTTON4_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_TRIPLE_CLICKED
)

	)

1844 #i‡
NCURSES_MOUSE_VERSION
 > 1

1846 
	#BUTTON5_RELEASED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_RELEASED
)

	)

1847 
	#BUTTON5_PRESSED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_PRESSED
)

	)

1848 
	#BUTTON5_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_CLICKED
)

	)

1849 
	#BUTTON5_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_DOUBLE_CLICKED
)

	)

1850 
	#BUTTON5_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_TRIPLE_CLICKED
)

	)

1852 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(6, 0001L)

	)

1853 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(6, 0002L)

	)

1854 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(6, 0004L)

	)

1855 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(6, 0010L)

	)

1859 
	#BUTTON1_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_RESERVED_EVENT
)

	)

1860 
	#BUTTON2_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_RESERVED_EVENT
)

	)

1861 
	#BUTTON3_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_RESERVED_EVENT
)

	)

1862 
	#BUTTON4_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_RESERVED_EVENT
)

	)

1864 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(5, 0001L)

	)

1865 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(5, 0002L)

	)

1866 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(5, 0004L)

	)

1867 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(5, 0010L)

	)

1871 
	#ALL_MOUSE_EVENTS
 (
REPORT_MOUSE_POSITION
 - 1)

	)

1874 
	#BUTTON_RELEASE
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 001))

	)

1875 
	#BUTTON_PRESS
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 002))

	)

1876 
	#BUTTON_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 004))

	)

1877 
	#BUTTON_DOUBLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 010))

	)

1878 
	#BUTTON_TRIPLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 020))

	)

1879 
	#BUTTON_RESERVED_EVENT
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 040))

	)

1883 
	gid
;

1884 
	gx
, 
	gy
, 
	gz
;

1885 
mmask_t
 
	gb°©e
;

1887 
	tMEVENT
;

1889 
NCURSES_EXPORT
(
boﬁ
Ë
has_mou£
();

1890 
NCURSES_EXPORT
(Ë
gëmou£
 (
MEVENT
 *);

1891 
NCURSES_EXPORT
(Ë
ungëmou£
 (
MEVENT
 *);

1892 
NCURSES_EXPORT
(
mmask_t
Ë
mou£mask
 (mmask_t, mmask_t *);

1893 
NCURSES_EXPORT
(
boﬁ
Ë
wí˛o£
 (c⁄° 
WINDOW
 *, , );

1894 
NCURSES_EXPORT
(Ë
mou£öãrvÆ
 ();

1895 
NCURSES_EXPORT
(
boﬁ
Ë
wmou£_åafo
 (c⁄° 
WINDOW
*, *, *, bool);

1896 
NCURSES_EXPORT
(
boﬁ
Ë
mou£_åafo
 (*, *, bool);

1898 #i‡
NCURSES_SP_FUNCS


1899 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_mou£
Ë(
SCREEN
*);

1900 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
gëmou£
Ë(
SCREEN
*, 
MEVENT
 *);

1901 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungëmou£
Ë(
SCREEN
*,
MEVENT
 *);

1902 
NCURSES_EXPORT
(
mmask_t
Ë
NCURSES_SP_NAME
(
mou£mask
Ë(
SCREEN
*, mmask_t, mmask_t *);

1903 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
mou£öãrvÆ
Ë(
SCREEN
*, );

1906 
	#mou£_åafo
(
y
,
x
,
to_s¸ìn
Ë
	`wmou£_åafo
(
°ds¸
,y,x,to_s¸ìn)

	)

1910 
NCURSES_EXPORT
(Ë
m˝röt
 (*, );

1911 
NCURSES_EXPORT
(Ë
has_key
 ();

1913 #i‡
NCURSES_SP_FUNCS


1914 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
has_key
Ë(
SCREEN
*, );

1915 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
m˝röt
Ë(
SCREEN
*, *, );

1920 
NCURSES_EXPORT
(Ë
_åa˚f
 (c⁄° *, ...Ë
GCC_PRINTFLIKE
(1,2);

1921 
NCURSES_EXPORT
(Ë
_åa˚dump
 (c⁄° *, 
WINDOW
 *);

1922 
NCURSES_EXPORT
(*Ë
_åa˚©å
 (
©å_t
);

1923 
NCURSES_EXPORT
(*Ë
_åa˚©å2
 (, 
chty≥
);

1924 
NCURSES_EXPORT
(*Ë
_nc_åa˚bôs
 ();

1925 
NCURSES_EXPORT
(*Ë
_åa˚ch¨
 ();

1926 
NCURSES_EXPORT
(*Ë
_åa˚chty≥
 (
chty≥
);

1927 
NCURSES_EXPORT
(*Ë
_åa˚chty≥2
 (, 
chty≥
);

1928 #ifde‡
NCURSES_WIDECHAR


1929 
	#_åa˚ch_t
 
_åa˚cch¨_t


	)

1930 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t
 (c⁄° 
cch¨_t
 *);

1931 
	#_åa˚ch_t2
 
_åa˚cch¨_t2


	)

1932 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t2
 (, c⁄° 
cch¨_t
 *);

1934 
	#_åa˚ch_t
 
_åa˚chty≥


	)

1935 
	#_åa˚ch_t2
 
_åa˚chty≥2


	)

1937 
NCURSES_EXPORT
(*Ë
_åa˚mou£
 (c⁄° 
MEVENT
 *);

1938 
NCURSES_EXPORT
(Ë
åa˚
 (const );

1941 
	#TRACE_DISABLE
 0x0000

	)

1942 
	#TRACE_TIMES
 0x0001

	)

1943 
	#TRACE_TPUTS
 0x0002

	)

1944 
	#TRACE_UPDATE
 0x0004

	)

1945 
	#TRACE_MOVE
 0x0008

	)

1946 
	#TRACE_CHARPUT
 0x0010

	)

1947 
	#TRACE_ORDINARY
 0x001F

	)

1948 
	#TRACE_CALLS
 0x0020

	)

1949 
	#TRACE_VIRTPUT
 0x0040

	)

1950 
	#TRACE_IEVENT
 0x0080

	)

1951 
	#TRACE_BITS
 0x0100

	)

1952 
	#TRACE_ICALLS
 0x0200

	)

1953 
	#TRACE_CCALLS
 0x0400

	)

1954 
	#TRACE_DATABASE
 0x0800

	)

1955 
	#TRACE_ATTRS
 0x1000

	)

1957 
	#TRACE_SHIFT
 13

	)

1958 
	#TRACE_MAXIMUM
 ((1 << 
TRACE_SHIFT
Ë- 1Ë

	)

1960 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

1961 
NCURSES_EXPORT_VAR
(Ë
_nc_›timize_íabÀ
;

1962 
NCURSES_EXPORT
(c⁄° *Ë
_nc_visbuf
 (const *);

1963 
	#OPTIMIZE_MVCUR
 0x01

	)

1964 
	#OPTIMIZE_HASHMAP
 0x02

	)

1965 
	#OPTIMIZE_SCROLL
 0x04

	)

1966 
	#OPTIMIZE_ALL
 0xf‡

	)

1969 
	~<ncur£sw/un˘æ.h
>

1971 #ifde‡
__˝lu•lus


1973 #i‚de‡
NCURSES_NOMACROS


1976 #unde‡
box


1977 #unde‡
˛ór


1978 #unde‡
îa£


1979 #unde‡
move


1980 #unde‡
ª‰esh


	@/usr/include/pwd.h

23 #i‚def 
_PWD_H


24 
	#_PWD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 
	#__√ed_size_t


	)

33 
	~<°ddef.h
>

35 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


38 #i‚de‡
__gid_t_deföed


39 
__gid_t
 
	tgid_t
;

40 
	#__gid_t_deföed


	)

43 #i‚de‡
__uid_t_deföed


44 
__uid_t
 
	tuid_t
;

45 
	#__uid_t_deföed


	)

50 
	s∑sswd


52 *
	mpw_«me
;

53 *
	mpw_∑sswd
;

54 
__uid_t
 
	mpw_uid
;

55 
__gid_t
 
	mpw_gid
;

56 *
	mpw_gecos
;

57 *
	mpw_dú
;

58 *
	mpw_shñl
;

62 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


63 
	#__√ed_FILE


	)

64 
	~<°dio.h
>

68 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


73 
£çwít
 ();

79 
ídpwít
 ();

85 
∑sswd
 *
gëpwít
 ();

88 #ifdef 
__USE_SVID


95 
∑sswd
 *
fgëpwít
 (
FILE
 *
__°ªam
);

103 
puçwít
 (
__c⁄°
 
∑sswd
 *
__ª°ri˘
 
__p
,

104 
FILE
 *
__ª°ri˘
 
__f
);

111 
∑sswd
 *
gëpwuid
 (
__uid_t
 
__uid
);

117 
∑sswd
 *
gëpw«m
 (
__c⁄°
 *
__«me
);

119 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


121 #ifde‡
__USE_MISC


124 
	#NSS_BUFLEN_PASSWD
 1024

	)

135 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


140 
gëpwít_r
 (
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

141 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

142 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

145 
gëpwuid_r
 (
__uid_t
 
__uid
,

146 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

147 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

148 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

150 
gëpw«m_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

151 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

152 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

153 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

156 #ifdef 
__USE_SVID


164 
fgëpwít_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

165 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

166 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

167 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

172 #ifde‡
__USE_GNU


181 
gëpw
 (
__uid_t
 
__uid
, *
__buf„r
);

184 
	g__END_DECLS


	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

149 #ñi‡
deföed
 
__USE_XOPEN2K


150 
	#S_ISSOCK
(
mode
Ë0

	)

157 #ifdef 
__USE_POSIX199309


158 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

159 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

160 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

166 
	#S_ISUID
 
__S_ISUID


	)

167 
	#S_ISGID
 
__S_ISGID


	)

169 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


171 
	#S_ISVTX
 
__S_ISVTX


	)

174 
	#S_IRUSR
 
__S_IREAD


	)

175 
	#S_IWUSR
 
__S_IWRITE


	)

176 
	#S_IXUSR
 
__S_IEXEC


	)

178 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

180 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


181 
	#S_IREAD
 
S_IRUSR


	)

182 
	#S_IWRITE
 
S_IWUSR


	)

183 
	#S_IEXEC
 
S_IXUSR


	)

186 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

187 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

188 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

190 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

192 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

193 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

194 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

196 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

199 #ifdef 
__USE_BSD


201 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

202 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

203 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

205 
	#S_BLKSIZE
 512

	)

209 #i‚de‡
__USE_FILE_OFFSET64


211 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

212 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

216 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

218 #ifde‡
__REDIRECT_NTH


219 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

220 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

221 
	`__n⁄nuŒ
 ((1, 2));

222 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

223 
	`__n⁄nuŒ
 ((2));

225 
	#°©
 
°©64


	)

226 
	#f°©
 
f°©64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

231 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

232 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

235 #ifde‡
__USE_ATFILE


239 #i‚de‡
__USE_FILE_OFFSET64


240 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

241 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

242 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

244 #ifde‡
__REDIRECT_NTH


245 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

246 
°©
 *
__ª°ri˘
 
__buf
,

247 
__Êag
),

248 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

250 
	#f°©©
 
f°©©64


	)

254 #ifde‡
__USE_LARGEFILE64


255 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

256 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

257 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

261 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


262 #i‚de‡
__USE_FILE_OFFSET64


265 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

266 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

268 #ifde‡
__REDIRECT_NTH


269 
	`__REDIRECT_NTH
 (
l°©
,

270 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

271 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 
	#l°©
 
l°©64


	)

277 #ifde‡
__USE_LARGEFILE64


278 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

279 
°©64
 *
__ª°ri˘
 
__buf
)

280 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

286 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_BSD


293 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


299 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

302 #ifde‡
__USE_ATFILE


305 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
,

306 
__Êag
)

307 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

314 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

316 #ifdef 
__USE_GNU


319 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

323 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

326 #ifde‡
__USE_ATFILE


330 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

331 
__THROW
 
	`__n⁄nuŒ
 ((2));

337 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


338 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1));

341 #ifde‡
__USE_ATFILE


345 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

346 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

352 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 #ifde‡
__USE_ATFILE


359 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

360 
__THROW
 
	`__n⁄nuŒ
 ((2));

363 #ifde‡
__USE_ATFILE


366 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

367 
__c⁄°
 
time•ec
 
__times
[2],

368 
__Êags
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2));

372 #ifde‡
__USE_XOPEN2K8


374 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

392 #i‚de‡
_STAT_VER


393 
	#_STAT_VER
 0

	)

395 #i‚de‡
_MKNOD_VER


396 
	#_MKNOD_VER
 0

	)

400 #i‚de‡
__USE_FILE_OFFSET64


401 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

402 
__THROW
 
	`__n⁄nuŒ
 ((3));

403 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

406 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

407 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

408 
°©
 *
__°©_buf
, 
__Êag
)

409 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

411 #ifde‡
__REDIRECT_NTH


412 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

413 
°©
 *
__°©_buf
), 
__fx°©64
)

414 
	`__n⁄nuŒ
 ((3));

415 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

416 
°©
 *
__°©_buf
), 
__x°©64
)

417 
	`__n⁄nuŒ
 ((2, 3));

418 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

419 
°©
 *
__°©_buf
), 
__lx°©64
)

420 
	`__n⁄nuŒ
 ((2, 3));

421 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

422 
__c⁄°
 *
__fûíame
,

423 
°©
 *
__°©_buf
, 
__Êag
),

424 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

427 
	#__fx°©
 
__fx°©64


	)

428 
	#__x°©
 
__x°©64


	)

429 
	#__lx°©
 
__lx°©64


	)

433 #ifde‡
__USE_LARGEFILE64


434 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

435 
__THROW
 
	`__n⁄nuŒ
 ((3));

436 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

439 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

440 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

441 
°©64
 *
__°©_buf
, 
__Êag
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

444 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

445 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

447 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

448 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

449 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

451 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES_IN_LIBC


454 
__exã∫_ölöe
 

455 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

457  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

458 
	}
}

460 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


461 
__exã∫_ölöe
 

462 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

464  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

465 
	}
}

468 
__exã∫_ölöe
 

469 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

471  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

472 
	}
}

474 #ifde‡
__USE_ATFILE


475 
__exã∫_ölöe
 

476 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

477 
__Êag
))

479  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

480 
	}
}

483 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


484 
__exã∫_ölöe
 

485 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

487  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

488 
	}
}

491 #ifde‡
__USE_ATFILE


492 
__exã∫_ölöe
 

493 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

494 
__dev_t
 
__dev
))

496  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

497 
	}
}

500 #i‡
deföed
 
__USE_LARGEFILE64
 \

501 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

502 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

503 
__exã∫_ölöe
 

504 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

506  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

507 
	}
}

509 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


510 
__exã∫_ölöe
 

511 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

513  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

514 
	}
}

517 
__exã∫_ölöe
 

518 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

520  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

521 
	}
}

523 #ifde‡
__USE_ATFILE


524 
__exã∫_ölöe
 

525 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

526 
__Êag
))

528  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

529 
	}
}

536 
	g__END_DECLS


	@/usr/include/sys/types.h

23 #i‚def 
_SYS_TYPES_H


24 
	#_SYS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifdef 
__USE_BSD


33 #i‚de‡
__u_ch¨_deföed


34 
__u_ch¨
 
	tu_ch¨
;

35 
__u_sh‹t
 
	tu_sh‹t
;

36 
__u_öt
 
	tu_öt
;

37 
__u_l⁄g
 
	tu_l⁄g
;

38 
__quad_t
 
	tquad_t
;

39 
__u_quad_t
 
	tu_quad_t
;

40 
__fsid_t
 
	tfsid_t
;

41 
	#__u_ch¨_deföed


	)

45 
__loff_t
 
	tloff_t
;

47 #i‚de‡
__öo_t_deföed


48 #i‚de‡
__USE_FILE_OFFSET64


49 
__öo_t
 
	töo_t
;

51 
__öo64_t
 
	töo_t
;

53 
	#__öo_t_deföed


	)

55 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


56 
__öo64_t
 
	töo64_t
;

57 
	#__öo64_t_deföed


	)

60 #i‚de‡
__dev_t_deföed


61 
__dev_t
 
	tdev_t
;

62 
	#__dev_t_deföed


	)

65 #i‚de‡
__gid_t_deföed


66 
__gid_t
 
	tgid_t
;

67 
	#__gid_t_deföed


	)

70 #i‚de‡
__mode_t_deföed


71 
__mode_t
 
	tmode_t
;

72 
	#__mode_t_deföed


	)

75 #i‚de‡
__∆ök_t_deföed


76 
__∆ök_t
 
	t∆ök_t
;

77 
	#__∆ök_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

85 #i‚de‡
__off_t_deföed


86 #i‚de‡
__USE_FILE_OFFSET64


87 
__off_t
 
	toff_t
;

89 
__off64_t
 
	toff_t
;

91 
	#__off_t_deföed


	)

93 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


94 
__off64_t
 
	toff64_t
;

95 
	#__off64_t_deföed


	)

98 #i‚de‡
__pid_t_deföed


99 
__pid_t
 
	tpid_t
;

100 
	#__pid_t_deföed


	)

103 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

104 && !
deföed
 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

228 && !
deföed
 
__blksize_t_deföed


229 
__blksize_t
 
	tblksize_t
;

230 
	#__blksize_t_deföed


	)

234 #i‚de‡
__USE_FILE_OFFSET64


235 #i‚de‡
__blk˙t_t_deföed


236 
__blk˙t_t
 
	tblk˙t_t
;

237 
	#__blk˙t_t_deföed


	)

239 #i‚de‡
__fsblk˙t_t_deföed


240 
__fsblk˙t_t
 
	tfsblk˙t_t
;

241 
	#__fsblk˙t_t_deföed


	)

243 #i‚de‡
__fsfû˙t_t_deföed


244 
__fsfû˙t_t
 
	tfsfû˙t_t
;

245 
	#__fsfû˙t_t_deföed


	)

248 #i‚de‡
__blk˙t_t_deföed


249 
__blk˙t64_t
 
	tblk˙t_t
;

250 
	#__blk˙t_t_deföed


	)

252 #i‚de‡
__fsblk˙t_t_deföed


253 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

254 
	#__fsblk˙t_t_deföed


	)

256 #i‚de‡
__fsfû˙t_t_deföed


257 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

258 
	#__fsfû˙t_t_deföed


	)

262 #ifde‡
__USE_LARGEFILE64


263 
__blk˙t64_t
 
	tblk˙t64_t
;

264 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

265 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

270 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


271 
	~<bôs/±hªadty≥s.h
>

274 
	g__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unctrl.h

44 #i‚de‡
NCURSES_UNCTRL_H_ö˛


45 
	#NCURSES_UNCTRL_H_ö˛
 1

	)

47 #unde‡
NCURSES_VERSION


48 
	#NCURSES_VERSION
 "5.9"

	)

50 #ifde‡
__˝lu•lus


54 
	~<cur£s.h
>

56 #unde‡
un˘æ


57 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
un˘æ
 (
chty≥
);

60 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
NCURSES_SP_NAME
(
un˘æ
Ë(
SCREEN
*, 
chty≥
);

63 #ifde‡
__˝lu•lus


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

317 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


319 
	#L_SET
 
SEEK_SET


	)

320 
	#L_INCR
 
SEEK_CUR


	)

321 
	#L_XTND
 
SEEK_END


	)

330 #i‚de‡
__USE_FILE_OFFSET64


331 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

333 #ifde‡
__REDIRECT_NTH


334 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

335 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

336 
l£ek64
);

338 
	#l£ek
 
l£ek64


	)

341 #ifde‡
__USE_LARGEFILE64


342 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

343 
__THROW
;

350 
	`˛o£
 (
__fd
);

357 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

363 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

365 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


366 #i‚de‡
__USE_FILE_OFFSET64


373 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

374 
__off_t
 
__off£t
Ë
__wur
;

381 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

382 
__off_t
 
__off£t
Ë
__wur
;

384 #ifde‡
__REDIRECT


385 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

386 
__off64_t
 
__off£t
),

387 
¥ód64
Ë
__wur
;

388 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

389 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

390 
pwrôe64
Ë
__wur
;

392 
	#¥ód
 
¥ód64


	)

393 
	#pwrôe
 
pwrôe64


	)

397 #ifde‡
__USE_LARGEFILE64


401 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

402 
__off64_t
 
__off£t
Ë
__wur
;

405 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

406 
__off64_t
 
__off£t
Ë
__wur
;

414 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

416 #ifde‡
__USE_GNU


419 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

429 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

441 
	`¶ìp
 (
__£c⁄ds
);

443 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

444 || 
deföed
 
__USE_BSD


449 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

450 
__THROW
;

457 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

466 
	`∑u£
 ();

470 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

471 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

473 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


475 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

480 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

481 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

485 #ifde‡
__USE_ATFILE


488 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

489 
__gid_t
 
__group
, 
__Êag
)

490 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

494 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

496 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


498 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

508 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

510 #ifdef 
__USE_GNU


514 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

517 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

518 || 
deföed
 
__USE_BSD


522 *
	$gëwd
 (*
__buf
)

523 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

528 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

531 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

533 #ifde‡
__USE_GNU


536 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

540 **
__ívú⁄
;

541 #ifde‡
__USE_GNU


542 **
ívú⁄
;

548 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

549 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

551 #ifde‡
__USE_XOPEN2K8


554 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

555 
__THROW
 
	`__n⁄nuŒ
 ((2));

560 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

565 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

566 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

570 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifde‡
__USE_GNU


587 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

588 *
__c⁄°
 
__ívp
[])

589 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

593 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


595 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

600 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

606 
	~<bôs/c⁄‚ame.h
>

609 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

610 
__THROW
 
	`__n⁄nuŒ
 ((1));

613 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

616 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

618 #ifdef 
__USE_POSIX2


620 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

625 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

628 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

632 #i‚de‡
__FAVOR_BSD


633 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

635 #ifde‡
__REDIRECT_NTH


636 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

638 
	#gëpgΩ
 
__gëpgid


	)

643 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

644 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


645 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

652 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

654 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


665 #i‚de‡
__FAVOR_BSD


669 
	$£çgΩ
 (Ë
__THROW
;

674 #ifde‡
__REDIRECT_NTH


675 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

677 
	#£çgΩ
 
£çgid


	)

686 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

688 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


690 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

694 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

697 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

700 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

703 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

708 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

710 #ifdef 
__USE_GNU


712 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

719 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

721 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


724 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

727 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


729 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

736 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

738 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


741 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

744 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


746 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

749 #ifde‡
__USE_GNU


752 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

753 
__THROW
;

757 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

758 
__THROW
;

762 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

763 
__THROW
;

767 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

768 
__THROW
;

775 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

777 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

778 || 
deföed
 
__USE_BSD


783 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

789 *
	$ây«me
 (
__fd
Ë
__THROW
;

793 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

794 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

798 
	$ißây
 (
__fd
Ë
__THROW
;

800 #i‡
deföed
 
__USE_BSD
 \

801 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

804 
	$ây¶Ÿ
 (Ë
__THROW
;

809 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

812 #ifde‡
__USE_ATFILE


815 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

816 
__c⁄°
 *
__to
, 
__Êags
)

817 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

820 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


822 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

823 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

828 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

829 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

830 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

833 #ifde‡
__USE_ATFILE


835 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

836 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

839 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

840 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

841 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

845 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

847 #ifde‡
__USE_ATFILE


849 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

850 
__THROW
 
	`__n⁄nuŒ
 ((2));

854 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

858 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

861 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

868 *
	`gëlogö
 ();

869 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


876 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

879 #ifdef 
__USE_BSD


881 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

885 #ifdef 
__USE_POSIX2


889 
	#__√ed_gë›t


	)

890 
	~<gë›t.h
>

894 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


898 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

902 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

905 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

906 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

910 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

916 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

917 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

918 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

925 
	$vh™gup
 (Ë
__THROW
;

928 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

936 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

937 
size_t
 
__off£t
, 
__sˇÀ
)

938 
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

948 *
	$gëu£rshñl
 (Ë
__THROW
;

949 
	$ídu£rshñl
 (Ë
__THROW
;

950 
	$£tu£rshñl
 (Ë
__THROW
;

956 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

960 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

963 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

967 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

971 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


976 
	`fsync
 (
__fd
);

980 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


983 
	`gëho°id
 ();

986 
	$sync
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


992 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

997 
	$gëdèbÀsize
 (Ë
__THROW
;

1003 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1006 #i‚de‡
__USE_FILE_OFFSET64


1007 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1008 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1010 #ifde‡
__REDIRECT_NTH


1011 
	`__REDIRECT_NTH
 (
åunˇã
,

1012 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1013 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1015 
	#åunˇã
 
åunˇã64


	)

1018 #ifde‡
__USE_LARGEFILE64


1019 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1025 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1028 #i‚de‡
__USE_FILE_OFFSET64


1029 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1031 #ifde‡
__REDIRECT_NTH


1032 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1033 
·runˇã64
Ë
__wur
;

1035 
	#·runˇã
 
·runˇã64


	)

1038 #ifde‡
__USE_LARGEFILE64


1039 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1045 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1046 || 
deföed
 
__USE_MISC


1050 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1056 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1060 #ifde‡
__USE_MISC


1071 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1076 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1088 
	#F_ULOCK
 0

	)

1089 
	#F_LOCK
 1

	)

1090 
	#F_TLOCK
 2

	)

1091 
	#F_TEST
 3

	)

1093 #i‚de‡
__USE_FILE_OFFSET64


1094 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__REDIRECT


1097 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1098 
lockf64
Ë
__wur
;

1100 
	#lockf
 
lockf64


	)

1103 #ifde‡
__USE_LARGEFILE64


1104 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1109 #ifde‡
__USE_GNU


1114 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1115 (
__exãnsi⁄__
 \

1116 ({ 
__ªsu…
; \

1117 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1118 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1119 
__ªsu…
; 
	}
}))

	)

1122 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1125 
fd©async
 (
__fûdes
);

1131 #ifdef 
__USE_XOPEN


1133 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1138 
	$í¸y±
 (*
__libc_block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1145 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1146 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1152 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1154 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1159 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1160 
	~<bôs/uni°d.h
>

1163 
__END_DECLS


	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

562 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

563 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

567 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

568 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

663 ...), 
__isoc99_swsˇnf
)

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

673 
	m_CS_V6_ENV
,

674 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

675 
	m_CS_V7_ENV


676 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dirent.h

19 #i‚de‡
_DIRENT_H


23 
	sdúít


25 #i‚de‡
__USE_FILE_OFFSET64


26 
__öo_t
 
	md_öo
;

27 
__off_t
 
	md_off
;

29 
__öo64_t
 
	md_öo
;

30 
__off64_t
 
	md_off
;

32 
	md_ª˛í
;

33 
	md_ty≥
;

34 
	md_«me
[256];

37 #ifde‡
__USE_LARGEFILE64


38 
	sdúít64


40 
__öo64_t
 
	md_öo
;

41 
__off64_t
 
	md_off
;

42 
	md_ª˛í
;

43 
	md_ty≥
;

44 
	md_«me
[256];

48 
	#d_fûío
 
d_öo


	)

50 #unde‡
_DIRENT_HAVE_D_NAMLEN


51 
	#_DIRENT_HAVE_D_RECLEN


	)

52 
	#_DIRENT_HAVE_D_OFF


	)

53 
	#_DIRENT_HAVE_D_TYPE


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

43 #i‡
__WORDSIZE
 == 64

57 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

58 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

59 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

62 
	#_POSIX_V7_LP64_OFF64
 1

	)

63 
	#_POSIX_V6_LP64_OFF64
 1

	)

64 
	#_XBS5_LP64_OFF64
 1

	)

70 
	#_POSIX_V7_ILP32_OFF32
 1

	)

71 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

72 
	#_POSIX_V6_ILP32_OFF32
 1

	)

73 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

74 
	#_XBS5_ILP32_OFF32
 1

	)

75 
	#_XBS5_ILP32_OFFBIG
 1

	)

92 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

93 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

94 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

95 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

96 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

97 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
ERFKILL


42 
	#ERFKILL
 132

	)

45 #i‚de‡
__ASSEMBLER__


47 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

49 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


51 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

56 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


60 
	#EDOM
 33

	)

61 
	#EILSEQ
 84

	)

62 
	#ERANGE
 34

	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/stat.h

19 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_STAT_H


24 
	#_BITS_STAT_H
 1

	)

27 
	#_STAT_VER_KERNEL
 0

	)

29 #i‡
__WORDSIZE
 == 32

30 
	#_STAT_VER_SVR4
 2

	)

31 
	#_STAT_VER_LINUX
 3

	)

34 
	#_MKNOD_VER_LINUX
 1

	)

35 
	#_MKNOD_VER_SVR4
 2

	)

36 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‡
__WORDSIZE
 == 32

50 
	m__∑d1
;

52 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‡
__WORDSIZE
 == 32

58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #i‡
__WORDSIZE
 == 64

67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‡
__WORDSIZE
 == 32

71 
	m__∑d2
;

73 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
	m°_˘imí£c
;

105 #i‡
__WORDSIZE
 == 64

106 
	m__unu£d
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__unu£d4
;

110 
	m__unu£d5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #i‡
__WORDSIZE
 == 64

123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #i‡
__WORDSIZE
 == 64

135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

155 
	#°_©ime
 
°_©im
.
tv_£c


	)

156 
	#°_mtime
 
°_mtim
.
tv_£c


	)

157 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

159 
__time_t
 
	m°_©ime
;

160 
	m°_©imí£c
;

161 
__time_t
 
	m°_mtime
;

162 
	m°_mtimí£c
;

163 
__time_t
 
	m°_˘ime
;

164 
	m°_˘imí£c
;

166 #i‡
__WORDSIZE
 == 64

167 
	m__unu£d
[3];

169 
__öo64_t
 
	m°_öo
;

175 
	#_STATBUF_ST_BLKSIZE


	)

176 
	#_STATBUF_ST_RDEV


	)

178 
	#_STATBUF_ST_NSEC


	)

182 
	#__S_IFMT
 0170000

	)

185 
	#__S_IFDIR
 0040000

	)

186 
	#__S_IFCHR
 0020000

	)

187 
	#__S_IFBLK
 0060000

	)

188 
	#__S_IFREG
 0100000

	)

189 
	#__S_IFIFO
 0010000

	)

190 
	#__S_IFLNK
 0120000

	)

191 
	#__S_IFSOCK
 0140000

	)

195 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

196 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

197 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

201 
	#__S_ISUID
 04000

	)

202 
	#__S_ISGID
 02000

	)

203 
	#__S_ISVTX
 01000

	)

204 
	#__S_IREAD
 0400

	)

205 
	#__S_IWRITE
 0200

	)

206 
	#__S_IEXEC
 0100

	)

208 #ifde‡
__USE_ATFILE


209 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

210 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

54 
	#CLOCK_MONOTONIC_RAW
 4

	)

56 
	#CLOCK_REALTIME_COARSE
 5

	)

58 
	#CLOCK_MONOTONIC_COARSE
 6

	)

61 
	#TIMER_ABSTIME
 1

	)

67 #ifde‡
__√ed_timevÆ


68 #unde‡
__√ed_timevÆ


69 #i‚de‡
_STRUCT_TIMEVAL


70 
	#_STRUCT_TIMEVAL
 1

	)

71 
	~<bôs/ty≥s.h
>

75 
	stimevÆ


77 
__time_t
 
	mtv_£c
;

78 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

24 #ifde‡
__WCHAR_MAX__


25 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

27 
	#__WCHAR_MAX
 (2147483647)

	)

32 #ifde‡
__WCHAR_UNSIGNED__


33 
	#__WCHAR_MIN
 
L
'\0'

	)

37 #ñi‡
L
'\0' - 1 > 0

38 
	#__WCHAR_MIN
 
L
'\0'

	)

40 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

64 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

65 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

68 
__exã∫_Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
))

71 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

74  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

75 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

77 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

78  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

79 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

81  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

82 
	}
}

85 #ifde‡
__USE_GNU


86 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

87 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

88 
size_t
 
__ns1
Ë
__THROW
;

89 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

90 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

91 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

92 
size_t
 
__n
), 
wmemp˝y
);

93 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

94 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

95 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

96 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

97 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

100 
__exã∫_Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

102 
size_t
 
__n
))

104 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

106 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

107  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

108 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

110 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

111  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

112 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

114  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

115 
	}
}

119 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

120 
size_t
 
__ns
Ë
__THROW
;

121 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

122 
size_t
 
__n
), 
wmem£t
);

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

124 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

125 
size_t
 
__ns
), 
__wmem£t_chk
)

126 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

129 
__exã∫_Æways_ölöe
 
wch¨_t
 *

130 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

132 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

134 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

135  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

137 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

138  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

139 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

141  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

142 
	}
}

145 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

146 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

147 
size_t
 
__n
Ë
__THROW
;

148 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

149 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

150 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

152 
__exã∫_Æways_ölöe
 
wch¨_t
 *

153 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

155 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

156  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

157  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

158 
	}
}

161 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

163 
size_t
 
__de°Àn
Ë
__THROW
;

164 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

165 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

168 
__exã∫_Æways_ölöe
 
wch¨_t
 *

169 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

171 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

172  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

173  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

174 
	}
}

177 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

178 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

179 
size_t
 
__de°Àn
Ë
__THROW
;

180 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

181 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

182 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

183 
size_t
 
__n
), 
wc¢˝y
);

184 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

185 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

186 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

187 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

188 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

191 
__exã∫_Æways_ölöe
 
wch¨_t
 *

192 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

193 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

224 
size_t
 
__n
))

226 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

228 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

229  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

230 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

231 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

232  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

233 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

235  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

236 
	}
}

239 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

240 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

241 
size_t
 
__de°Àn
Ë
__THROW
;

242 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

243 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

244 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

246 
__exã∫_Æways_ölöe
 
wch¨_t
 *

247 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

249 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

250  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

251  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

252 
	}
}

255 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

256 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

257 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

258 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

259 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

260 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

261 
size_t
 
__n
), 
wc¢ˇt
);

263 
__exã∫_Æways_ölöe
 
wch¨_t
 *

264 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

265 
size_t
 
__n
))

267 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

268  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

269 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

270  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

271 
	}
}

274 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

275 
__Êag
, 
size_t
 
__s_Àn
,

276 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

277 
__THROW
 ;

279 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

280 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

281 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

282 
sw¥ötf
);

284 #ifde‡
__va_¨g_∑ck


285 
__exã∫_Æways_ölöe
 

286 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

287 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

289 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

290  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

291 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

292 
__fmt
, 
	`__va_¨g_∑ck
 ());

293  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

294 
	}
}

295 #ñi‡!
deföed
 
__˝lu•lus


297 
	#sw¥ötf
(
s
, 
n
, ...) \

298 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

299 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

300 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

301 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

304 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

305 
__Êag
, 
size_t
 
__s_Àn
,

306 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

307 
__gnuc_va_li°
 
__¨g
)

308 
__THROW
 ;

310 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

311 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

312 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

313 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

315 
__exã∫_Æways_ölöe
 

316 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

317 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

319 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

320  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

321 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

322  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

323 
	}
}

326 #i‡
__USE_FORTIFY_LEVEL
 > 1

328 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

329 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

330 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

333 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

335 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

336 
__gnuc_va_li°
 
__≠
);

338 #ifde‡
__va_¨g_∑ck


339 
__exã∫_Æways_ölöe
 

340 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

342  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

343 
	}
}

345 
__exã∫_Æways_ölöe
 

346 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

348  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

349 
	`__va_¨g_∑ck
 ());

350 
	}
}

351 #ñi‡!
deföed
 
__˝lu•lus


352 
	#w¥ötf
(...) \

353 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

354 
	#fw¥ötf
(
°ªam
, ...) \

355 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

358 
__exã∫_Æways_ölöe
 

359 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

361  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

362 
	}
}

364 
__exã∫_Æways_ölöe
 

365 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

366 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

368  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

369 
	}
}

373 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

374 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

375 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

376 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

377 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

378 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

379 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

380 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

381 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

384 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

385 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

387 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

389 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

390  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

391 
__n
, 
__°ªam
);

393 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

394  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

395 
__n
, 
__°ªam
);

397  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

398 
	}
}

400 #ifde‡
__USE_GNU


401 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

402 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

403 
__wur
;

404 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

405 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

406 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

407 
__wur
;

408 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

409 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

410 
__FILE
 *
__ª°ri˘
 
__°ªam
),

411 
__fgëws_u∆ocked_chk
)

412 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

415 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

416 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

418 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

420 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

421  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

422 
__n
, 
__°ªam
);

424 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

425  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

426 
__n
, 
__°ªam
);

428  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

429 
	}
}

433 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

434 
mb°©e_t
 *
__ª°ri˘
 
__p
,

435 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

436 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

437 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

438 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

440 
__exã∫_Æways_ölöe
 
__wur
 
size_t


441 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

442 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

447 
	#__WCHAR_MB_LEN_MAX
 16

	)

448 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


451 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

452  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

453  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

454 
	}
}

457 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

458 
__c⁄°
 **
__ª°ri˘
 
__§c
,

459 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

460 
size_t
 
__d°Àn
Ë
__THROW
;

461 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

462 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

463 
__c⁄°
 **
__ª°ri˘
 
__§c
,

464 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

465 
mb§towcs
);

466 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

467 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

468 
__c⁄°
 **
__ª°ri˘
 
__§c
,

469 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

470 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

471 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

474 
__exã∫_Æways_ölöe
 
size_t


475 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

476 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

478 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

480 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

481  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

485  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

486 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

488  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

489 
	}
}

492 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

493 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

494 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

495 
size_t
 
__d°Àn
Ë
__THROW
;

496 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

497 (*
__ª°ri˘
 
__d°
,

498 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

499 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

500 
wc§tombs
);

501 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

502 (*
__ª°ri˘
 
__d°
,

503 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

504 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

505 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

506 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

508 
__exã∫_Æways_ölöe
 
size_t


509 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

510 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

512 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

514 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

515  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

517 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

518  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

520  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

521 
	}
}

524 #ifde‡
__USE_GNU


525 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

526 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

527 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

528 
size_t
 
__d°Àn
Ë
__THROW
;

529 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

530 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

531 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

532 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

533 
mb¢πowcs
);

534 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

535 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

536 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

537 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

538 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

539 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

542 
__exã∫_Æways_ölöe
 
size_t


543 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

544 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

546 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

548 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

549  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

553  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

554 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

556  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

557 
	}
}

560 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

561 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

562 
size_t
 
__nwc
, size_à
__Àn
,

563 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

564 
__THROW
;

565 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

566 (*
__ª°ri˘
 
__d°
,

567 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

568 
size_t
 
__nwc
, size_à
__Àn
,

569 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

570 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

571 (*
__ª°ri˘
 
__d°
,

572 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

573 
size_t
 
__nwc
, size_à
__Àn
,

574 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

575 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

576 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

578 
__exã∫_Æways_ölöe
 
size_t


579 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

580 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

582 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

584 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

585  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

589  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

590 
	`__bos
 (
__d°
));

592  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

593 
	}
}

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/ncursesw/ncurses_dll.h

30 #i‚de‡
NCURSES_DLL_H_ö˛


31 
	#NCURSES_DLL_H_ö˛
 1

	)

37 
	#NCURSES_PUBLIC_VAR
(
«me
Ë
_nc_
##
	)
name

38 
	#NCURSES_WRAPPED_VAR
(
ty≥
,
«me
Ëty≥ 
	`NCURSES_PUBLIC_VAR
“ame)()

	)

44 #unde‡
NCURSES_DLL


45 
	#NCURSES_STATIC


	)

47 #i‡
deföed
(
__CYGWIN__
Ë|| deföed(
__MINGW32__
)

48 #i‡
deföed
(
NCURSES_DLL
)

49 #i‡
deföed
(
NCURSES_STATIC
)

50 #unde‡
NCURSES_STATIC


53 #unde‡
NCURSES_IMPEXP


54 #unde‡
NCURSES_API


55 #unde‡
NCURSES_EXPORT


56 #unde‡
NCURSES_EXPORT_VAR


57 #i‡
deföed
(
NCURSES_DLL
)

59 
	#NCURSES_IMPEXP
 
	`__de˛•ec
(
dŒexp‹t
)

	)

60 #ñi‡
deföed
(
NCURSES_STATIC
)

62 
	#NCURSES_IMPEXP


	)

65 
	#NCURSES_IMPEXP
 
	`__de˛•ec
(
dŒimp‹t
)

	)

67 
	#NCURSES_API
 
__cde˛


	)

68 
	#NCURSES_EXPORT
(
ty≥
Ë
NCURSES_IMPEXP
Åy≥ 
NCURSES_API


	)

69 
	#NCURSES_EXPORT_VAR
(
ty≥
Ë
NCURSES_IMPEXP
 
	)
type

73 #i‡!
deföed
(
NCURSES_IMPEXP
)

74 
	#NCURSES_IMPEXP


	)

76 #i‡!
deföed
(
NCURSES_API
)

77 
	#NCURSES_API


	)

79 #i‡!
deföed
(
NCURSES_EXPORT
)

80 
	#NCURSES_EXPORT
(
ty≥
Ë
NCURSES_IMPEXP
Åy≥ 
NCURSES_API


	)

82 #i‡!
deföed
(
NCURSES_EXPORT_VAR
)

83 
	#NCURSES_EXPORT_VAR
(
ty≥
Ë
NCURSES_IMPEXP
 
	)
type

	@/usr/include/ncursesw/unctrl.h

44 #i‚de‡
NCURSES_UNCTRL_H_ö˛


45 
	#NCURSES_UNCTRL_H_ö˛
 1

	)

47 #unde‡
NCURSES_VERSION


48 
	#NCURSES_VERSION
 "5.9"

	)

50 #ifde‡
__˝lu•lus


54 
	~<ncur£sw/cur£s.h
>

56 #unde‡
un˘æ


57 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
un˘æ
 (
chty≥
);

60 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
NCURSES_SP_NAME
(
un˘æ
Ë(
SCREEN
*, 
chty≥
);

63 #ifde‡
__˝lu•lus


	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 #i‡
__GNUC_PREREQ
 (4,3)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

317 #i‡
__GNUC_PREREQ
 (4,3)

318 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

319 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

326 #i‡!
__GNUC_PREREQ
 (2,8)

327 
	#__exãnsi⁄__


	)

331 #i‡!
__GNUC_PREREQ
 (2,92)

332 
	#__ª°ri˘


	)

338 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


339 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

341 #ifde‡
__GNUC__


342 
	#__ª°ri˘_¨r


	)

344 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

345 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

348 
	#__ª°ri˘_¨r


	)

353 
	~<bôs/w‹dsize.h
>

355 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


356 
	#__LDBL_COMPAT
 1

	)

357 #ifde‡
__REDIRECT


358 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

359 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

360 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

361 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

362 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

363 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

364 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

365 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

366 
	#__LDBL_REDIR_DECL
(
«me
) \

367 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

368 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

369 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

370 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

371 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

374 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


375 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

376 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

377 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

378 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

379 
	#__LDBL_REDIR_DECL
(
«me
)

	)

380 #ifde‡
__REDIRECT


381 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (Ë(
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (Ë(
x
); \

51 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

56 
	#__bsw≠_c⁄°™t_32
(
x
) \

57 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

58 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

60 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

61 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

62 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

63 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

64 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

65 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

66 || 
deföed
 
	g__amdÁm10__
)

69 
	#__bsw≠_32
(
x
) \

70 (
__exãnsi⁄__
 \

71 ({ 
__v
, 
__x
 = (
x
); \

72 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

73 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

75 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

76 
__v
; }))

	)

78 
	#__bsw≠_32
(
x
) \

79 (
__exãnsi⁄__
 \

80 ({ 
__v
, 
__x
 = (
x
); \

81 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

82 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

84 
	`__asm__
 ("rorw $8, %w0;" \

87 : "Ù" (
__v
) \

88 : "0" (
__x
) \

90 
__v
; }))

	)

93 
	#__bsw≠_32
(
x
) \

94 (
__exãnsi⁄__
 \

95 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

99 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

101 
	#__bsw≠_c⁄°™t_64
(
x
) \

102 ((((
x
) & 0xff00000000000000ull) >> 56) \

103 | (((
x
) & 0x00ff000000000000ull) >> 40) \

104 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

105 | (((
x
) & 0x000000ff00000000ull) >> 8) \

106 | (((
x
) & 0x00000000ff000000ull) << 8) \

107 | (((
x
) & 0x0000000000ff0000ull) << 24) \

108 | (((
x
) & 0x000000000000ff00ull) << 40) \

109 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

111 #i‡
__WORDSIZE
 == 64

112 
	#__bsw≠_64
(
x
) \

113 (
__exãnsi⁄__
 \

114 ({ 
__v
, 
__x
 = (
x
); \

115 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

116 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

118 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

119 
__v
; }))

	)

121 
	#__bsw≠_64
(
x
) \

122 (
__exãnsi⁄__
 \

123 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

124 
__l
[2]; } 
__w
, 
__r
; \

125 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

126 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

129 
__w
.
__Œ
 = (
x
); \

130 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

131 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

133 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

38 
	~<î∫o.h
>

39 
	~<gnu/›ti⁄-groups.h
>

43 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


44 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


45 
±hªad_muãx_t
 
	t__libc_lock_t
;

46 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

48 
	t__libc_lock_t
;

49 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

51 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

52 #ifde‡
__USE_UNIX98


53 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

55 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

58 
__libc_lock_›aque__
 
	t__libc_lock_t
;

59 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

60 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

64 
±hªad_key_t
 
	t__libc_key_t
;

73 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_lock_t
 
NAME
;

	)

75 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

77 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

79 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

80 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

91 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

92 #i‡
LLL_LOCK_INITIALIZER
 == 0

93 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

94 
CLASS
 
__libc_lock_t
 
NAME
;

	)

96 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

97 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

100 #i‡
__LT_SPINLOCK_INIT
 == 0

101 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

102 
CLASS
 
__libc_lock_t
 
NAME
;

	)

104 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

105 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

109 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

110 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

114 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

115 #i‡
LLL_LOCK_INITIALIZER
 == 0

116 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

117 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

119 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

120 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

122 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

123 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

125 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

126 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

127 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

128 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

131 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

132 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

133 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

134 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

136 
	#__πld_lock_öôülize
(
NAME
) \

137 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

144 #ifde‡
__PIC__


145 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

146 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

147 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

149 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

150 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

154 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


155 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

156 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

157 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

158 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

159 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

161 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

162 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

163 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

164 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

165 
FUNC
 
ARGS


	)

171 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

172 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

174 
	#__libc_lock_öô
(
NAME
) \

175 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

177 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


180 
	#__libc_rwlock_öô
(
NAME
) \

181 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

183 
	#__libc_rwlock_öô
(
NAME
) \

184 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

188 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

189 
	#__libc_lock_öô_ªcursive
(
NAME
) \

190 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

192 
	#__libc_lock_öô_ªcursive
(
NAME
) \

194 i‡(
__±hªad_muãx_öô
 !
NULL
) \

196 
±hªad_muãx©å_t
 
__©å
; \

197 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

198 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

199 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

200 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

202 } 0)

	)

205 
	#__πld_lock_öô_ªcursive
(
NAME
) \

207 i‡(
__±hªad_muãx_öô
 !
NULL
) \

209 
±hªad_muãx©å_t
 
__©å
; \

210 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

211 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

212 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

213 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

215 } 0)

	)

220 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

221 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

223 
	#__libc_lock_föi
(
NAME
) \

224 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

226 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


227 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

229 
	#__libc_rwlock_föi
(
NAME
) \

230 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

234 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

235 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

237 
	#__libc_lock_föi_ªcursive
(
NAME
) \

238 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

242 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

243 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

247 
__libc_lock_lock_‚
 (
__libc_lock_t
 *);

248 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_‚
);

250 #i‡
__OPTION_EGLIBC_BIG_MACROS


251 
	#__libc_lock_lock
(
NAME
) \

252 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

254 
	#__libc_lock_lock
(
NAME
) \

255 
	`__libc_lock_lock_‚
 (&(
NAME
))

	)

258 
	#__libc_lock_lock
(
NAME
) \

259 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

261 
	#__libc_rwlock_rdlock
(
NAME
) \

262 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

263 
	#__libc_rwlock_wæock
(
NAME
) \

264 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

267 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

268 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

272 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

273 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

275 #i‡
__OPTION_EGLIBC_BIG_MACROS


276 
	#__libc_lock_lock_ªcursive
(
NAME
) \

278 *
£lf
 = 
THREAD_SELF
; \

279 i‡((
NAME
).
ow√r
 !
£lf
) \

281 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

282 (
NAME
).
ow√r
 = 
£lf
; \

284 ++(
NAME
).
˙t
; \

285 } 0)

	)

287 
	#__libc_lock_lock_ªcursive
(
NAME
) \

288 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

291 
	#__libc_lock_lock_ªcursive
(
NAME
) \

292 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

296 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

297 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

301 
__libc_lock_åylock_‚
 (
__libc_lock_t
 *);

302 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_‚
);

304 #i‡
__OPTION_EGLIBC_BIG_MACROS


305 
	#__libc_lock_åylock
(
NAME
) \

306 
	`Œl_åylock
 (
NAME
)

	)

308 
	#__libc_lock_åylock
(
NAME
) \

309 
	`__libc_lock_åylock_‚
 (&(
NAME
))

	)

312 
	#__libc_lock_åylock
(
NAME
) \

313 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

315 
	#__libc_rwlock_åyrdlock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

317 
	#__libc_rwlock_åywæock
(
NAME
) \

318 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

321 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

322 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

326 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

327 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

329 #i‡
__OPTION_EGLIBC_BIG_MACROS


330 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

332 
ªsu…
 = 0; \

333 *
£lf
 = 
THREAD_SELF
; \

334 i‡((
NAME
).
ow√r
 !
£lf
) \

336 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

338 (
NAME
).
ow√r
 = 
£lf
; \

339 (
NAME
).
˙t
 = 1; \

342 
ªsu…
 = 
EBUSY
; \

345 ++(
NAME
).
˙t
; \

346 
ªsu…
; \

347 })

	)

349 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

350 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

353 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

357 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

358 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

361 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

362 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

366 
__libc_lock_u∆ock_‚
 (
__libc_lock_t
 *);

367 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_‚
);

369 #i‡
__OPTION_EGLIBC_BIG_MACROS


370 
	#__libc_lock_u∆ock
(
NAME
) \

371 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

373 
	#__libc_lock_u∆ock
(
NAME
) \

374 
	`__libc_lock_u∆ock_‚
 (&(
NAME
))

	)

377 
	#__libc_lock_u∆ock
(
NAME
) \

378 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

380 
	#__libc_rwlock_u∆ock
(
NAME
) \

381 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

384 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

385 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

389 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

390 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

392 #i‡
__OPTION_EGLIBC_BIG_MACROS


394 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

396 i‡(--(
NAME
).
˙t
 == 0) \

398 (
NAME
).
ow√r
 = 
NULL
; \

399 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

401 } 0)

	)

403 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

404 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

407 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

408 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

411 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


412 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

413 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

415 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

416 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

418 
	#__πld_lock_lock_ªcursive
(
NAME
) \

419 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

421 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

422 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

424 
	#__πld_lock_lock_ªcursive
(
NAME
) \

425 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

427 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

428 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

432 #i‡
PTHREAD_ONCE_INIT
 == 0

435 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

436 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

438 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

439 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

443 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

445 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

446 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

447 
INIT_FUNCTION
)); \

448 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

449 
	`INIT_FUNCTION
 (); \

450 (
ONCE_CONTROL
) |= 2; \

452 } 0)

	)

455 
	#__libc_⁄˚_gë
(
ONCE_CONTROL
) \

456 ((
ONCE_CONTROL
Ë!
PTHREAD_ONCE_INIT
)

	)

462 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

463 (*
routöe
Ë(*), *
¨g
);

464 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

465 
execuã
);

466 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

467 (*
routöe
Ë(*), *
¨g
);

468 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

469 
execuã
);

472 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

473 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

474 
_avaû
; \

475 i‡(
DOIT
) { \

476 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

477 i‡(
_avaû
) { \

478 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

479 
ARG
)); \

481 
_buf„r
.
__routöe
 = (
FCT
); \

482 
_buf„r
.
__¨g
 = (
ARG
); \

485 
_avaû
 = 0; \

486 }

	)

489 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

490 i‡(
_avaû
) { \

491 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

492 } i‡(
DOIT
) \

493 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

494 
	}

	)
}

497 
	#__libc_˛ónup_íd
(
DOIT
) \

498 i‡(
_avaû
) { \

499 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

500 } i‡(
DOIT
) \

501 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

505 
__exã∫_ölöe
 

506 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

508 i‡(
f
->
__do_ô
)

509 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

510 
	}
}

512 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

514 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

515 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

516 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

517 .
__do_ô
 = 1 };

	)

519 
	#__libc_˛ónup_p›
(
execuã
) \

520 
__˛‰ame
.
__do_ô
 = (
execuã
); \

521 } 0)

	)

525 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

526 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

529 
	#__libc_gë•ecific
(
KEY
) \

530 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

533 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

534 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

540 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

541 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

542 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

543 (*
__∑ª¡
) (),

544 (*
__chûd
) (),

545 *
__dso_h™dÀ
);

550 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

551 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

553 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

555 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

557 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

559 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

561 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

563 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

565 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

566 
__köd
);

568 #ifde‡
__USE_UNIX98


569 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

570 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

572 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

574 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

576 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

578 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

580 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

582 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

585 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

586 (*
__de°r_fun˘i⁄
) (*));

588 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

589 
__c⁄°
 *
__poöãr
);

591 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

593 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

594 (*
__öô_routöe
) ());

596 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

597 (*
__∑ª¡
) (),

598 (*
__chûd
) ());

604 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


605 #ifde‡
wók_exã∫


606 #i‡
_LIBC


607 
	~<bp-sym.h
>

609 
	#BP_SYM
(
sym
Ë
	)
sym

611 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

612 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

613 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

614 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

615 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

616 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

617 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

618 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

619 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

620 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

621 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

622 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

623 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

624 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

625 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

626 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

627 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

628 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

629 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

630 
	$wók_exã∫
 (
__±hªad_öôülize
)

631 
	$wók_exã∫
 (
__±hªad_©f‹k
)

632 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

633 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

634 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

636 #¥agm®
wók
 
__±hªad_muãx_öô


637 #¥agm®
wók
 
__±hªad_muãx_de°roy


638 #¥agm®
wók
 
__±hªad_muãx_lock


639 #¥agm®
wók
 
__±hªad_muãx_åylock


640 #¥agm®
wók
 
__±hªad_muãx_u∆ock


641 #¥agm®
wók
 
__±hªad_muãx©å_öô


642 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


643 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


644 #¥agm®
wók
 
__±hªad_rwlock_de°roy


645 #¥agm®
wók
 
__±hªad_rwlock_rdlock


646 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


647 #¥agm®
wók
 
__±hªad_rwlock_wæock


648 #¥agm®
wók
 
__±hªad_rwlock_åywæock


649 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


650 #¥agm®
wók
 
__±hªad_key_¸óã


651 #¥agm®
wók
 
__±hªad_£t•ecific


652 #¥agm®
wók
 
__±hªad_gë•ecific


653 #¥agm®
wók
 
__±hªad_⁄˚


654 #¥agm®
wók
 
__±hªad_öôülize


655 #¥agm®
wók
 
__±hªad_©f‹k


656 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


657 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


658 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
) \

60 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] |
	`__FDMASK
 (d)))

	)

61 
	#__FD_CLR
(
d
, 
£t
) \

62 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] &~
	`__FDMASK
 (d)))

	)

63 
	#__FD_ISSET
(
d
, 
£t
) \

64 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/ncursesw/curses.h

37 #i‚de‡
__NCURSES_H


38 
	#__NCURSES_H


	)

40 
	#CURSES
 1

	)

41 
	#CURSES_H
 1

	)

44 
	#NCURSES_VERSION_MAJOR
 5

	)

45 
	#NCURSES_VERSION_MINOR
 9

	)

46 
	#NCURSES_VERSION_PATCH
 20110404

	)

49 #unde‡
NCURSES_VERSION


50 
	#NCURSES_VERSION
 "5.9"

	)

55 
	#NCURSES_MOUSE_VERSION
 1

	)

60 
	~<ncur£sw/ncur£s_dŒ.h
>

65 #i‚de‡
NCURSES_ENABLE_STDBOOL_H


66 
	#NCURSES_ENABLE_STDBOOL_H
 1

	)

73 #ifde‡
NCURSES_NOMACROS


74 #i‚de‡
NCURSES_ATTR_T


75 
	#NCURSES_ATTR_T
 
©å_t


	)

79 #i‚de‡
NCURSES_ATTR_T


80 
	#NCURSES_ATTR_T
 

	)

87 #unde‡
NCURSES_CONST


88 
	#NCURSES_CONST
 c⁄°

	)

90 #unde‡
NCURSES_INLINE


91 
	#NCURSES_INLINE
 
ölöe


	)

96 #unde‡
NCURSES_COLOR_T


97 
	#NCURSES_COLOR_T
 

	)

102 #i‚de‡
NCURSES_OPAQUE


103 
	#NCURSES_OPAQUE
 0

	)

109 #i‚de‡
NCURSES_REENTRANT


110 
	#NCURSES_REENTRANT
 0

	)

116 #unde‡
NCURSES_INTEROP_FUNCS


117 
	#NCURSES_INTEROP_FUNCS
 0

	)

122 #unde‡
NCURSES_SIZE_T


123 
	#NCURSES_SIZE_T
 

	)

128 #unde‡
NCURSES_TPARM_VARARGS


129 
	#NCURSES_TPARM_VARARGS
 1

	)

136 #unde‡
NCURSES_CH_T


137 
	#NCURSES_CH_T
 
cch¨_t


	)

139 #i‡0 && 
deföed
(
_LP64
)

140 
	tchty≥
;

141 
	tmmask_t
;

143 
	tchty≥
;

144 
	tmmask_t
;

150 
	~<°dio.h
>

156 #unde‡
NCURSES_WIDECHAR


157 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
Ë|| deföed(
_XPG5
)

158 
	#NCURSES_WIDECHAR


	)

161 
	~<°d¨g.h
>

162 #ifde‡
NCURSES_WIDECHAR


163 
	~<°ddef.h
>

178 #unde‡
TRUE


179 
	#TRUE
 1

	)

181 #unde‡
FALSE


182 
	#FALSE
 0

	)

184 
	tNCURSES_BOOL
;

186 #i‡
deföed
(
__˝lu•lus
)

189 
	#NCURSES_BOOL
 
boﬁ


	)

193 #i‡
NCURSES_ENABLE_STDBOOL_H


194 
	~<°dboﬁ.h
>

196 
	#NCURSES_BOOL
 
boﬁ


	)

199 #unde‡
boﬁ


200 
	#boﬁ
 
NCURSES_BOOL


	)

205 #ifde‡
__˝lu•lus


207 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë
°©ic_ˇ°
<ty≥>(vÆue)

	)

209 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë—y≥)(vÆue)

	)

216 
	#WA_ATTRIBUTES
 
A_ATTRIBUTES


	)

217 
	#WA_NORMAL
 
A_NORMAL


	)

218 
	#WA_STANDOUT
 
A_STANDOUT


	)

219 
	#WA_UNDERLINE
 
A_UNDERLINE


	)

220 
	#WA_REVERSE
 
A_REVERSE


	)

221 
	#WA_BLINK
 
A_BLINK


	)

222 
	#WA_DIM
 
A_DIM


	)

223 
	#WA_BOLD
 
A_BOLD


	)

224 
	#WA_ALTCHARSET
 
A_ALTCHARSET


	)

225 
	#WA_INVIS
 
A_INVIS


	)

226 
	#WA_PROTECT
 
A_PROTECT


	)

227 
	#WA_HORIZONTAL
 
A_HORIZONTAL


	)

228 
	#WA_LEFT
 
A_LEFT


	)

229 
	#WA_LOW
 
A_LOW


	)

230 
	#WA_RIGHT
 
A_RIGHT


	)

231 
	#WA_TOP
 
A_TOP


	)

232 
	#WA_VERTICAL
 
A_VERTICAL


	)

235 
	#COLOR_BLACK
 0

	)

236 
	#COLOR_RED
 1

	)

237 
	#COLOR_GREEN
 2

	)

238 
	#COLOR_YELLOW
 3

	)

239 
	#COLOR_BLUE
 4

	)

240 
	#COLOR_MAGENTA
 5

	)

241 
	#COLOR_CYAN
 6

	)

242 
	#COLOR_WHITE
 7

	)

246 #i‡0 || 
NCURSES_REENTRANT


247 
NCURSES_WRAPPED_VAR
(
chty≥
*, 
acs_m≠
);

248 
	#acs_m≠
 
	`NCURSES_PUBLIC_VAR
(
	`acs_m≠
())

	)

250 
NCURSES_EXPORT_VAR
(
chty≥
Ë
acs_m≠
[];

253 
	#NCURSES_ACS
(
c
Ë(
acs_m≠
[
	`NCURSES_CAST
(,c)])

	)

256 
	#ACS_ULCORNER
 
	`NCURSES_ACS
('l'Ë

	)

257 
	#ACS_LLCORNER
 
	`NCURSES_ACS
('m'Ë

	)

258 
	#ACS_URCORNER
 
	`NCURSES_ACS
('k'Ë

	)

259 
	#ACS_LRCORNER
 
	`NCURSES_ACS
('j'Ë

	)

260 
	#ACS_LTEE
 
	`NCURSES_ACS
('t'Ë

	)

261 
	#ACS_RTEE
 
	`NCURSES_ACS
('u'Ë

	)

262 
	#ACS_BTEE
 
	`NCURSES_ACS
('v'Ë

	)

263 
	#ACS_TTEE
 
	`NCURSES_ACS
('w'Ë

	)

264 
	#ACS_HLINE
 
	`NCURSES_ACS
('q'Ë

	)

265 
	#ACS_VLINE
 
	`NCURSES_ACS
('x'Ë

	)

266 
	#ACS_PLUS
 
	`NCURSES_ACS
('n'Ë

	)

267 
	#ACS_S1
 
	`NCURSES_ACS
('o'Ë

	)

268 
	#ACS_S9
 
	`NCURSES_ACS
('s'Ë

	)

269 
	#ACS_DIAMOND
 
	`NCURSES_ACS
('`'Ë

	)

270 
	#ACS_CKBOARD
 
	`NCURSES_ACS
('a'Ë

	)

271 
	#ACS_DEGREE
 
	`NCURSES_ACS
('f'Ë

	)

272 
	#ACS_PLMINUS
 
	`NCURSES_ACS
('g'Ë

	)

273 
	#ACS_BULLET
 
	`NCURSES_ACS
('~'Ë

	)

275 
	#ACS_LARROW
 
	`NCURSES_ACS
(','Ë

	)

276 
	#ACS_RARROW
 
	`NCURSES_ACS
('+'Ë

	)

277 
	#ACS_DARROW
 
	`NCURSES_ACS
('.'Ë

	)

278 
	#ACS_UARROW
 
	`NCURSES_ACS
('-'Ë

	)

279 
	#ACS_BOARD
 
	`NCURSES_ACS
('h'Ë

	)

280 
	#ACS_LANTERN
 
	`NCURSES_ACS
('i'Ë

	)

281 
	#ACS_BLOCK
 
	`NCURSES_ACS
('0'Ë

	)

287 
	#ACS_S3
 
	`NCURSES_ACS
('p'Ë

	)

288 
	#ACS_S7
 
	`NCURSES_ACS
('r'Ë

	)

289 
	#ACS_LEQUAL
 
	`NCURSES_ACS
('y'Ë

	)

290 
	#ACS_GEQUAL
 
	`NCURSES_ACS
('z'Ë

	)

291 
	#ACS_PI
 
	`NCURSES_ACS
('{'Ë

	)

292 
	#ACS_NEQUAL
 
	`NCURSES_ACS
('|'Ë

	)

293 
	#ACS_STERLING
 
	`NCURSES_ACS
('}'Ë

	)

301 
	#ACS_BSSB
 
ACS_ULCORNER


	)

302 
	#ACS_SSBB
 
ACS_LLCORNER


	)

303 
	#ACS_BBSS
 
ACS_URCORNER


	)

304 
	#ACS_SBBS
 
ACS_LRCORNER


	)

305 
	#ACS_SBSS
 
ACS_RTEE


	)

306 
	#ACS_SSSB
 
ACS_LTEE


	)

307 
	#ACS_SSBS
 
ACS_BTEE


	)

308 
	#ACS_BSSS
 
ACS_TTEE


	)

309 
	#ACS_BSBS
 
ACS_HLINE


	)

310 
	#ACS_SBSB
 
ACS_VLINE


	)

311 
	#ACS_SSSS
 
ACS_PLUS


	)

313 #unde‡
ERR


314 
	#ERR
 (-1)

	)

316 #unde‡
OK


317 
	#OK
 (0)

	)

320 
	#_SUBWIN
 0x01

	)

321 
	#_ENDLINE
 0x02

	)

322 
	#_FULLWIN
 0x04

	)

323 
	#_SCROLLWIN
 0x08

	)

324 
	#_ISPAD
 0x10

	)

325 
	#_HASMOVED
 0x20

	)

326 
	#_WRAPPED
 0x40

	)

332 
	#_NOCHANGE
 -1

	)

338 
	#_NEWINDEX
 -1

	)

340 
s¸ìn
 
	tSCREEN
;

341 
_wö_°
 
	tWINDOW
;

343 
chty≥
 
	t©å_t
;

345 #ifde‡
NCURSES_WIDECHAR


348 #ifde‡
mbÀn


349 #unde‡
mbÀn


351 
	~<libutf8.h
>

355 
	~<wch¨.h
>

359 
	twch¨_t1
;

363 
	twöt_t1
;

372 
	#CCHARW_MAX
 5

	)

375 
©å_t
 
	g©å
;

376 
wch¨_t
 
	gch¨s
[
CCHARW_MAX
];

378 #unde‡
NCURSES_EXT_COLORS


379 
	#NCURSES_EXT_COLORS
 20110404

	)

380 
	gext_cﬁ‹
;

383 
	tcch¨_t
;

387 #i‡!
NCURSES_OPAQUE


388 
	gld©
;

390 
	s_wö_°


392 
NCURSES_SIZE_T
 
	g_cury
, 
	g_curx
;

395 
NCURSES_SIZE_T
 
	g_maxy
, 
	g_maxx
;

396 
NCURSES_SIZE_T
 
	g_begy
, 
	g_begx
;

398 
	g_Êags
;

401 
©å_t
 
	g_©ås
;

402 
chty≥
 
	g_bkgd
;

405 
boﬁ
 
	g_nŸimeout
;

406 
boﬁ
 
	g_˛ór
;

407 
boﬁ
 
	g_Àaveok
;

408 
boﬁ
 
	g_s¸ﬁl
;

409 
boﬁ
 
	g_idlok
;

410 
boﬁ
 
	g_idcok
;

411 
boﬁ
 
	g_immed
;

412 
boﬁ
 
	g_sync
;

413 
boﬁ
 
	g_u£_key∑d
;

414 
	g_dñay
;

416 
ld©
 *
	g_löe
;

419 
NCURSES_SIZE_T
 
	g_ªgt›
;

420 
NCURSES_SIZE_T
 
	g_ªgbŸtom
;

423 
	g_∑rx
;

424 
	g_∑ry
;

425 
WINDOW
 *
	g_∑ª¡
;

428 
	spd©


430 
NCURSES_SIZE_T
 
	g_∑d_y
, 
	g_∑d_x
;

431 
NCURSES_SIZE_T
 
	g_∑d_t›
, 
	g_∑d_À·
;

432 
NCURSES_SIZE_T
 
	g_∑d_bŸtom
, 
	g_∑d_right
;

433 } 
	g_∑d
;

435 
NCURSES_SIZE_T
 
	g_yoff£t
;

437 #ifde‡
NCURSES_WIDECHAR


438 
cch¨_t
 
	g_bkg∫d
;

440 
	g_cﬁ‹
;

450 #ifde‡
NCURSES_WGETCH_EVENTS


451 #i‡!
deföed
(
__BEOS__
Ë|| deföed(
__HAIKU__
)

453 
	#NCURSES_EVENT_VERSION
 1

	)

459 
	#_NC_EVENT_TIMEOUT_MSEC
 1

	)

460 
	#_NC_EVENT_FILE
 2

	)

461 
	#_NC_EVENT_FILE_READABLE
 2

	)

463 
	#_NC_EVENT_FILE_WRITABLE
 4

	)

464 
	#_NC_EVENT_FILE_EXCEPTION
 8

	)

469 
	gty≥
;

472 
	gtimeout_m£c
;

475 
	gÊags
;

476 
	gfd
;

477 
	gªsu…
;

478 } 
	g„v
;

479 } 
	gd©a
;

480 } 
	t_nc_evít
;

484 
	gcou¡
;

485 
	gªsu…_Êags
;

486 
_nc_evít
 *
	gevíts
[1];

487 } 
	t_nc_evíéi°
;

489 
NCURSES_EXPORT
(Ë
wgëch_evíts
 (
WINDOW
 *, 
_nc_evíéi°
 *);

490 
NCURSES_EXPORT
(Ë
wgën°r_evíts
 (
WINDOW
 *,*,,
_nc_evíéi°
 *);

502 #i‡!(
deföed
(
__GNUC__
Ë|| deföed(
__GNUG__
Ë|| deföed(
__©åibuã__
))

503 
	#__©åibuã__
(
p
Ë

	)

514 #i‚de‡
GCC_PRINTFLIKE


515 #i‡
deföed
(
GCC_PRINTF
Ë&& !deföed(
¥ötf
)

516 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,fmt,v¨)))

	)

518 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë

	)

522 #i‚de‡
GCC_SCANFLIKE


523 #i‡
deföed
(
GCC_SCANF
Ë&& !deföed(
sˇnf
)

524 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
sˇnf
,fmt,v¨)))

	)

526 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë

	)

530 #i‚def 
GCC_NORETURN


531 
	#GCC_NORETURN


	)

534 #i‚def 
GCC_UNUSED


535 
	#GCC_UNUSED


	)

542 (*
	gNCURSES_OUTC
)();

551 
NCURSES_EXPORT
(Ë
addch
 (c⁄° 
chty≥
);

552 
NCURSES_EXPORT
(Ë
addchn°r
 (c⁄° 
chty≥
 *, );

553 
NCURSES_EXPORT
(Ë
addch°r
 (c⁄° 
chty≥
 *);

554 
NCURSES_EXPORT
(Ë
addn°r
 (const *, );

555 
NCURSES_EXPORT
(Ë
add°r
 (const *);

556 
NCURSES_EXPORT
(Ë
©åoff
 (
NCURSES_ATTR_T
);

557 
NCURSES_EXPORT
(Ë
©å⁄
 (
NCURSES_ATTR_T
);

558 
NCURSES_EXPORT
(Ë
©å£t
 (
NCURSES_ATTR_T
);

559 
NCURSES_EXPORT
(Ë
©å_gë
 (
©å_t
 *, *, *);

560 
NCURSES_EXPORT
(Ë
©å_off
 (
©å_t
, *);

561 
NCURSES_EXPORT
(Ë
©å_⁄
 (
©å_t
, *);

562 
NCURSES_EXPORT
(Ë
©å_£t
 (
©å_t
, , *);

563 
NCURSES_EXPORT
(Ë
baudøã
 ();

564 
NCURSES_EXPORT
(Ë
bìp
 ();

565 
NCURSES_EXPORT
(Ë
bkgd
 (
chty≥
);

566 
NCURSES_EXPORT
(Ë
bkgd£t
 (
chty≥
);

567 
NCURSES_EXPORT
(Ë
b‹dî
 (
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

568 
NCURSES_EXPORT
(Ë
box
 (
WINDOW
 *, 
chty≥
, chtype);

569 
NCURSES_EXPORT
(
boﬁ
Ë
ˇn_ch™ge_cﬁ‹
 ();

570 
NCURSES_EXPORT
(Ë
cbªak
 ();

571 
NCURSES_EXPORT
(Ë
chg©
 (, 
©å_t
, , const *);

572 
NCURSES_EXPORT
(Ë
˛ór
 ();

573 
NCURSES_EXPORT
(Ë
˛órok
 (
WINDOW
 *,
boﬁ
);

574 
NCURSES_EXPORT
(Ë
˛πobŸ
 ();

575 
NCURSES_EXPORT
(Ë
˛π€ﬁ
 ();

576 
NCURSES_EXPORT
(Ë
cﬁ‹_c⁄ã¡
 (,*,*,*);

577 
NCURSES_EXPORT
(Ë
cﬁ‹_£t
 (,*);

578 
NCURSES_EXPORT
(Ë
COLOR_PAIR
 ();

579 
NCURSES_EXPORT
(Ë
c›ywö
 (c⁄° 
WINDOW
*,WINDOW*,,,,,,,);

580 
NCURSES_EXPORT
(Ë
curs_£t
 ();

581 
NCURSES_EXPORT
(Ë
def_¥og_mode
 ();

582 
NCURSES_EXPORT
(Ë
def_shñl_mode
 ();

583 
NCURSES_EXPORT
(Ë
dñay_ouçut
 ();

584 
NCURSES_EXPORT
(Ë
dñch
 ();

585 
NCURSES_EXPORT
(Ë
dñs¸ìn
 (
SCREEN
 *);

586 
NCURSES_EXPORT
(Ë
dñwö
 (
WINDOW
 *);

587 
NCURSES_EXPORT
(Ë
dñëñn
 ();

588 
NCURSES_EXPORT
(
WINDOW
 *Ë
dîwö
 (WINDOW *,,,,);

589 
NCURSES_EXPORT
(Ë
doupd©e
 ();

590 
NCURSES_EXPORT
(
WINDOW
 *Ë
dupwö
 (WINDOW *);

591 
NCURSES_EXPORT
(Ë
echo
 ();

592 
NCURSES_EXPORT
(Ë
echoch¨
 (c⁄° 
chty≥
);

593 
NCURSES_EXPORT
(Ë
îa£
 ();

594 
NCURSES_EXPORT
(Ë
ídwö
 ();

595 
NCURSES_EXPORT
(Ë
îa£ch¨
 ();

596 
NCURSES_EXPORT
(Ë
fûãr
 ();

597 
NCURSES_EXPORT
(Ë
Êash
 ();

598 
NCURSES_EXPORT
(Ë
Êushöp
 ();

599 
NCURSES_EXPORT
(
chty≥
Ë
gëbkgd
 (
WINDOW
 *);

600 
NCURSES_EXPORT
(Ë
gëch
 ();

601 
NCURSES_EXPORT
(Ë
gën°r
 (*, );

602 
NCURSES_EXPORT
(Ë
gë°r
 (*);

603 
NCURSES_EXPORT
(
WINDOW
 *Ë
gëwö
 (
FILE
 *);

604 
NCURSES_EXPORT
(Ë
hÆfdñay
 ();

605 
NCURSES_EXPORT
(
boﬁ
Ë
has_cﬁ‹s
 ();

606 
NCURSES_EXPORT
(
boﬁ
Ë
has_ic
 ();

607 
NCURSES_EXPORT
(
boﬁ
Ë
has_û
 ();

608 
NCURSES_EXPORT
(Ë
hlöe
 (
chty≥
, );

609 
NCURSES_EXPORT
(Ë
idcok
 (
WINDOW
 *, 
boﬁ
);

610 
NCURSES_EXPORT
(Ë
idlok
 (
WINDOW
 *, 
boﬁ
);

611 
NCURSES_EXPORT
(Ë
immedok
 (
WINDOW
 *, 
boﬁ
);

612 
NCURSES_EXPORT
(
chty≥
Ë
öch
 ();

613 
NCURSES_EXPORT
(Ë
öchn°r
 (
chty≥
 *, );

614 
NCURSES_EXPORT
(Ë
öch°r
 (
chty≥
 *);

615 
NCURSES_EXPORT
(
WINDOW
 *Ë
öôs¸
 ();

616 
NCURSES_EXPORT
(Ë
öô_cﬁ‹
 (,,,);

617 
NCURSES_EXPORT
(Ë
öô_∑ú
 (,,);

618 
NCURSES_EXPORT
(Ë
ön°r
 (*, );

619 
NCURSES_EXPORT
(Ë
ösch
 (
chty≥
);

620 
NCURSES_EXPORT
(Ë
ösdñ 
 ();

621 
NCURSES_EXPORT
(Ë
ö£π 
 ();

622 
NCURSES_EXPORT
(Ë
ö¢°r
 (const *, );

623 
NCURSES_EXPORT
(Ë
ös°r
 (const *);

624 
NCURSES_EXPORT
(Ë
ö°r
 (*);

625 
NCURSES_EXPORT
(Ë
öåÊush
 (
WINDOW
 *,
boﬁ
);

626 
NCURSES_EXPORT
(
boﬁ
Ë
i£ndwö
 ();

627 
NCURSES_EXPORT
(
boﬁ
Ë
is_löëouched
 (
WINDOW
 *,);

628 
NCURSES_EXPORT
(
boﬁ
Ë
is_wötouched
 (
WINDOW
 *);

629 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key«me
 ();

630 
NCURSES_EXPORT
(Ë
key∑d
 (
WINDOW
 *,
boﬁ
);

631 
NCURSES_EXPORT
(Ë
kûlch¨
 ();

632 
NCURSES_EXPORT
(Ë
Àaveok
 (
WINDOW
 *,
boﬁ
);

633 
NCURSES_EXPORT
(*Ë
l⁄g«me
 ();

634 
NCURSES_EXPORT
(Ë
mëa
 (
WINDOW
 *,
boﬁ
);

635 
NCURSES_EXPORT
(Ë
move
 (, );

636 
NCURSES_EXPORT
(Ë
mvaddch
 (, , c⁄° 
chty≥
);

637 
NCURSES_EXPORT
(Ë
mvaddchn°r
 (, , c⁄° 
chty≥
 *, );

638 
NCURSES_EXPORT
(Ë
mvaddch°r
 (, , c⁄° 
chty≥
 *);

639 
NCURSES_EXPORT
(Ë
mvaddn°r
 (, , const *, );

640 
NCURSES_EXPORT
(Ë
mvadd°r
 (, , const *);

641 
NCURSES_EXPORT
(Ë
mvchg©
 (, , , 
©å_t
, , const *);

642 
NCURSES_EXPORT
(Ë
mvcur
 (,,,);

643 
NCURSES_EXPORT
(Ë
mvdñch
 (, );

644 
NCURSES_EXPORT
(Ë
mvdîwö
 (
WINDOW
 *, , );

645 
NCURSES_EXPORT
(Ë
mvgëch
 (, );

646 
NCURSES_EXPORT
(Ë
mvgën°r
 (, , *, );

647 
NCURSES_EXPORT
(Ë
mvgë°r
 (, , *);

648 
NCURSES_EXPORT
(Ë
mvhlöe
 (, , 
chty≥
, );

649 
NCURSES_EXPORT
(
chty≥
Ë
mvöch
 (, );

650 
NCURSES_EXPORT
(Ë
mvöchn°r
 (, , 
chty≥
 *, );

651 
NCURSES_EXPORT
(Ë
mvöch°r
 (, , 
chty≥
 *);

652 
NCURSES_EXPORT
(Ë
mvön°r
 (, , *, );

653 
NCURSES_EXPORT
(Ë
mvösch
 (, , 
chty≥
);

654 
NCURSES_EXPORT
(Ë
mvö¢°r
 (, , const *, );

655 
NCURSES_EXPORT
(Ë
mvös°r
 (, , const *);

656 
NCURSES_EXPORT
(Ë
mvö°r
 (, , *);

657 
NCURSES_EXPORT
(Ë
mv¥ötw
 (,, const *,...)

658 
GCC_PRINTFLIKE
(3,4);

659 
NCURSES_EXPORT
(Ë
mvsˇnw
 (,, 
NCURSES_CONST
 *,...)

660 
GCC_SCANFLIKE
(3,4);

661 
NCURSES_EXPORT
(Ë
mvvlöe
 (, , 
chty≥
, );

662 
NCURSES_EXPORT
(Ë
mvwaddch
 (
WINDOW
 *, , , c⁄° 
chty≥
);

663 
NCURSES_EXPORT
(Ë
mvwaddchn°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *, );

664 
NCURSES_EXPORT
(Ë
mvwaddch°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *);

665 
NCURSES_EXPORT
(Ë
mvwaddn°r
 (
WINDOW
 *, , , const *, );

666 
NCURSES_EXPORT
(Ë
mvwadd°r
 (
WINDOW
 *, , , const *);

667 
NCURSES_EXPORT
(Ë
mvwchg©
 (
WINDOW
 *, , , , 
©å_t
, , const *);

668 
NCURSES_EXPORT
(Ë
mvwdñch
 (
WINDOW
 *, , );

669 
NCURSES_EXPORT
(Ë
mvwgëch
 (
WINDOW
 *, , );

670 
NCURSES_EXPORT
(Ë
mvwgën°r
 (
WINDOW
 *, , , *, );

671 
NCURSES_EXPORT
(Ë
mvwgë°r
 (
WINDOW
 *, , , *);

672 
NCURSES_EXPORT
(Ë
mvwhlöe
 (
WINDOW
 *, , , 
chty≥
, );

673 
NCURSES_EXPORT
(Ë
mvwö
 (
WINDOW
 *,,);

674 
NCURSES_EXPORT
(
chty≥
Ë
mvwöch
 (
WINDOW
 *, , );

675 
NCURSES_EXPORT
(Ë
mvwöchn°r
 (
WINDOW
 *, , , 
chty≥
 *, );

676 
NCURSES_EXPORT
(Ë
mvwöch°r
 (
WINDOW
 *, , , 
chty≥
 *);

677 
NCURSES_EXPORT
(Ë
mvwön°r
 (
WINDOW
 *, , , *, );

678 
NCURSES_EXPORT
(Ë
mvwösch
 (
WINDOW
 *, , , 
chty≥
);

679 
NCURSES_EXPORT
(Ë
mvwö¢°r
 (
WINDOW
 *, , , const *, );

680 
NCURSES_EXPORT
(Ë
mvwös°r
 (
WINDOW
 *, , , const *);

681 
NCURSES_EXPORT
(Ë
mvwö°r
 (
WINDOW
 *, , , *);

682 
NCURSES_EXPORT
(Ë
mvw¥ötw
 (
WINDOW
*,,, const *,...)

683 
GCC_PRINTFLIKE
(4,5);

684 
NCURSES_EXPORT
(Ë
mvwsˇnw
 (
WINDOW
 *,,, 
NCURSES_CONST
 *,...)

685 
GCC_SCANFLIKE
(4,5);

686 
NCURSES_EXPORT
(Ë
mvwvlöe
 (
WINDOW
 *,, , 
chty≥
, );

687 
NCURSES_EXPORT
(Ë
«pms
 ();

688 
NCURSES_EXPORT
(
WINDOW
 *Ë
√w∑d
 (,);

689 
NCURSES_EXPORT
(
SCREEN
 *Ë
√wãrm
 (
NCURSES_CONST
 *,
FILE
 *,FILE *);

690 
NCURSES_EXPORT
(
WINDOW
 *Ë
√wwö
 (,,,);

691 
NCURSES_EXPORT
(Ë
∆
 ();

692 
NCURSES_EXPORT
(Ë
nocbªak
 ();

693 
NCURSES_EXPORT
(Ë
nodñay
 (
WINDOW
 *,
boﬁ
);

694 
NCURSES_EXPORT
(Ë
n€cho
 ();

695 
NCURSES_EXPORT
(Ë
n⁄l
 ();

696 
NCURSES_EXPORT
(Ë
noqiÊush
 ();

697 
NCURSES_EXPORT
(Ë
n‹aw
 ();

698 
NCURSES_EXPORT
(Ë
nŸimeout
 (
WINDOW
 *,
boﬁ
);

699 
NCURSES_EXPORT
(Ë
ovîœy
 (c⁄° 
WINDOW
*,WINDOW *);

700 
NCURSES_EXPORT
(Ë
ovîwrôe
 (c⁄° 
WINDOW
*,WINDOW *);

701 
NCURSES_EXPORT
(Ë
∑ú_c⁄ã¡
 (,*,*);

702 
NCURSES_EXPORT
(Ë
PAIR_NUMBER
 ();

703 
NCURSES_EXPORT
(Ë
≥choch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

704 
NCURSES_EXPORT
(Ë
≤ouåe‰esh
 (
WINDOW
*,,,,,,);

705 
NCURSES_EXPORT
(Ë
¥e‰esh
 (
WINDOW
 *,,,,,,);

706 
NCURSES_EXPORT
(Ë
¥ötw
 (const *,...)

707 
GCC_PRINTFLIKE
(1,2);

708 
NCURSES_EXPORT
(Ë
putwö
 (
WINDOW
 *, 
FILE
 *);

709 
NCURSES_EXPORT
(Ë
qiÊush
 ();

710 
NCURSES_EXPORT
(Ë
øw
 ();

711 
NCURSES_EXPORT
(Ë
ªdøwwö
 (
WINDOW
 *);

712 
NCURSES_EXPORT
(Ë
ª‰esh
 ();

713 
NCURSES_EXPORT
(Ë
ª£ây
 ();

714 
NCURSES_EXPORT
(Ë
ª£t_¥og_mode
 ();

715 
NCURSES_EXPORT
(Ë
ª£t_shñl_mode
 ();

716 
NCURSES_EXPORT
(Ë
rùofÊöe
 (, (*)(
WINDOW
 *, ));

717 
NCURSES_EXPORT
(Ë
ßvëty
 ();

718 
NCURSES_EXPORT
(Ë
sˇnw
 (
NCURSES_CONST
 *,...)

719 
GCC_SCANFLIKE
(1,2);

720 
NCURSES_EXPORT
(Ë
s¸_dump
 (const *);

721 
NCURSES_EXPORT
(Ë
s¸_öô
 (const *);

722 
NCURSES_EXPORT
(Ë
s¸l
 ();

723 
NCURSES_EXPORT
(Ë
s¸ﬁl
 (
WINDOW
 *);

724 
NCURSES_EXPORT
(Ë
s¸ﬁlok
 (
WINDOW
 *,
boﬁ
);

725 
NCURSES_EXPORT
(Ë
s¸_ª°‹e
 (const *);

726 
NCURSES_EXPORT
(Ë
s¸_£t
 (const *);

727 
NCURSES_EXPORT
(Ë
£ts¸ªg
 (,);

728 
NCURSES_EXPORT
(
SCREEN
 *Ë
£t_ãrm
 (SCREEN *);

729 
NCURSES_EXPORT
(Ë
¶k_©åoff
 (c⁄° 
chty≥
);

730 
NCURSES_EXPORT
(Ë
¶k_©å_off
 (c⁄° 
©å_t
, *);

731 
NCURSES_EXPORT
(Ë
¶k_©å⁄
 (c⁄° 
chty≥
);

732 
NCURSES_EXPORT
(Ë
¶k_©å_⁄
 (
©å_t
,*);

733 
NCURSES_EXPORT
(Ë
¶k_©å£t
 (c⁄° 
chty≥
);

734 
NCURSES_EXPORT
(
©å_t
Ë
¶k_©å
 ();

735 
NCURSES_EXPORT
(Ë
¶k_©å_£t
 (c⁄° 
©å_t
,,*);

736 
NCURSES_EXPORT
(Ë
¶k_˛ór
 ();

737 
NCURSES_EXPORT
(Ë
¶k_cﬁ‹
 ();

738 
NCURSES_EXPORT
(Ë
¶k_öô
 ();

739 
NCURSES_EXPORT
(*Ë
¶k_œbñ
 ();

740 
NCURSES_EXPORT
(Ë
¶k_nouåe‰esh
 ();

741 
NCURSES_EXPORT
(Ë
¶k_ª‰esh
 ();

742 
NCURSES_EXPORT
(Ë
¶k_ª°‹e
 ();

743 
NCURSES_EXPORT
(Ë
¶k_£t
 (,const *,);

744 
NCURSES_EXPORT
(Ë
¶k_touch
 ();

745 
NCURSES_EXPORT
(Ë
°™dout
 ();

746 
NCURSES_EXPORT
(Ë
°™díd
 ();

747 
NCURSES_EXPORT
(Ë
°¨t_cﬁ‹
 ();

748 
NCURSES_EXPORT
(
WINDOW
 *Ë
sub∑d
 (WINDOW *, , , , );

749 
NCURSES_EXPORT
(
WINDOW
 *Ë
subwö
 (WINDOW *, , , , );

750 
NCURSES_EXPORT
(Ë
syncok
 (
WINDOW
 *, 
boﬁ
);

751 
NCURSES_EXPORT
(
chty≥
Ë
ãrm©ås
 ();

752 
NCURSES_EXPORT
(*Ë
ãrm«me
 ();

753 
NCURSES_EXPORT
(Ë
timeout
 ();

754 
NCURSES_EXPORT
(Ë
touchlöe
 (
WINDOW
 *, , );

755 
NCURSES_EXPORT
(Ë
touchwö
 (
WINDOW
 *);

756 
NCURSES_EXPORT
(Ë
ty≥ahód
 ();

757 
NCURSES_EXPORT
(Ë
ungëch
 ();

758 
NCURSES_EXPORT
(Ë
u¡ouchwö
 (
WINDOW
 *);

759 
NCURSES_EXPORT
(Ë
u£_ív
 (
boﬁ
);

760 
NCURSES_EXPORT
(Ë
vid©å
 (
chty≥
);

761 
NCURSES_EXPORT
(Ë
vidputs
 (
chty≥
, 
NCURSES_OUTC
);

762 
NCURSES_EXPORT
(Ë
vlöe
 (
chty≥
, );

763 
NCURSES_EXPORT
(Ë
vw¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

764 
NCURSES_EXPORT
(Ë
vw_¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

765 
NCURSES_EXPORT
(Ë
vwsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

766 
NCURSES_EXPORT
(Ë
vw_sˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

767 
NCURSES_EXPORT
(Ë
waddch
 (
WINDOW
 *, c⁄° 
chty≥
);

768 
NCURSES_EXPORT
(Ë
waddchn°r
 (
WINDOW
 *,c⁄° 
chty≥
 *,);

769 
NCURSES_EXPORT
(Ë
waddch°r
 (
WINDOW
 *,c⁄° 
chty≥
 *);

770 
NCURSES_EXPORT
(Ë
waddn°r
 (
WINDOW
 *,const *,);

771 
NCURSES_EXPORT
(Ë
wadd°r
 (
WINDOW
 *,const *);

772 
NCURSES_EXPORT
(Ë
w©å⁄
 (
WINDOW
 *, );

773 
NCURSES_EXPORT
(Ë
w©åoff
 (
WINDOW
 *, );

774 
NCURSES_EXPORT
(Ë
w©å£t
 (
WINDOW
 *, );

775 
NCURSES_EXPORT
(Ë
w©å_gë
 (
WINDOW
 *, 
©å_t
 *, *, *);

776 
NCURSES_EXPORT
(Ë
w©å_⁄
 (
WINDOW
 *, 
©å_t
, *);

777 
NCURSES_EXPORT
(Ë
w©å_off
 (
WINDOW
 *, 
©å_t
, *);

778 
NCURSES_EXPORT
(Ë
w©å_£t
 (
WINDOW
 *, 
©å_t
, , *);

779 
NCURSES_EXPORT
(Ë
wbkgd
 (
WINDOW
 *, 
chty≥
);

780 
NCURSES_EXPORT
(Ë
wbkgd£t
 (
WINDOW
 *,
chty≥
);

781 
NCURSES_EXPORT
(Ë
wb‹dî
 (
WINDOW
 *,
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

782 
NCURSES_EXPORT
(Ë
wchg©
 (
WINDOW
 *, , 
©å_t
, , const *);

783 
NCURSES_EXPORT
(Ë
w˛ór
 (
WINDOW
 *);

784 
NCURSES_EXPORT
(Ë
w˛πobŸ
 (
WINDOW
 *);

785 
NCURSES_EXPORT
(Ë
w˛π€ﬁ
 (
WINDOW
 *);

786 
NCURSES_EXPORT
(Ë
wcﬁ‹_£t
 (
WINDOW
*,,*);

787 
NCURSES_EXPORT
(Ë
wcursyncup
 (
WINDOW
 *);

788 
NCURSES_EXPORT
(Ë
wdñch
 (
WINDOW
 *);

789 
NCURSES_EXPORT
(Ë
wdñëñn
 (
WINDOW
 *);

790 
NCURSES_EXPORT
(Ë
wechoch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

791 
NCURSES_EXPORT
(Ë
wîa£
 (
WINDOW
 *);

792 
NCURSES_EXPORT
(Ë
wgëch
 (
WINDOW
 *);

793 
NCURSES_EXPORT
(Ë
wgën°r
 (
WINDOW
 *,*,);

794 
NCURSES_EXPORT
(Ë
wgë°r
 (
WINDOW
 *, *);

795 
NCURSES_EXPORT
(Ë
whlöe
 (
WINDOW
 *, 
chty≥
, );

796 
NCURSES_EXPORT
(
chty≥
Ë
wöch
 (
WINDOW
 *);

797 
NCURSES_EXPORT
(Ë
wöchn°r
 (
WINDOW
 *, 
chty≥
 *, );

798 
NCURSES_EXPORT
(Ë
wöch°r
 (
WINDOW
 *, 
chty≥
 *);

799 
NCURSES_EXPORT
(Ë
wön°r
 (
WINDOW
 *, *, );

800 
NCURSES_EXPORT
(Ë
wösch
 (
WINDOW
 *, 
chty≥
);

801 
NCURSES_EXPORT
(Ë
wösdñ 
 (
WINDOW
 *,);

802 
NCURSES_EXPORT
(Ë
wö£π 
 (
WINDOW
 *);

803 
NCURSES_EXPORT
(Ë
wö¢°r
 (
WINDOW
 *, const *,);

804 
NCURSES_EXPORT
(Ë
wös°r
 (
WINDOW
 *, const *);

805 
NCURSES_EXPORT
(Ë
wö°r
 (
WINDOW
 *, *);

806 
NCURSES_EXPORT
(Ë
wmove
 (
WINDOW
 *,,);

807 
NCURSES_EXPORT
(Ë
wnouåe‰esh
 (
WINDOW
 *);

808 
NCURSES_EXPORT
(Ë
w¥ötw
 (
WINDOW
 *, const *,...)

809 
GCC_PRINTFLIKE
(2,3);

810 
NCURSES_EXPORT
(Ë
wªdøw 
 (
WINDOW
 *,,);

811 
NCURSES_EXPORT
(Ë
wª‰esh
 (
WINDOW
 *);

812 
NCURSES_EXPORT
(Ë
wsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,...)

813 
GCC_SCANFLIKE
(2,3);

814 
NCURSES_EXPORT
(Ë
ws¸l
 (
WINDOW
 *,);

815 
NCURSES_EXPORT
(Ë
w£ts¸ªg
 (
WINDOW
 *,,);

816 
NCURSES_EXPORT
(Ë
w°™dout
 (
WINDOW
 *);

817 
NCURSES_EXPORT
(Ë
w°™díd
 (
WINDOW
 *);

818 
NCURSES_EXPORT
(Ë
wsyncdown
 (
WINDOW
 *);

819 
NCURSES_EXPORT
(Ë
wsyncup
 (
WINDOW
 *);

820 
NCURSES_EXPORT
(Ë
wtimeout
 (
WINDOW
 *,);

821 
NCURSES_EXPORT
(Ë
wtouch 
 (
WINDOW
 *,,,);

822 
NCURSES_EXPORT
(Ë
wvlöe
 (
WINDOW
 *,
chty≥
,);

827 
NCURSES_EXPORT
(Ë
tigëÊag
 (
NCURSES_CONST
 *);

828 
NCURSES_EXPORT
(Ë
tigënum
 (
NCURSES_CONST
 *);

829 
NCURSES_EXPORT
(*Ë
tigë°r
 (
NCURSES_CONST
 *);

830 
NCURSES_EXPORT
(Ë
puç
 (const *);

832 #i‡
NCURSES_TPARM_VARARGS


833 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ...);

835 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ,,,,,,,,);

836 
NCURSES_EXPORT
(*Ë
ç¨m_v¨¨gs
 (
NCURSES_CONST
 *, ...);

839 
NCURSES_EXPORT
(*Ë
tù¨m
 (const *, ...);

844 
NCURSES_EXPORT
(Ë
gë©ås
 (c⁄° 
WINDOW
 *);

845 
NCURSES_EXPORT
(Ë
gëcurx
 (c⁄° 
WINDOW
 *);

846 
NCURSES_EXPORT
(Ë
gëcury
 (c⁄° 
WINDOW
 *);

847 
NCURSES_EXPORT
(Ë
gëbegx
 (c⁄° 
WINDOW
 *);

848 
NCURSES_EXPORT
(Ë
gëbegy
 (c⁄° 
WINDOW
 *);

849 
NCURSES_EXPORT
(Ë
gëmaxx
 (c⁄° 
WINDOW
 *);

850 
NCURSES_EXPORT
(Ë
gëmaxy
 (c⁄° 
WINDOW
 *);

851 
NCURSES_EXPORT
(Ë
gë∑rx
 (c⁄° 
WINDOW
 *);

852 
NCURSES_EXPORT
(Ë
gë∑ry
 (c⁄° 
WINDOW
 *);

857 #i‚de‡
NCURSES_WIDECHAR


858 
	#vid_©å
(
a
,
∑ú
,
›ts
Ë
	`vid©å
◊)

	)

865 #unde‡
NCURSES_EXT_FUNCS


866 
	#NCURSES_EXT_FUNCS
 20110404

	)

867 (*
	gNCURSES_WINDOW_CB
)(
	tWINDOW
 *, *);

868 (*
	gNCURSES_SCREEN_CB
)(
	tSCREEN
 *, *);

869 
NCURSES_EXPORT
(
boﬁ
Ë
is_ãrm_ªsized
 (, );

870 
NCURSES_EXPORT
(*Ë
keybound
 (, );

871 
NCURSES_EXPORT
(c⁄° *Ë
cur£s_vîsi⁄
 ();

872 
NCURSES_EXPORT
(Ë
assume_deÁu…_cﬁ‹s
 (, );

873 
NCURSES_EXPORT
(Ë
deföe_key
 (const *, );

874 
NCURSES_EXPORT
(Ë
gë_escdñay
 ();

875 
NCURSES_EXPORT
(Ë
key_deföed
 (const *);

876 
NCURSES_EXPORT
(Ë
keyok
 (, 
boﬁ
);

877 
NCURSES_EXPORT
(Ë
ªsize_ãrm
 (, );

878 
NCURSES_EXPORT
(Ë
ªsizëîm
 (, );

879 
NCURSES_EXPORT
(Ë
£t_escdñay
 ();

880 
NCURSES_EXPORT
(Ë
£t_èbsize
 ();

881 
NCURSES_EXPORT
(Ë
u£_deÁu…_cﬁ‹s
 ();

882 
NCURSES_EXPORT
(Ë
u£_exãnded_«mes
 (
boﬁ
);

883 
NCURSES_EXPORT
(Ë
u£_Àgacy_codög
 ();

884 
NCURSES_EXPORT
(Ë
u£_s¸ìn
 (
SCREEN
 *, 
NCURSES_SCREEN_CB
, *);

885 
NCURSES_EXPORT
(Ë
u£_wödow
 (
WINDOW
 *, 
NCURSES_WINDOW_CB
, *);

886 
NCURSES_EXPORT
(Ë
wªsize
 (
WINDOW
 *, , );

887 
NCURSES_EXPORT
(Ë
nofûãr
();

893 
NCURSES_EXPORT
(
WINDOW
 *Ë
wgë∑ª¡
 (const WINDOW *);

894 
NCURSES_EXPORT
(
boﬁ
Ë
is_˛óªd
 (c⁄° 
WINDOW
 *);

895 
NCURSES_EXPORT
(
boﬁ
Ë
is_idcok
 (c⁄° 
WINDOW
 *);

896 
NCURSES_EXPORT
(
boﬁ
Ë
is_idlok
 (c⁄° 
WINDOW
 *);

897 
NCURSES_EXPORT
(
boﬁ
Ë
is_immedok
 (c⁄° 
WINDOW
 *);

898 
NCURSES_EXPORT
(
boﬁ
Ë
is_key∑d
 (c⁄° 
WINDOW
 *);

899 
NCURSES_EXPORT
(
boﬁ
Ë
is_Àaveok
 (c⁄° 
WINDOW
 *);

900 
NCURSES_EXPORT
(
boﬁ
Ë
is_nodñay
 (c⁄° 
WINDOW
 *);

901 
NCURSES_EXPORT
(
boﬁ
Ë
is_nŸimeout
 (c⁄° 
WINDOW
 *);

902 
NCURSES_EXPORT
(
boﬁ
Ë
is_∑d
 (c⁄° 
WINDOW
 *);

903 
NCURSES_EXPORT
(
boﬁ
Ë
is_s¸ﬁlok
 (c⁄° 
WINDOW
 *);

904 
NCURSES_EXPORT
(
boﬁ
Ë
is_subwö
 (c⁄° 
WINDOW
 *);

905 
NCURSES_EXPORT
(
boﬁ
Ë
is_syncok
 (c⁄° 
WINDOW
 *);

906 
NCURSES_EXPORT
(Ë
wgës¸ªg
 (c⁄° 
WINDOW
 *, *, *);

909 
	#cur£s_vîsi⁄
(Ë
NCURSES_VERSION


	)

917 #unde‡
NCURSES_SP_FUNCS


918 
	#NCURSES_SP_FUNCS
 20110404

	)

919 
	#NCURSES_SP_NAME
(
«me
Ë«me##
_•


	)

922 
	#NCURSES_SP_OUTC
 
	`NCURSES_SP_NAME
(
NCURSES_OUTC
)

	)

923 (*
	gNCURSES_SP_OUTC
)(
	tSCREEN
*, );

925 
NCURSES_EXPORT
(
SCREEN
 *Ë
√w_¥es¸
 ();

927 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
baudøã
Ë(
SCREEN
*);

928 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
bìp
Ë(
SCREEN
*);

929 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
ˇn_ch™ge_cﬁ‹
Ë(
SCREEN
*);

930 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
cbªak
Ë(
SCREEN
*);

931 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
curs_£t
Ë(
SCREEN
*, );

932 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
cﬁ‹_c⁄ã¡
Ë(
SCREEN
*, , *, *, *);

933 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
def_¥og_mode
Ë(
SCREEN
*);

934 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
def_shñl_mode
Ë(
SCREEN
*);

935 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
dñay_ouçut
Ë(
SCREEN
*, );

936 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
doupd©e
Ë(
SCREEN
*);

937 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
echo
Ë(
SCREEN
*);

938 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ídwö
Ë(
SCREEN
*);

939 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
îa£ch¨
Ë(
SCREEN
*);

940 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
fûãr
Ë(
SCREEN
*);

941 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
Êash
Ë(
SCREEN
*);

942 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
Êushöp
Ë(
SCREEN
*);

943 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
gëwö
Ë(
SCREEN
*, 
FILE
 *);

944 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
hÆfdñay
Ë(
SCREEN
*, );

945 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_cﬁ‹s
Ë(
SCREEN
*);

946 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_ic
Ë(
SCREEN
*);

947 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_û
Ë(
SCREEN
*);

948 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_cﬁ‹
Ë(
SCREEN
*, , , , );

949 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_∑ú
Ë(
SCREEN
*, , , );

950 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öåÊush
Ë(
SCREEN
*, 
WINDOW
*, 
boﬁ
);

951 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
i£ndwö
Ë(
SCREEN
*);

952 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
NCURSES_SP_NAME
(
key«me
Ë(
SCREEN
*, );

953 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
kûlch¨
Ë(
SCREEN
*);

954 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
l⁄g«me
Ë(
SCREEN
*);

955 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
mvcur
Ë(
SCREEN
*, , , , );

956 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
«pms
Ë(
SCREEN
*, );

957 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
√w∑d
Ë(
SCREEN
*, , );

958 
NCURSES_EXPORT
(
SCREEN
 *Ë
NCURSES_SP_NAME
(
√wãrm
Ë(SCREEN*, 
NCURSES_CONST
 *, 
FILE
 *, FILE *);

959 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
√wwö
Ë(
SCREEN
*, , , , );

960 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
∆
Ë(
SCREEN
*);

961 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
nocbªak
Ë(
SCREEN
*);

962 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n€cho
Ë(
SCREEN
*);

963 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n⁄l
Ë(
SCREEN
*);

964 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
noqiÊush
Ë(
SCREEN
*);

965 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n‹aw
Ë(
SCREEN
*);

966 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
∑ú_c⁄ã¡
Ë(
SCREEN
*, , *, *);

967 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
qiÊush
Ë(
SCREEN
*);

968 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
øw
Ë(
SCREEN
*);

969 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£t_¥og_mode
Ë(
SCREEN
*);

970 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£t_shñl_mode
Ë(
SCREEN
*);

971 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£ây
Ë(
SCREEN
*);

972 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
rùofÊöe
Ë(
SCREEN
*, , (*)(
WINDOW
 *, ));

973 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ßvëty
Ë(
SCREEN
*);

974 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_öô
Ë(
SCREEN
*, const *);

975 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_ª°‹e
Ë(
SCREEN
*, const *);

976 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_£t
Ë(
SCREEN
*, const *);

977 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©åoff
Ë(
SCREEN
*, c⁄° 
chty≥
);

978 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å⁄
Ë(
SCREEN
*, c⁄° 
chty≥
);

979 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å£t
Ë(
SCREEN
*, c⁄° 
chty≥
);

980 
NCURSES_EXPORT
(
©å_t
Ë
NCURSES_SP_NAME
(
¶k_©å
Ë(
SCREEN
*);

981 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å_£t
Ë(
SCREEN
*, c⁄° 
©å_t
, , *);

982 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_˛ór
Ë(
SCREEN
*);

983 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_cﬁ‹
Ë(
SCREEN
*, );

984 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_öô
Ë(
SCREEN
*, );

985 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
¶k_œbñ
Ë(
SCREEN
*, );

986 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_nouåe‰esh
Ë(
SCREEN
*);

987 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_ª‰esh
Ë(
SCREEN
*);

988 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_ª°‹e
Ë(
SCREEN
*);

989 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_£t
Ë(
SCREEN
*, , const *, );

990 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_touch
Ë(
SCREEN
*);

991 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
°¨t_cﬁ‹
Ë(
SCREEN
*);

992 
NCURSES_EXPORT
(
chty≥
Ë
NCURSES_SP_NAME
(
ãrm©ås
Ë(
SCREEN
*);

993 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
ãrm«me
Ë(
SCREEN
*);

994 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ty≥ahód
Ë(
SCREEN
*, );

995 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungëch
Ë(
SCREEN
*, );

996 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_ív
Ë(
SCREEN
*, 
boﬁ
);

997 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vid©å
Ë(
SCREEN
*, 
chty≥
);

998 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vidputs
Ë(
SCREEN
*, 
chty≥
, 
NCURSES_SP_OUTC
);

1000 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
keybound
Ë(
SCREEN
*, , );

1001 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
assume_deÁu…_cﬁ‹s
Ë(
SCREEN
*, , );

1002 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
deföe_key
Ë(
SCREEN
*, const *, );

1003 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
gë_escdñay
Ë(
SCREEN
*);

1004 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
is_ãrm_ªsized
Ë(
SCREEN
*, , );

1005 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
key_deföed
Ë(
SCREEN
*, const *);

1006 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
keyok
Ë(
SCREEN
*, , 
boﬁ
);

1007 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
nofûãr
Ë(
SCREEN
*);

1008 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ªsize_ãrm
Ë(
SCREEN
*, , );

1009 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ªsizëîm
Ë(
SCREEN
*, , );

1010 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
£t_escdñay
Ë(
SCREEN
*, );

1011 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
£t_èbsize
Ë(
SCREEN
*, );

1012 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_deÁu…_cﬁ‹s
Ë(
SCREEN
*);

1013 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_Àgacy_codög
Ë(
SCREEN
*, );

1016 #unde‡
NCURSES_SP_FUNCS


1017 
	#NCURSES_SP_FUNCS
 0

	)

1018 
	#NCURSES_SP_NAME
(
«me
Ë
	)
name

1019 
	#NCURSES_SP_OUTC
 
NCURSES_OUTC


	)

1024 
	#NCURSES_ATTR_SHIFT
 8

	)

1025 
	#NCURSES_BITS
(
mask
,
shi·
Ë((maskË<< ((shi·Ë+ 
NCURSES_ATTR_SHIFT
))

	)

1027 
	#A_NORMAL
 (1UL - 1UL)

	)

1028 
	#A_ATTRIBUTES
 
	`NCURSES_BITS
(~(1UL - 1UL),0)

	)

1029 
	#A_CHARTEXT
 (
	`NCURSES_BITS
(1UL,0Ë- 1UL)

	)

1030 
	#A_COLOR
 
	`NCURSES_BITS
(((1ULË<< 8Ë- 1UL,0)

	)

1031 
	#A_STANDOUT
 
	`NCURSES_BITS
(1UL,8)

	)

1032 
	#A_UNDERLINE
 
	`NCURSES_BITS
(1UL,9)

	)

1033 
	#A_REVERSE
 
	`NCURSES_BITS
(1UL,10)

	)

1034 
	#A_BLINK
 
	`NCURSES_BITS
(1UL,11)

	)

1035 
	#A_DIM
 
	`NCURSES_BITS
(1UL,12)

	)

1036 
	#A_BOLD
 
	`NCURSES_BITS
(1UL,13)

	)

1037 
	#A_ALTCHARSET
 
	`NCURSES_BITS
(1UL,14)

	)

1038 
	#A_INVIS
 
	`NCURSES_BITS
(1UL,15)

	)

1039 
	#A_PROTECT
 
	`NCURSES_BITS
(1UL,16)

	)

1040 
	#A_HORIZONTAL
 
	`NCURSES_BITS
(1UL,17)

	)

1041 
	#A_LEFT
 
	`NCURSES_BITS
(1UL,18)

	)

1042 
	#A_LOW
 
	`NCURSES_BITS
(1UL,19)

	)

1043 
	#A_RIGHT
 
	`NCURSES_BITS
(1UL,20)

	)

1044 
	#A_TOP
 
	`NCURSES_BITS
(1UL,21)

	)

1045 
	#A_VERTICAL
 
	`NCURSES_BITS
(1UL,22)

	)

1057 
	#gëyx
(
wö
,
y
,
x
Ë(y = 
	`gëcury
(wö), x = 
	`gëcurx
(wö))

	)

1058 
	#gëbegyx
(
wö
,
y
,
x
Ë(y = 
	`gëbegy
(wö), x = 
	`gëbegx
(wö))

	)

1059 
	#gëmaxyx
(
wö
,
y
,
x
Ë(y = 
	`gëmaxy
(wö), x = 
	`gëmaxx
(wö))

	)

1060 
	#gë∑ryx
(
wö
,
y
,
x
Ë(y = 
	`gë∑ry
(wö), x = 
	`gë∑rx
(wö))

	)

1062 
	#gësyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

1063 i‡(
	`is_Àaveok
(
√ws¸
)) \

1064 (
y
Ë(
x
) = -1; \

1066 
	`gëyx
(
√ws¸
,(
y
), (
x
)); \

1068 } 0)

	)

1070 
	#£tsyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

1071 i‡((
y
Ë=-1 && (
x
) == -1) \

1072 
	`Àaveok
(
√ws¸
, 
TRUE
); \

1074 
	`Àaveok
(
√ws¸
, 
FALSE
); \

1075 
	`wmove
(
√ws¸
, (
y
), (
x
)); \

1078 } 0)

	)

1080 #i‚de‡
NCURSES_NOMACROS


1086 
	#wgë°r
(
w
, 
s
Ë
	`wgën°r
(w, s, -1)

	)

1087 
	#gën°r
(
s
, 
n
Ë
	`wgën°r
(
°ds¸
, s,Ç)

	)

1089 
	#£âîm
(
ãrm
Ë
	`£tu±îm
—îm, 1, (*)0)

	)

1091 
	#fixãrm
(Ë
	`ª£t_¥og_mode
()

	)

1092 
	#ª£âîm
(Ë
	`ª£t_shñl_mode
()

	)

1093 
	#ßvëîm
(Ë
	`def_¥og_mode
()

	)

1094 
	#¸mode
(Ë
	`cbªak
()

	)

1095 
	#no¸mode
(Ë
	`nocbªak
()

	)

1096 
	#gëtmode
()

	)

1099 #i‡!
NCURSES_OPAQUE


1100 
	#gë©ås
(
wö
Ë
	`NCURSES_CAST
(, (wöË? (wö)->
_©ås
 : 
A_NORMAL
)

	)

1101 
	#gëcurx
(
wö
Ë((wöË? (wö)->
_curx
 : 
ERR
)

	)

1102 
	#gëcury
(
wö
Ë((wöË? (wö)->
_cury
 : 
ERR
)

	)

1103 
	#gëbegx
(
wö
Ë((wöË? (wö)->
_begx
 : 
ERR
)

	)

1104 
	#gëbegy
(
wö
Ë((wöË? (wö)->
_begy
 : 
ERR
)

	)

1105 
	#gëmaxx
(
wö
Ë((wöË? ((wö)->
_maxx
 + 1Ë: 
ERR
)

	)

1106 
	#gëmaxy
(
wö
Ë((wöË? ((wö)->
_maxy
 + 1Ë: 
ERR
)

	)

1107 
	#gë∑rx
(
wö
Ë((wöË? (wö)->
_∑rx
 : 
ERR
)

	)

1108 
	#gë∑ry
(
wö
Ë((wöË? (wö)->
_∑ry
 : 
ERR
)

	)

1111 
	#w°™dout
(
wö
Ë(
	`w©å£t
(wö,
A_STANDOUT
))

	)

1112 
	#w°™díd
(
wö
Ë(
	`w©å£t
(wö,
A_NORMAL
))

	)

1114 
	#w©å⁄
(
wö
,
©
Ë
	`w©å_⁄
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

1115 
	#w©åoff
(
wö
,
©
Ë
	`w©å_off
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

1117 #i‡!
NCURSES_OPAQUE


1118 #i‡
deföed
(
NCURSES_WIDECHAR
) && 0

1119 
	#w©å£t
(
wö
,
©
) ((win) \

1120 ? ((
wö
)->
_cﬁ‹
 = 
	`PAIR_NUMBER
(
©
), \

1121 (
wö
)->
_©ås
 = 
	`NCURSES_CAST
(
©å_t
, 
©
), \

1122 
OK
) \

1123 : 
ERR
)

	)

1125 
	#w©å£t
(
wö
,
©
) ((win) \

1126 ? ((
wö
)->
_©ås
 = 
	`NCURSES_CAST
(
©å_t
, 
©
), \

1127 
OK
) \

1128 : 
ERR
)

	)

1132 
	#s¸ﬁl
(
wö
Ë
	`ws¸l
(wö,1)

	)

1134 
	#touchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 1)

	)

1135 
	#touchlöe
(
wö
, 
s
, 
c
Ë
	`wtouch 
((wö), s, c, 1)

	)

1136 
	#u¡ouchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 0)

	)

1138 
	#box
(
wö
, 
v
, 
h
Ë
	`wb‹dî
(wö, v, v, h, h, 0, 0, 0, 0)

	)

1139 
	#b‹dî
(
ls
, 
rs
, 
ts
, 
bs
, 
é
, 
å
, 
bl
, 
br
Ë
	`wb‹dî
(
°ds¸
,Üs,Ñs,Ås, bs,Ål,År, bl, br)

	)

1140 
	#hlöe
(
ch
, 
n
Ë
	`whlöe
(
°ds¸
, ch,Ç)

	)

1141 
	#vlöe
(
ch
, 
n
Ë
	`wvlöe
(
°ds¸
, ch,Ç)

	)

1143 
	#wö°r
(
w
, 
s
Ë
	`wön°r
(w, s, -1)

	)

1144 
	#wöch°r
(
w
, 
s
Ë
	`wöchn°r
(w, s, -1)

	)

1145 
	#wös°r
(
w
, 
s
Ë
	`wö¢°r
(w, s, -1)

	)

1147 #i‡!
NCURSES_OPAQUE


1148 
	#ªdøwwö
(
wö
Ë
	`wªdøw 
(wö, 0, (wö)->
_maxy
+1)

	)

1151 
	#wadd°r
(
wö
,
°r
Ë
	`waddn°r
(wö,°r,-1)

	)

1152 
	#waddch°r
(
wö
,
°r
Ë
	`waddchn°r
(wö,°r,-1)

	)

1157 
	#COLOR_PAIR
(
n
Ë
	`NCURSES_BITS
“, 0)

	)

1158 
	#PAIR_NUMBER
(
a
Ë(
	`NCURSES_CAST
(,((NCURSES_CAST(,aË& 
A_COLOR
Ë>> 
NCURSES_ATTR_SHIFT
)))

	)

1164 
	#addch
(
ch
Ë
	`waddch
(
°ds¸
,ch)

	)

1165 
	#addchn°r
(
°r
,
n
Ë
	`waddchn°r
(
°ds¸
,°r,n)

	)

1166 
	#addch°r
(
°r
Ë
	`waddch°r
(
°ds¸
,°r)

	)

1167 
	#addn°r
(
°r
,
n
Ë
	`waddn°r
(
°ds¸
,°r,n)

	)

1168 
	#add°r
(
°r
Ë
	`waddn°r
(
°ds¸
,°r,-1)

	)

1169 
	#©åoff
(
©
Ë
	`w©åoff
(
°ds¸
,©)

	)

1170 
	#©å⁄
(
©
Ë
	`w©å⁄
(
°ds¸
,©)

	)

1171 
	#©å£t
(
©
Ë
	`w©å£t
(
°ds¸
,©)

	)

1172 
	#©å_gë
(
≠
,
˝
,
o
Ë
	`w©å_gë
(
°ds¸
,≠,˝,o)

	)

1173 
	#©å_off
(
a
,
o
Ë
	`w©å_off
(
°ds¸
,a,o)

	)

1174 
	#©å_⁄
(
a
,
o
Ë
	`w©å_⁄
(
°ds¸
,a,o)

	)

1175 
	#©å_£t
(
a
,
c
,
o
Ë
	`w©å_£t
(
°ds¸
,a,c,o)

	)

1176 
	#bkgd
(
ch
Ë
	`wbkgd
(
°ds¸
,ch)

	)

1177 
	#bkgd£t
(
ch
Ë
	`wbkgd£t
(
°ds¸
,ch)

	)

1178 
	#chg©
(
n
,
a
,
c
,
o
Ë
	`wchg©
(
°ds¸
,n,a,c,o)

	)

1179 
	#˛ór
(Ë
	`w˛ór
(
°ds¸
)

	)

1180 
	#˛πobŸ
(Ë
	`w˛πobŸ
(
°ds¸
)

	)

1181 
	#˛π€ﬁ
(Ë
	`w˛π€ﬁ
(
°ds¸
)

	)

1182 
	#cﬁ‹_£t
(
c
,
o
Ë
	`wcﬁ‹_£t
(
°ds¸
,c,o)

	)

1183 
	#dñch
(Ë
	`wdñch
(
°ds¸
)

	)

1184 
	#dñëñn
(Ë
	`wösdñ 
(
°ds¸
,-1)

	)

1185 
	#echoch¨
(
c
Ë
	`wechoch¨
(
°ds¸
,c)

	)

1186 
	#îa£
(Ë
	`wîa£
(
°ds¸
)

	)

1187 
	#gëch
(Ë
	`wgëch
(
°ds¸
)

	)

1188 
	#gë°r
(
°r
Ë
	`wgë°r
(
°ds¸
,°r)

	)

1189 
	#öch
(Ë
	`wöch
(
°ds¸
)

	)

1190 
	#öchn°r
(
s
,
n
Ë
	`wöchn°r
(
°ds¸
,s,n)

	)

1191 
	#öch°r
(
s
Ë
	`wöch°r
(
°ds¸
,s)

	)

1192 
	#ön°r
(
s
,
n
Ë
	`wön°r
(
°ds¸
,s,n)

	)

1193 
	#ösch
(
c
Ë
	`wösch
(
°ds¸
,c)

	)

1194 
	#ösdñ 
(
n
Ë
	`wösdñ 
(
°ds¸
,n)

	)

1195 
	#ö£π 
(Ë
	`wösdñ 
(
°ds¸
,1)

	)

1196 
	#ö¢°r
(
s
,
n
Ë
	`wö¢°r
(
°ds¸
,s,n)

	)

1197 
	#ös°r
(
s
Ë
	`wös°r
(
°ds¸
,s)

	)

1198 
	#ö°r
(
s
Ë
	`wö°r
(
°ds¸
,s)

	)

1199 
	#move
(
y
,
x
Ë
	`wmove
(
°ds¸
,y,x)

	)

1200 
	#ª‰esh
(Ë
	`wª‰esh
(
°ds¸
)

	)

1201 
	#s¸l
(
n
Ë
	`ws¸l
(
°ds¸
,n)

	)

1202 
	#£ts¸ªg
(
t
,
b
Ë
	`w£ts¸ªg
(
°ds¸
,t,b)

	)

1203 
	#°™díd
(Ë
	`w°™díd
(
°ds¸
)

	)

1204 
	#°™dout
(Ë
	`w°™dout
(
°ds¸
)

	)

1205 
	#timeout
(
dñay
Ë
	`wtimeout
(
°ds¸
,dñay)

	)

1206 
	#wdñëñn
(
wö
Ë
	`wösdñ 
(wö,-1)

	)

1207 
	#wö£π 
(
wö
Ë
	`wösdñ 
(wö,1)

	)

1213 
	#mvwaddch
(
wö
,
y
,
x
,
ch
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddch
(wö,ch))

	)

1214 
	#mvwaddchn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,n))

	)

1215 
	#mvwaddch°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,-1))

	)

1216 
	#mvwaddn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,n))

	)

1217 
	#mvwadd°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,-1))

	)

1218 
	#mvwdñch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wdñch
(wö))

	)

1219 
	#mvwchg©
(
wö
,
y
,
x
,
n
,
a
,
c
,
o
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wchg©
(wö,n,a,c,o))

	)

1220 
	#mvwgëch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgëch
(wö))

	)

1221 
	#mvwgën°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgën°r
(wö,°r,n))

	)

1222 
	#mvwgë°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë°r
(wö,°r))

	)

1223 
	#mvwhlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`whlöe
(wö,c,n))

	)

1224 
	#mvwöch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? 
	`NCURSES_CAST
(
chty≥
, ERRË: 
	`wöch
(wö))

	)

1225 
	#mvwöchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöchn°r
(wö,s,n))

	)

1226 
	#mvwöch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöch°r
(wö,s))

	)

1227 
	#mvwön°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wön°r
(wö,s,n))

	)

1228 
	#mvwösch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wösch
(wö,c))

	)

1229 
	#mvwö¢°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö¢°r
(wö,s,n))

	)

1230 
	#mvwös°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös°r
(wö,s))

	)

1231 
	#mvwö°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö°r
(wö,s))

	)

1232 
	#mvwvlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wvlöe
(wö,c,n))

	)

1234 
	#mvaddch
(
y
,
x
,
ch
Ë
	`mvwaddch
(
°ds¸
,y,x,ch)

	)

1235 
	#mvaddchn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddchn°r
(
°ds¸
,y,x,°r,n)

	)

1236 
	#mvaddch°r
(
y
,
x
,
°r
Ë
	`mvwaddch°r
(
°ds¸
,y,x,°r)

	)

1237 
	#mvaddn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddn°r
(
°ds¸
,y,x,°r,n)

	)

1238 
	#mvadd°r
(
y
,
x
,
°r
Ë
	`mvwadd°r
(
°ds¸
,y,x,°r)

	)

1239 
	#mvchg©
(
y
,
x
,
n
,
a
,
c
,
o
Ë
	`mvwchg©
(
°ds¸
,y,x,n,a,c,o)

	)

1240 
	#mvdñch
(
y
,
x
Ë
	`mvwdñch
(
°ds¸
,y,x)

	)

1241 
	#mvgëch
(
y
,
x
Ë
	`mvwgëch
(
°ds¸
,y,x)

	)

1242 
	#mvgën°r
(
y
,
x
,
°r
,
n
Ë
	`mvwgën°r
(
°ds¸
,y,x,°r,n)

	)

1243 
	#mvgë°r
(
y
,
x
,
°r
Ë
	`mvwgë°r
(
°ds¸
,y,x,°r)

	)

1244 
	#mvhlöe
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe
(
°ds¸
,y,x,c,n)

	)

1245 
	#mvöch
(
y
,
x
Ë
	`mvwöch
(
°ds¸
,y,x)

	)

1246 
	#mvöchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwöchn°r
(
°ds¸
,y,x,s,n)

	)

1247 
	#mvöch°r
(
y
,
x
,
s
Ë
	`mvwöch°r
(
°ds¸
,y,x,s)

	)

1248 
	#mvön°r
(
y
,
x
,
s
,
n
Ë
	`mvwön°r
(
°ds¸
,y,x,s,n)

	)

1249 
	#mvösch
(
y
,
x
,
c
Ë
	`mvwösch
(
°ds¸
,y,x,c)

	)

1250 
	#mvö¢°r
(
y
,
x
,
s
,
n
Ë
	`mvwö¢°r
(
°ds¸
,y,x,s,n)

	)

1251 
	#mvös°r
(
y
,
x
,
s
Ë
	`mvwös°r
(
°ds¸
,y,x,s)

	)

1252 
	#mvö°r
(
y
,
x
,
s
Ë
	`mvwö°r
(
°ds¸
,y,x,s)

	)

1253 
	#mvvlöe
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe
(
°ds¸
,y,x,c,n)

	)

1258 #i‡!
NCURSES_OPAQUE


1259 
	#gëbkgd
(
wö
Ë((wö)->
_bkgd
)

	)

1262 
	#¶k_©å_off
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©åoff
◊))

	)

1263 
	#¶k_©å_⁄
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©å⁄
◊))

	)

1265 #i‡!
NCURSES_OPAQUE


1266 #i‡
deföed
(
NCURSES_WIDECHAR
) && 0

1267 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = (◊Ë& ~
A_COLOR
), \

1268 (
wö
)->
_cﬁ‹
 = (
p
), \

1269 
OK
)

	)

1270 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!(*)0 && (*◊Ë(wö)->
_©ås
)), \

1271 ()((
p
Ë!(*)0 && (*’Ë()(
wö
)->
_cﬁ‹
)), \

1272 
OK
)

	)

1274 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = ((◊Ë& ~
A_COLOR
Ë| (
©å_t
)
	`COLOR_PAIR
’)), 
OK
)

	)

1275 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!(*)0 && (*◊Ë(wö)->
_©ås
)), \

1276 ()((
p
Ë!(*)0 && (*’Ë()
	`PAIR_NUMBER
((
wö
)->
_©ås
))), \

1277 
OK
)

	)

1287 
	#vw_¥ötw
 
vw¥ötw


	)

1288 
	#vw_sˇnw
 
vwsˇnw


	)

1294 
	#vssˇnf
(
a
,
b
,
c
Ë
	`_nc_vssˇnf
◊,b,c)

	)

1295 
NCURSES_EXPORT
(Ë
vssˇnf
(c⁄° *, c⁄° *, 
va_li°
);

1302 #i‡!
NCURSES_OPAQUE


1303 
	#is_˛óªd
(
wö
Ë((wöË? (wö)->
_˛ór
 : 
FALSE
)

	)

1304 
	#is_idcok
(
wö
Ë((wöË? (wö)->
_idcok
 : 
FALSE
)

	)

1305 
	#is_idlok
(
wö
Ë((wöË? (wö)->
_idlok
 : 
FALSE
)

	)

1306 
	#is_immedok
(
wö
Ë((wöË? (wö)->
_immed
 : 
FALSE
)

	)

1307 
	#is_key∑d
(
wö
Ë((wöË? (wö)->
_u£_key∑d
 : 
FALSE
)

	)

1308 
	#is_Àaveok
(
wö
Ë((wöË? (wö)->
_Àaveok
 : 
FALSE
)

	)

1309 
	#is_nodñay
(
wö
Ë((wöË? ((wö)->
_dñay
 =0Ë: 
FALSE
)

	)

1310 
	#is_nŸimeout
(
wö
Ë((wöË? (wö)->
_nŸimeout
 : 
FALSE
)

	)

1311 
	#is_∑d
(
wö
Ë((wöË? ((wö)->
_Êags
 & 
_ISPAD
Ë!0 : 
FALSE
)

	)

1312 
	#is_s¸ﬁlok
(
wö
Ë((wöË? (wö)->
_s¸ﬁl
 : 
FALSE
)

	)

1313 
	#is_subwö
(
wö
Ë((wöË? ((wö)->
_Êags
 & 
_SUBWIN
Ë!0 : 
FALSE
)

	)

1314 
	#is_syncok
(
wö
Ë((wöË? (wö)->
_sync
 : 
FALSE
)

	)

1315 
	#wgë∑ª¡
(
wö
Ë((wöË? (wö)->
_∑ª¡
 : 0)

	)

1316 
	#wgës¸ªg
(
wö
,
t
,
b
Ë((wöË? (*—Ë(wö)->
_ªgt›
, *(bË(wö)->
_ªgbŸtom
, 
OK
Ë: 
ERR
)

	)

1330 #i‡
NCURSES_REENTRANT


1332 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
curs¸
);

1333 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
√ws¸
);

1334 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
°ds¸
);

1335 
NCURSES_WRAPPED_VAR
(*, 
âyty≥
);

1336 
NCURSES_WRAPPED_VAR
(, 
COLORS
);

1337 
NCURSES_WRAPPED_VAR
(, 
COLOR_PAIRS
);

1338 
NCURSES_WRAPPED_VAR
(, 
COLS
);

1339 
NCURSES_WRAPPED_VAR
(, 
ESCDELAY
);

1340 
NCURSES_WRAPPED_VAR
(, 
LINES
);

1341 
NCURSES_WRAPPED_VAR
(, 
TABSIZE
);

1343 
	#curs¸
 
	`NCURSES_PUBLIC_VAR
(
	`curs¸
())

	)

1344 
	#√ws¸
 
	`NCURSES_PUBLIC_VAR
(
	`√ws¸
())

	)

1345 
	#°ds¸
 
	`NCURSES_PUBLIC_VAR
(
	`°ds¸
())

	)

1346 
	#âyty≥
 
	`NCURSES_PUBLIC_VAR
(
	`âyty≥
())

	)

1347 
	#COLORS
 
	`NCURSES_PUBLIC_VAR
(
	`COLORS
())

	)

1348 
	#COLOR_PAIRS
 
	`NCURSES_PUBLIC_VAR
(
	`COLOR_PAIRS
())

	)

1349 
	#COLS
 
	`NCURSES_PUBLIC_VAR
(
	`COLS
())

	)

1350 
	#ESCDELAY
 
	`NCURSES_PUBLIC_VAR
(
	`ESCDELAY
())

	)

1351 
	#LINES
 
	`NCURSES_PUBLIC_VAR
(
	`LINES
())

	)

1352 
	#TABSIZE
 
	`NCURSES_PUBLIC_VAR
(
	`TABSIZE
())

	)

1356 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
curs¸
;

1357 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
√ws¸
;

1358 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
°ds¸
;

1359 
NCURSES_EXPORT_VAR
(Ë
âyty≥
[];

1360 
NCURSES_EXPORT_VAR
(Ë
COLORS
;

1361 
NCURSES_EXPORT_VAR
(Ë
COLOR_PAIRS
;

1362 
NCURSES_EXPORT_VAR
(Ë
COLS
;

1363 
NCURSES_EXPORT_VAR
(Ë
ESCDELAY
;

1364 
NCURSES_EXPORT_VAR
(Ë
LINES
;

1365 
NCURSES_EXPORT_VAR
(Ë
TABSIZE
;

1381 
	#KEY_CODE_YES
 0400

	)

1382 
	#KEY_MIN
 0401

	)

1383 
	#KEY_BREAK
 0401

	)

1384 
	#KEY_SRESET
 0530

	)

1385 
	#KEY_RESET
 0531

	)

1389 
	#KEY_DOWN
 0402

	)

1390 
	#KEY_UP
 0403

	)

1391 
	#KEY_LEFT
 0404

	)

1392 
	#KEY_RIGHT
 0405

	)

1393 
	#KEY_HOME
 0406

	)

1394 
	#KEY_BACKSPACE
 0407

	)

1395 
	#KEY_F0
 0410

	)

1396 
	#KEY_F
(
n
Ë(
KEY_F0
+“)Ë

	)

1397 
	#KEY_DL
 0510

	)

1398 
	#KEY_IL
 0511

	)

1399 
	#KEY_DC
 0512

	)

1400 
	#KEY_IC
 0513

	)

1401 
	#KEY_EIC
 0514

	)

1402 
	#KEY_CLEAR
 0515

	)

1403 
	#KEY_EOS
 0516

	)

1404 
	#KEY_EOL
 0517

	)

1405 
	#KEY_SF
 0520

	)

1406 
	#KEY_SR
 0521

	)

1407 
	#KEY_NPAGE
 0522

	)

1408 
	#KEY_PPAGE
 0523

	)

1409 
	#KEY_STAB
 0524

	)

1410 
	#KEY_CTAB
 0525

	)

1411 
	#KEY_CATAB
 0526

	)

1412 
	#KEY_ENTER
 0527

	)

1413 
	#KEY_PRINT
 0532

	)

1414 
	#KEY_LL
 0533

	)

1415 
	#KEY_A1
 0534

	)

1416 
	#KEY_A3
 0535

	)

1417 
	#KEY_B2
 0536

	)

1418 
	#KEY_C1
 0537

	)

1419 
	#KEY_C3
 0540

	)

1420 
	#KEY_BTAB
 0541

	)

1421 
	#KEY_BEG
 0542

	)

1422 
	#KEY_CANCEL
 0543

	)

1423 
	#KEY_CLOSE
 0544

	)

1424 
	#KEY_COMMAND
 0545

	)

1425 
	#KEY_COPY
 0546

	)

1426 
	#KEY_CREATE
 0547

	)

1427 
	#KEY_END
 0550

	)

1428 
	#KEY_EXIT
 0551

	)

1429 
	#KEY_FIND
 0552

	)

1430 
	#KEY_HELP
 0553

	)

1431 
	#KEY_MARK
 0554

	)

1432 
	#KEY_MESSAGE
 0555

	)

1433 
	#KEY_MOVE
 0556

	)

1434 
	#KEY_NEXT
 0557

	)

1435 
	#KEY_OPEN
 0560

	)

1436 
	#KEY_OPTIONS
 0561

	)

1437 
	#KEY_PREVIOUS
 0562

	)

1438 
	#KEY_REDO
 0563

	)

1439 
	#KEY_REFERENCE
 0564

	)

1440 
	#KEY_REFRESH
 0565

	)

1441 
	#KEY_REPLACE
 0566

	)

1442 
	#KEY_RESTART
 0567

	)

1443 
	#KEY_RESUME
 0570

	)

1444 
	#KEY_SAVE
 0571

	)

1445 
	#KEY_SBEG
 0572

	)

1446 
	#KEY_SCANCEL
 0573

	)

1447 
	#KEY_SCOMMAND
 0574

	)

1448 
	#KEY_SCOPY
 0575

	)

1449 
	#KEY_SCREATE
 0576

	)

1450 
	#KEY_SDC
 0577

	)

1451 
	#KEY_SDL
 0600

	)

1452 
	#KEY_SELECT
 0601

	)

1453 
	#KEY_SEND
 0602

	)

1454 
	#KEY_SEOL
 0603

	)

1455 
	#KEY_SEXIT
 0604

	)

1456 
	#KEY_SFIND
 0605

	)

1457 
	#KEY_SHELP
 0606

	)

1458 
	#KEY_SHOME
 0607

	)

1459 
	#KEY_SIC
 0610

	)

1460 
	#KEY_SLEFT
 0611

	)

1461 
	#KEY_SMESSAGE
 0612

	)

1462 
	#KEY_SMOVE
 0613

	)

1463 
	#KEY_SNEXT
 0614

	)

1464 
	#KEY_SOPTIONS
 0615

	)

1465 
	#KEY_SPREVIOUS
 0616

	)

1466 
	#KEY_SPRINT
 0617

	)

1467 
	#KEY_SREDO
 0620

	)

1468 
	#KEY_SREPLACE
 0621

	)

1469 
	#KEY_SRIGHT
 0622

	)

1470 
	#KEY_SRSUME
 0623

	)

1471 
	#KEY_SSAVE
 0624

	)

1472 
	#KEY_SSUSPEND
 0625

	)

1473 
	#KEY_SUNDO
 0626

	)

1474 
	#KEY_SUSPEND
 0627

	)

1475 
	#KEY_UNDO
 0630

	)

1476 
	#KEY_MOUSE
 0631

	)

1477 
	#KEY_RESIZE
 0632

	)

1478 
	#KEY_EVENT
 0633

	)

1480 
	#KEY_MAX
 0777

	)

1487 
	#_XOPEN_CURSES
 1

	)

1489 #ifde‡
NCURSES_WIDECHAR


1491 
NCURSES_EXPORT_VAR
(
cch¨_t
 *Ë
_nc_wacs
;

1493 
	#NCURSES_WACS
(
c
Ë(&
_nc_wacs
[()c])

	)

1495 
	#WACS_BSSB
 
	`NCURSES_WACS
('l')

	)

1496 
	#WACS_SSBB
 
	`NCURSES_WACS
('m')

	)

1497 
	#WACS_BBSS
 
	`NCURSES_WACS
('k')

	)

1498 
	#WACS_SBBS
 
	`NCURSES_WACS
('j')

	)

1499 
	#WACS_SBSS
 
	`NCURSES_WACS
('u')

	)

1500 
	#WACS_SSSB
 
	`NCURSES_WACS
('t')

	)

1501 
	#WACS_SSBS
 
	`NCURSES_WACS
('v')

	)

1502 
	#WACS_BSSS
 
	`NCURSES_WACS
('w')

	)

1503 
	#WACS_BSBS
 
	`NCURSES_WACS
('q')

	)

1504 
	#WACS_SBSB
 
	`NCURSES_WACS
('x')

	)

1505 
	#WACS_SSSS
 
	`NCURSES_WACS
('n')

	)

1507 
	#WACS_ULCORNER
 
WACS_BSSB


	)

1508 
	#WACS_LLCORNER
 
WACS_SSBB


	)

1509 
	#WACS_URCORNER
 
WACS_BBSS


	)

1510 
	#WACS_LRCORNER
 
WACS_SBBS


	)

1511 
	#WACS_RTEE
 
WACS_SBSS


	)

1512 
	#WACS_LTEE
 
WACS_SSSB


	)

1513 
	#WACS_BTEE
 
WACS_SSBS


	)

1514 
	#WACS_TTEE
 
WACS_BSSS


	)

1515 
	#WACS_HLINE
 
WACS_BSBS


	)

1516 
	#WACS_VLINE
 
WACS_SBSB


	)

1517 
	#WACS_PLUS
 
WACS_SSSS


	)

1519 
	#WACS_S1
 
	`NCURSES_WACS
('o'Ë

	)

1520 
	#WACS_S9
 
	`NCURSES_WACS
('s'Ë

	)

1521 
	#WACS_DIAMOND
 
	`NCURSES_WACS
('`'Ë

	)

1522 
	#WACS_CKBOARD
 
	`NCURSES_WACS
('a'Ë

	)

1523 
	#WACS_DEGREE
 
	`NCURSES_WACS
('f'Ë

	)

1524 
	#WACS_PLMINUS
 
	`NCURSES_WACS
('g'Ë

	)

1525 
	#WACS_BULLET
 
	`NCURSES_WACS
('~'Ë

	)

1528 
	#WACS_LARROW
 
	`NCURSES_WACS
(','Ë

	)

1529 
	#WACS_RARROW
 
	`NCURSES_WACS
('+'Ë

	)

1530 
	#WACS_DARROW
 
	`NCURSES_WACS
('.'Ë

	)

1531 
	#WACS_UARROW
 
	`NCURSES_WACS
('-'Ë

	)

1532 
	#WACS_BOARD
 
	`NCURSES_WACS
('h'Ë

	)

1533 
	#WACS_LANTERN
 
	`NCURSES_WACS
('i'Ë

	)

1534 
	#WACS_BLOCK
 
	`NCURSES_WACS
('0'Ë

	)

1537 
	#WACS_S3
 
	`NCURSES_WACS
('p'Ë

	)

1538 
	#WACS_S7
 
	`NCURSES_WACS
('r'Ë

	)

1539 
	#WACS_LEQUAL
 
	`NCURSES_WACS
('y'Ë

	)

1540 
	#WACS_GEQUAL
 
	`NCURSES_WACS
('z'Ë

	)

1541 
	#WACS_PI
 
	`NCURSES_WACS
('{'Ë

	)

1542 
	#WACS_NEQUAL
 
	`NCURSES_WACS
('|'Ë

	)

1543 
	#WACS_STERLING
 
	`NCURSES_WACS
('}'Ë

	)

1546 
	#WACS_BDDB
 
	`NCURSES_WACS
('C')

	)

1547 
	#WACS_DDBB
 
	`NCURSES_WACS
('D')

	)

1548 
	#WACS_BBDD
 
	`NCURSES_WACS
('B')

	)

1549 
	#WACS_DBBD
 
	`NCURSES_WACS
('A')

	)

1550 
	#WACS_DBDD
 
	`NCURSES_WACS
('G')

	)

1551 
	#WACS_DDDB
 
	`NCURSES_WACS
('F')

	)

1552 
	#WACS_DDBD
 
	`NCURSES_WACS
('H')

	)

1553 
	#WACS_BDDD
 
	`NCURSES_WACS
('I')

	)

1554 
	#WACS_BDBD
 
	`NCURSES_WACS
('R')

	)

1555 
	#WACS_DBDB
 
	`NCURSES_WACS
('Y')

	)

1556 
	#WACS_DDDD
 
	`NCURSES_WACS
('E')

	)

1558 
	#WACS_D_ULCORNER
 
WACS_BDDB


	)

1559 
	#WACS_D_LLCORNER
 
WACS_DDBB


	)

1560 
	#WACS_D_URCORNER
 
WACS_BBDD


	)

1561 
	#WACS_D_LRCORNER
 
WACS_DBBD


	)

1562 
	#WACS_D_RTEE
 
WACS_DBDD


	)

1563 
	#WACS_D_LTEE
 
WACS_DDDB


	)

1564 
	#WACS_D_BTEE
 
WACS_DDBD


	)

1565 
	#WACS_D_TTEE
 
WACS_BDDD


	)

1566 
	#WACS_D_HLINE
 
WACS_BDBD


	)

1567 
	#WACS_D_VLINE
 
WACS_DBDB


	)

1568 
	#WACS_D_PLUS
 
WACS_DDDD


	)

1571 
	#WACS_BTTB
 
	`NCURSES_WACS
('L')

	)

1572 
	#WACS_TTBB
 
	`NCURSES_WACS
('M')

	)

1573 
	#WACS_BBTT
 
	`NCURSES_WACS
('K')

	)

1574 
	#WACS_TBBT
 
	`NCURSES_WACS
('J')

	)

1575 
	#WACS_TBTT
 
	`NCURSES_WACS
('U')

	)

1576 
	#WACS_TTTB
 
	`NCURSES_WACS
('T')

	)

1577 
	#WACS_TTBT
 
	`NCURSES_WACS
('V')

	)

1578 
	#WACS_BTTT
 
	`NCURSES_WACS
('W')

	)

1579 
	#WACS_BTBT
 
	`NCURSES_WACS
('Q')

	)

1580 
	#WACS_TBTB
 
	`NCURSES_WACS
('X')

	)

1581 
	#WACS_TTTT
 
	`NCURSES_WACS
('N')

	)

1583 
	#WACS_T_ULCORNER
 
WACS_BTTB


	)

1584 
	#WACS_T_LLCORNER
 
WACS_TTBB


	)

1585 
	#WACS_T_URCORNER
 
WACS_BBTT


	)

1586 
	#WACS_T_LRCORNER
 
WACS_TBBT


	)

1587 
	#WACS_T_RTEE
 
WACS_TBTT


	)

1588 
	#WACS_T_LTEE
 
WACS_TTTB


	)

1589 
	#WACS_T_BTEE
 
WACS_TTBT


	)

1590 
	#WACS_T_TTEE
 
WACS_BTTT


	)

1591 
	#WACS_T_HLINE
 
WACS_BTBT


	)

1592 
	#WACS_T_VLINE
 
WACS_TBTB


	)

1593 
	#WACS_T_PLUS
 
WACS_TTTT


	)

1604 
NCURSES_EXPORT
(Ë
add_wch
 (c⁄° 
cch¨_t
 *);

1605 
NCURSES_EXPORT
(Ë
add_wchn°r
 (c⁄° 
cch¨_t
 *, );

1606 
NCURSES_EXPORT
(Ë
add_wch°r
 (c⁄° 
cch¨_t
 *);

1607 
NCURSES_EXPORT
(Ë
addnw°r
 (c⁄° 
wch¨_t
 *, );

1608 
NCURSES_EXPORT
(Ë
addw°r
 (c⁄° 
wch¨_t
 *);

1609 
NCURSES_EXPORT
(Ë
bkg∫d
 (c⁄° 
cch¨_t
 *);

1610 
NCURSES_EXPORT
(Ë
bkg∫d£t
 (c⁄° 
cch¨_t
 *);

1611 
NCURSES_EXPORT
(Ë
b‹dî_£t
 (c⁄° 
cch¨_t
*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*);

1612 
NCURSES_EXPORT
(Ë
box_£t
 (
WINDOW
 *, c⁄° 
cch¨_t
 *, const cchar_t *);

1613 
NCURSES_EXPORT
(Ë
echo_wch¨
 (c⁄° 
cch¨_t
 *);

1614 
NCURSES_EXPORT
(Ë
îa£wch¨
 (
wch¨_t
*);

1615 
NCURSES_EXPORT
(Ë
gë_wch
 (
wöt_t
 *);

1616 
NCURSES_EXPORT
(Ë
gë_w°r
 (
wöt_t
 *);

1617 
NCURSES_EXPORT
(Ë
gëbkg∫d
 (
cch¨_t
 *);

1618 
NCURSES_EXPORT
(Ë
gëcch¨
 (c⁄° 
cch¨_t
 *, 
wch¨_t
*, 
©å_t
*, *, *);

1619 
NCURSES_EXPORT
(Ë
gën_w°r
 (
wöt_t
 *, );

1620 
NCURSES_EXPORT
(Ë
hlöe_£t
 (c⁄° 
cch¨_t
 *, );

1621 
NCURSES_EXPORT
(Ë
ö_wch
 (
cch¨_t
 *);

1622 
NCURSES_EXPORT
(Ë
ö_wchn°r
 (
cch¨_t
 *, );

1623 
NCURSES_EXPORT
(Ë
ö_wch°r
 (
cch¨_t
 *);

1624 
NCURSES_EXPORT
(Ë
önw°r
 (
wch¨_t
 *, );

1625 
NCURSES_EXPORT
(Ë
ös_nw°r
 (c⁄° 
wch¨_t
 *, );

1626 
NCURSES_EXPORT
(Ë
ös_wch
 (c⁄° 
cch¨_t
 *);

1627 
NCURSES_EXPORT
(Ë
ös_w°r
 (c⁄° 
wch¨_t
 *);

1628 
NCURSES_EXPORT
(Ë
öw°r
 (
wch¨_t
 *);

1629 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key_«me
 (
wch¨_t
);

1630 
NCURSES_EXPORT
(Ë
kûlwch¨
 (
wch¨_t
 *);

1631 
NCURSES_EXPORT
(Ë
mvadd_wch
 (, , c⁄° 
cch¨_t
 *);

1632 
NCURSES_EXPORT
(Ë
mvadd_wchn°r
 (, , c⁄° 
cch¨_t
 *, );

1633 
NCURSES_EXPORT
(Ë
mvadd_wch°r
 (, , c⁄° 
cch¨_t
 *);

1634 
NCURSES_EXPORT
(Ë
mvaddnw°r
 (, , c⁄° 
wch¨_t
 *, );

1635 
NCURSES_EXPORT
(Ë
mvaddw°r
 (, , c⁄° 
wch¨_t
 *);

1636 
NCURSES_EXPORT
(Ë
mvgë_wch
 (, , 
wöt_t
 *);

1637 
NCURSES_EXPORT
(Ë
mvgë_w°r
 (, , 
wöt_t
 *);

1638 
NCURSES_EXPORT
(Ë
mvgën_w°r
 (, , 
wöt_t
 *, );

1639 
NCURSES_EXPORT
(Ë
mvhlöe_£t
 (, , c⁄° 
cch¨_t
 *, );

1640 
NCURSES_EXPORT
(Ë
mvö_wch
 (, , 
cch¨_t
 *);

1641 
NCURSES_EXPORT
(Ë
mvö_wchn°r
 (, , 
cch¨_t
 *, );

1642 
NCURSES_EXPORT
(Ë
mvö_wch°r
 (, , 
cch¨_t
 *);

1643 
NCURSES_EXPORT
(Ë
mvönw°r
 (, , 
wch¨_t
 *, );

1644 
NCURSES_EXPORT
(Ë
mvös_nw°r
 (, , c⁄° 
wch¨_t
 *, );

1645 
NCURSES_EXPORT
(Ë
mvös_wch
 (, , c⁄° 
cch¨_t
 *);

1646 
NCURSES_EXPORT
(Ë
mvös_w°r
 (, , c⁄° 
wch¨_t
 *);

1647 
NCURSES_EXPORT
(Ë
mvöw°r
 (, , 
wch¨_t
 *);

1648 
NCURSES_EXPORT
(Ë
mvvlöe_£t
 (, , c⁄° 
cch¨_t
 *, );

1649 
NCURSES_EXPORT
(Ë
mvwadd_wch
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *);

1650 
NCURSES_EXPORT
(Ë
mvwadd_wchn°r
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *, );

1651 
NCURSES_EXPORT
(Ë
mvwadd_wch°r
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *);

1652 
NCURSES_EXPORT
(Ë
mvwaddnw°r
 (
WINDOW
 *, , , c⁄° 
wch¨_t
 *, );

1653 
NCURSES_EXPORT
(Ë
mvwaddw°r
 (
WINDOW
 *, , , c⁄° 
wch¨_t
 *);

1654 
NCURSES_EXPORT
(Ë
mvwgë_wch
 (
WINDOW
 *, , , 
wöt_t
 *);

1655 
NCURSES_EXPORT
(Ë
mvwgë_w°r
 (
WINDOW
 *, , , 
wöt_t
 *);

1656 
NCURSES_EXPORT
(Ë
mvwgën_w°r
 (
WINDOW
 *, , , 
wöt_t
 *, );

1657 
NCURSES_EXPORT
(Ë
mvwhlöe_£t
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *, );

1658 
NCURSES_EXPORT
(Ë
mvwö_wch
 (
WINDOW
 *, , , 
cch¨_t
 *);

1659 
NCURSES_EXPORT
(Ë
mvwö_wchn°r
 (
WINDOW
 *, ,, 
cch¨_t
 *,);

1660 
NCURSES_EXPORT
(Ë
mvwö_wch°r
 (
WINDOW
 *, , , 
cch¨_t
 *);

1661 
NCURSES_EXPORT
(Ë
mvwönw°r
 (
WINDOW
 *, , , 
wch¨_t
 *, );

1662 
NCURSES_EXPORT
(Ë
mvwös_nw°r
 (
WINDOW
 *, ,, c⁄° 
wch¨_t
 *,);

1663 
NCURSES_EXPORT
(Ë
mvwös_wch
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *);

1664 
NCURSES_EXPORT
(Ë
mvwös_w°r
 (
WINDOW
 *, , , c⁄° 
wch¨_t
 *);

1665 
NCURSES_EXPORT
(Ë
mvwöw°r
 (
WINDOW
 *, , , 
wch¨_t
 *);

1666 
NCURSES_EXPORT
(Ë
mvwvlöe_£t
 (
WINDOW
 *, ,, c⁄° 
cch¨_t
 *,);

1667 
NCURSES_EXPORT
(Ë
≥cho_wch¨
 (
WINDOW
 *, c⁄° 
cch¨_t
 *);

1668 
NCURSES_EXPORT
(Ë
£tcch¨
 (
cch¨_t
 *, c⁄° 
wch¨_t
 *, c⁄° 
©å_t
, , const *);

1669 
NCURSES_EXPORT
(Ë
¶k_w£t
 (, c⁄° 
wch¨_t
 *, );

1670 
NCURSES_EXPORT
(
©å_t
Ë
ãrm_©ås
 ();

1671 
NCURSES_EXPORT
(Ë
ungë_wch
 (c⁄° 
wch¨_t
);

1672 
NCURSES_EXPORT
(Ë
vid_©å
 (
©å_t
, , *);

1673 
NCURSES_EXPORT
(Ë
vid_puts
 (
©å_t
, , *, 
NCURSES_OUTC
);

1674 
NCURSES_EXPORT
(Ë
vlöe_£t
 (c⁄° 
cch¨_t
 *, );

1675 
NCURSES_EXPORT
(Ë
wadd_wch
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1676 
NCURSES_EXPORT
(Ë
wadd_wchn°r
 (
WINDOW
 *,c⁄° 
cch¨_t
 *,);

1677 
NCURSES_EXPORT
(Ë
wadd_wch°r
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1678 
NCURSES_EXPORT
(Ë
waddnw°r
 (
WINDOW
 *,c⁄° 
wch¨_t
 *,);

1679 
NCURSES_EXPORT
(Ë
waddw°r
 (
WINDOW
 *,c⁄° 
wch¨_t
 *);

1680 
NCURSES_EXPORT
(Ë
wbkg∫d
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1681 
NCURSES_EXPORT
(Ë
wbkg∫d£t
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1682 
NCURSES_EXPORT
(Ë
wb‹dî_£t
 (
WINDOW
 *,c⁄° 
cch¨_t
*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*);

1683 
NCURSES_EXPORT
(Ë
wecho_wch¨
 (
WINDOW
 *, c⁄° 
cch¨_t
 *);

1684 
NCURSES_EXPORT
(Ë
wgë_wch
 (
WINDOW
 *, 
wöt_t
 *);

1685 
NCURSES_EXPORT
(Ë
wgë_w°r
 (
WINDOW
 *, 
wöt_t
 *);

1686 
NCURSES_EXPORT
(Ë
wgëbkg∫d
 (
WINDOW
 *, 
cch¨_t
 *);

1687 
NCURSES_EXPORT
(Ë
wgën_w°r
 (
WINDOW
 *,
wöt_t
 *, );

1688 
NCURSES_EXPORT
(Ë
whlöe_£t
 (
WINDOW
 *, c⁄° 
cch¨_t
 *, );

1689 
NCURSES_EXPORT
(Ë
wö_wch
 (
WINDOW
 *, 
cch¨_t
 *);

1690 
NCURSES_EXPORT
(Ë
wö_wchn°r
 (
WINDOW
 *, 
cch¨_t
 *, );

1691 
NCURSES_EXPORT
(Ë
wö_wch°r
 (
WINDOW
 *, 
cch¨_t
 *);

1692 
NCURSES_EXPORT
(Ë
wönw°r
 (
WINDOW
 *, 
wch¨_t
 *, );

1693 
NCURSES_EXPORT
(Ë
wös_nw°r
 (
WINDOW
 *, c⁄° 
wch¨_t
 *, );

1694 
NCURSES_EXPORT
(Ë
wös_wch
 (
WINDOW
 *, c⁄° 
cch¨_t
 *);

1695 
NCURSES_EXPORT
(Ë
wös_w°r
 (
WINDOW
 *, c⁄° 
wch¨_t
 *);

1696 
NCURSES_EXPORT
(Ë
wöw°r
 (
WINDOW
 *, 
wch¨_t
 *);

1697 
NCURSES_EXPORT
(
wch¨_t
*Ë
wun˘æ
 (
cch¨_t
 *);

1698 
NCURSES_EXPORT
(Ë
wvlöe_£t
 (
WINDOW
 *, c⁄° 
cch¨_t
 *, );

1700 #i‡
NCURSES_SP_FUNCS


1701 
NCURSES_EXPORT
(
©å_t
Ë
NCURSES_SP_NAME
(
ãrm_©ås
Ë(
SCREEN
*);

1702 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungë_wch
Ë(
SCREEN
*, c⁄° 
wch¨_t
);

1703 
NCURSES_EXPORT
(
wch¨_t
*Ë
NCURSES_SP_NAME
(
wun˘æ
Ë(
SCREEN
*, 
cch¨_t
 *);

1704 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vid_©å
Ë(
SCREEN
*, 
©å_t
, , *);

1705 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vid_puts
Ë(
SCREEN
*, 
©å_t
, , *, 
NCURSES_SP_OUTC
);

1708 #i‚de‡
NCURSES_NOMACROS


1713 
	#add_wch
(
c
Ë
	`wadd_wch
(
°ds¸
,c)

	)

1714 
	#add_wchn°r
(
°r
,
n
Ë
	`wadd_wchn°r
(
°ds¸
,°r,n)

	)

1715 
	#add_wch°r
(
°r
Ë
	`wadd_wch°r
(
°ds¸
,°r)

	)

1716 
	#addnw°r
(
w°r
,
n
Ë
	`waddnw°r
(
°ds¸
,w°r,n)

	)

1717 
	#addw°r
(
w°r
Ë
	`waddw°r
(
°ds¸
,w°r)

	)

1718 
	#bkg∫d
(
c
Ë
	`wbkg∫d
(
°ds¸
,c)

	)

1719 
	#bkg∫d£t
(
c
Ë
	`wbkg∫d£t
(
°ds¸
,c)

	)

1720 
	#b‹dî_£t
(
l
,
r
,
t
,
b
,
é
,
å
,
bl
,
br
Ë
	`wb‹dî_£t
(
°ds¸
,l,r,t,b,é,å,bl,br)

	)

1721 
	#box_£t
(
w
,
v
,
h
Ë
	`wb‹dî_£t
(w,v,v,h,h,0,0,0,0)

	)

1722 
	#echo_wch¨
(
c
Ë
	`wecho_wch¨
(
°ds¸
,c)

	)

1723 
	#gë_wch
(
c
Ë
	`wgë_wch
(
°ds¸
,c)

	)

1724 
	#gë_w°r
(
t
Ë
	`wgë_w°r
(
°ds¸
,t)

	)

1725 
	#gëbkg∫d
(
wch
Ë
	`wgëbkg∫d
(
°ds¸
,wch)

	)

1726 
	#gën_w°r
(
t
,
n
Ë
	`wgën_w°r
(
°ds¸
,t,n)

	)

1727 
	#hlöe_£t
(
c
,
n
Ë
	`whlöe_£t
(
°ds¸
,c,n)

	)

1728 
	#ö_wch
(
c
Ë
	`wö_wch
(
°ds¸
,c)

	)

1729 
	#ö_wchn°r
(
c
,
n
Ë
	`wö_wchn°r
(
°ds¸
,c,n)

	)

1730 
	#ö_wch°r
(
c
Ë
	`wö_wch°r
(
°ds¸
,c)

	)

1731 
	#önw°r
(
c
,
n
Ë
	`wönw°r
(
°ds¸
,c,n)

	)

1732 
	#ös_nw°r
(
t
,
n
Ë
	`wös_nw°r
(
°ds¸
,t,n)

	)

1733 
	#ös_wch
(
c
Ë
	`wös_wch
(
°ds¸
,c)

	)

1734 
	#ös_w°r
(
t
Ë
	`wös_w°r
(
°ds¸
,t)

	)

1735 
	#öw°r
(
c
Ë
	`wöw°r
(
°ds¸
,c)

	)

1736 
	#vlöe_£t
(
c
,
n
Ë
	`wvlöe_£t
(
°ds¸
,c,n)

	)

1737 
	#wadd_wch°r
(
wö
,
°r
Ë
	`wadd_wchn°r
(wö,°r,-1)

	)

1738 
	#waddw°r
(
wö
,
w°r
Ë
	`waddnw°r
(wö,w°r,-1)

	)

1739 
	#wgë_w°r
(
w
,
t
Ë
	`wgën_w°r
(w,t,-1)

	)

1740 
	#wö_wch°r
(
w
,
c
Ë
	`wö_wchn°r
(w,c,-1)

	)

1741 
	#wös_w°r
(
w
,
t
Ë
	`wös_nw°r
(w,t,-1)

	)

1743 #i‡!
NCURSES_OPAQUE


1744 
	#wgëbkg∫d
(
wö
,
wch
Ë(*wch = wö->
_bkg∫d
, 
OK
)

	)

1747 
	#mvadd_wch
(
y
,
x
,
c
Ë
	`mvwadd_wch
(
°ds¸
,y,x,c)

	)

1748 
	#mvadd_wchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwadd_wchn°r
(
°ds¸
,y,x,s,n)

	)

1749 
	#mvadd_wch°r
(
y
,
x
,
s
Ë
	`mvwadd_wch°r
(
°ds¸
,y,x,s)

	)

1750 
	#mvaddnw°r
(
y
,
x
,
w°r
,
n
Ë
	`mvwaddnw°r
(
°ds¸
,y,x,w°r,n)

	)

1751 
	#mvaddw°r
(
y
,
x
,
w°r
Ë
	`mvwaddw°r
(
°ds¸
,y,x,w°r)

	)

1752 
	#mvgë_wch
(
y
,
x
,
c
Ë
	`mvwgë_wch
(
°ds¸
,y,x,c)

	)

1753 
	#mvgë_w°r
(
y
,
x
,
t
Ë
	`mvwgë_w°r
(
°ds¸
,y,x,t)

	)

1754 
	#mvgën_w°r
(
y
,
x
,
t
,
n
Ë
	`mvwgën_w°r
(
°ds¸
,y,x,t,n)

	)

1755 
	#mvhlöe_£t
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe_£t
(
°ds¸
,y,x,c,n)

	)

1756 
	#mvö_wch
(
y
,
x
,
c
Ë
	`mvwö_wch
(
°ds¸
,y,x,c)

	)

1757 
	#mvö_wchn°r
(
y
,
x
,
c
,
n
Ë
	`mvwö_wchn°r
(
°ds¸
,y,x,c,n)

	)

1758 
	#mvö_wch°r
(
y
,
x
,
c
Ë
	`mvwö_wch°r
(
°ds¸
,y,x,c)

	)

1759 
	#mvönw°r
(
y
,
x
,
c
,
n
Ë
	`mvwönw°r
(
°ds¸
,y,x,c,n)

	)

1760 
	#mvös_nw°r
(
y
,
x
,
t
,
n
Ë
	`mvwös_nw°r
(
°ds¸
,y,x,t,n)

	)

1761 
	#mvös_wch
(
y
,
x
,
c
Ë
	`mvwös_wch
(
°ds¸
,y,x,c)

	)

1762 
	#mvös_w°r
(
y
,
x
,
t
Ë
	`mvwös_w°r
(
°ds¸
,y,x,t)

	)

1763 
	#mvöw°r
(
y
,
x
,
c
Ë
	`mvwöw°r
(
°ds¸
,y,x,c)

	)

1764 
	#mvvlöe_£t
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe_£t
(
°ds¸
,y,x,c,n)

	)

1766 
	#mvwadd_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wadd_wch
(wö,c))

	)

1767 
	#mvwadd_wchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wadd_wchn°r
(wö,s,n))

	)

1768 
	#mvwadd_wch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wadd_wch°r
(wö,s))

	)

1769 
	#mvwaddnw°r
(
wö
,
y
,
x
,
w°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddnw°r
(wö,w°r,n))

	)

1770 
	#mvwaddw°r
(
wö
,
y
,
x
,
w°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddw°r
(wö,w°r))

	)

1771 
	#mvwgë_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë_wch
(wö,c))

	)

1772 
	#mvwgë_w°r
(
wö
,
y
,
x
,
t
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë_w°r
(wö,t))

	)

1773 
	#mvwgën_w°r
(
wö
,
y
,
x
,
t
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgën_w°r
(wö,t,n))

	)

1774 
	#mvwhlöe_£t
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`whlöe_£t
(wö,c,n))

	)

1775 
	#mvwö_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö_wch
(wö,c))

	)

1776 
	#mvwö_wchn°r
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö_wchn°r
(wö,c,n))

	)

1777 
	#mvwö_wch°r
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö_wch°r
(wö,c))

	)

1778 
	#mvwönw°r
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wönw°r
(wö,c,n))

	)

1779 
	#mvwös_nw°r
(
wö
,
y
,
x
,
t
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös_nw°r
(wö,t,n))

	)

1780 
	#mvwös_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös_wch
(wö,c))

	)

1781 
	#mvwös_w°r
(
wö
,
y
,
x
,
t
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös_w°r
(wö,t))

	)

1782 
	#mvwöw°r
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöw°r
(wö,c))

	)

1783 
	#mvwvlöe_£t
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wvlöe_£t
(wö,c,n))

	)

1787 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

1788 
NCURSES_EXPORT
(c⁄° *Ë
_nc_viswbuf
(c⁄° 
wch¨_t
 *);

1789 
NCURSES_EXPORT
(c⁄° *Ë
_nc_viswibuf
(c⁄° 
wöt_t
 *);

1802 #i‡
NCURSES_MOUSE_VERSION
 > 1

1803 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 5))

	)

1805 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 6))

	)

1808 
	#NCURSES_BUTTON_RELEASED
 001L

	)

1809 
	#NCURSES_BUTTON_PRESSED
 002L

	)

1810 
	#NCURSES_BUTTON_CLICKED
 004L

	)

1811 
	#NCURSES_DOUBLE_CLICKED
 010L

	)

1812 
	#NCURSES_TRIPLE_CLICKED
 020L

	)

1813 
	#NCURSES_RESERVED_EVENT
 040L

	)

1816 
	#BUTTON1_RELEASED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_RELEASED
)

	)

1817 
	#BUTTON1_PRESSED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_PRESSED
)

	)

1818 
	#BUTTON1_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_CLICKED
)

	)

1819 
	#BUTTON1_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_DOUBLE_CLICKED
)

	)

1820 
	#BUTTON1_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_TRIPLE_CLICKED
)

	)

1822 
	#BUTTON2_RELEASED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_RELEASED
)

	)

1823 
	#BUTTON2_PRESSED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_PRESSED
)

	)

1824 
	#BUTTON2_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_CLICKED
)

	)

1825 
	#BUTTON2_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_DOUBLE_CLICKED
)

	)

1826 
	#BUTTON2_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_TRIPLE_CLICKED
)

	)

1828 
	#BUTTON3_RELEASED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_RELEASED
)

	)

1829 
	#BUTTON3_PRESSED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_PRESSED
)

	)

1830 
	#BUTTON3_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_CLICKED
)

	)

1831 
	#BUTTON3_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_DOUBLE_CLICKED
)

	)

1832 
	#BUTTON3_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_TRIPLE_CLICKED
)

	)

1834 
	#BUTTON4_RELEASED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_RELEASED
)

	)

1835 
	#BUTTON4_PRESSED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_PRESSED
)

	)

1836 
	#BUTTON4_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_CLICKED
)

	)

1837 
	#BUTTON4_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_DOUBLE_CLICKED
)

	)

1838 
	#BUTTON4_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_TRIPLE_CLICKED
)

	)

1844 #i‡
NCURSES_MOUSE_VERSION
 > 1

1846 
	#BUTTON5_RELEASED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_RELEASED
)

	)

1847 
	#BUTTON5_PRESSED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_PRESSED
)

	)

1848 
	#BUTTON5_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_CLICKED
)

	)

1849 
	#BUTTON5_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_DOUBLE_CLICKED
)

	)

1850 
	#BUTTON5_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_TRIPLE_CLICKED
)

	)

1852 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(6, 0001L)

	)

1853 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(6, 0002L)

	)

1854 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(6, 0004L)

	)

1855 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(6, 0010L)

	)

1859 
	#BUTTON1_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_RESERVED_EVENT
)

	)

1860 
	#BUTTON2_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_RESERVED_EVENT
)

	)

1861 
	#BUTTON3_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_RESERVED_EVENT
)

	)

1862 
	#BUTTON4_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_RESERVED_EVENT
)

	)

1864 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(5, 0001L)

	)

1865 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(5, 0002L)

	)

1866 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(5, 0004L)

	)

1867 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(5, 0010L)

	)

1871 
	#ALL_MOUSE_EVENTS
 (
REPORT_MOUSE_POSITION
 - 1)

	)

1874 
	#BUTTON_RELEASE
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 001))

	)

1875 
	#BUTTON_PRESS
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 002))

	)

1876 
	#BUTTON_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 004))

	)

1877 
	#BUTTON_DOUBLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 010))

	)

1878 
	#BUTTON_TRIPLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 020))

	)

1879 
	#BUTTON_RESERVED_EVENT
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 040))

	)

1883 
	gid
;

1884 
	gx
, 
	gy
, 
	gz
;

1885 
mmask_t
 
	gb°©e
;

1887 
	tMEVENT
;

1889 
NCURSES_EXPORT
(
boﬁ
Ë
has_mou£
();

1890 
NCURSES_EXPORT
(Ë
gëmou£
 (
MEVENT
 *);

1891 
NCURSES_EXPORT
(Ë
ungëmou£
 (
MEVENT
 *);

1892 
NCURSES_EXPORT
(
mmask_t
Ë
mou£mask
 (mmask_t, mmask_t *);

1893 
NCURSES_EXPORT
(
boﬁ
Ë
wí˛o£
 (c⁄° 
WINDOW
 *, , );

1894 
NCURSES_EXPORT
(Ë
mou£öãrvÆ
 ();

1895 
NCURSES_EXPORT
(
boﬁ
Ë
wmou£_åafo
 (c⁄° 
WINDOW
*, *, *, bool);

1896 
NCURSES_EXPORT
(
boﬁ
Ë
mou£_åafo
 (*, *, bool);

1898 #i‡
NCURSES_SP_FUNCS


1899 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_mou£
Ë(
SCREEN
*);

1900 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
gëmou£
Ë(
SCREEN
*, 
MEVENT
 *);

1901 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungëmou£
Ë(
SCREEN
*,
MEVENT
 *);

1902 
NCURSES_EXPORT
(
mmask_t
Ë
NCURSES_SP_NAME
(
mou£mask
Ë(
SCREEN
*, mmask_t, mmask_t *);

1903 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
mou£öãrvÆ
Ë(
SCREEN
*, );

1906 
	#mou£_åafo
(
y
,
x
,
to_s¸ìn
Ë
	`wmou£_åafo
(
°ds¸
,y,x,to_s¸ìn)

	)

1910 
NCURSES_EXPORT
(Ë
m˝röt
 (*, );

1911 
NCURSES_EXPORT
(Ë
has_key
 ();

1913 #i‡
NCURSES_SP_FUNCS


1914 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
has_key
Ë(
SCREEN
*, );

1915 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
m˝röt
Ë(
SCREEN
*, *, );

1920 
NCURSES_EXPORT
(Ë
_åa˚f
 (c⁄° *, ...Ë
GCC_PRINTFLIKE
(1,2);

1921 
NCURSES_EXPORT
(Ë
_åa˚dump
 (c⁄° *, 
WINDOW
 *);

1922 
NCURSES_EXPORT
(*Ë
_åa˚©å
 (
©å_t
);

1923 
NCURSES_EXPORT
(*Ë
_åa˚©å2
 (, 
chty≥
);

1924 
NCURSES_EXPORT
(*Ë
_nc_åa˚bôs
 ();

1925 
NCURSES_EXPORT
(*Ë
_åa˚ch¨
 ();

1926 
NCURSES_EXPORT
(*Ë
_åa˚chty≥
 (
chty≥
);

1927 
NCURSES_EXPORT
(*Ë
_åa˚chty≥2
 (, 
chty≥
);

1928 #ifde‡
NCURSES_WIDECHAR


1929 
	#_åa˚ch_t
 
_åa˚cch¨_t


	)

1930 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t
 (c⁄° 
cch¨_t
 *);

1931 
	#_åa˚ch_t2
 
_åa˚cch¨_t2


	)

1932 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t2
 (, c⁄° 
cch¨_t
 *);

1934 
	#_åa˚ch_t
 
_åa˚chty≥


	)

1935 
	#_åa˚ch_t2
 
_åa˚chty≥2


	)

1937 
NCURSES_EXPORT
(*Ë
_åa˚mou£
 (c⁄° 
MEVENT
 *);

1938 
NCURSES_EXPORT
(Ë
åa˚
 (const );

1941 
	#TRACE_DISABLE
 0x0000

	)

1942 
	#TRACE_TIMES
 0x0001

	)

1943 
	#TRACE_TPUTS
 0x0002

	)

1944 
	#TRACE_UPDATE
 0x0004

	)

1945 
	#TRACE_MOVE
 0x0008

	)

1946 
	#TRACE_CHARPUT
 0x0010

	)

1947 
	#TRACE_ORDINARY
 0x001F

	)

1948 
	#TRACE_CALLS
 0x0020

	)

1949 
	#TRACE_VIRTPUT
 0x0040

	)

1950 
	#TRACE_IEVENT
 0x0080

	)

1951 
	#TRACE_BITS
 0x0100

	)

1952 
	#TRACE_ICALLS
 0x0200

	)

1953 
	#TRACE_CCALLS
 0x0400

	)

1954 
	#TRACE_DATABASE
 0x0800

	)

1955 
	#TRACE_ATTRS
 0x1000

	)

1957 
	#TRACE_SHIFT
 13

	)

1958 
	#TRACE_MAXIMUM
 ((1 << 
TRACE_SHIFT
Ë- 1Ë

	)

1960 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

1961 
NCURSES_EXPORT_VAR
(Ë
_nc_›timize_íabÀ
;

1962 
NCURSES_EXPORT
(c⁄° *Ë
_nc_visbuf
 (const *);

1963 
	#OPTIMIZE_MVCUR
 0x01

	)

1964 
	#OPTIMIZE_HASHMAP
 0x02

	)

1965 
	#OPTIMIZE_SCROLL
 0x04

	)

1966 
	#OPTIMIZE_ALL
 0xf‡

	)

1969 
	~<ncur£sw/un˘æ.h
>

1971 #ifde‡
__˝lu•lus


1973 #i‚de‡
NCURSES_NOMACROS


1976 #unde‡
box


1977 #unde‡
˛ór


1978 #unde‡
îa£


1979 #unde‡
move


1980 #unde‡
ª‰esh


	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CRYPT
 1

	)

20 
	#__OPTION_EGLIBC_CRYPT_UFC
 1

	)

21 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

22 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

23 
	#__OPTION_EGLIBC_ENVZ
 1

	)

24 
	#__OPTION_EGLIBC_FCVT
 1

	)

25 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

26 
	#__OPTION_EGLIBC_FSTAB
 1

	)

27 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

28 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

29 
	#__OPTION_EGLIBC_IDN
 1

	)

30 
	#__OPTION_EGLIBC_INET
 1

	)

31 
	#__OPTION_EGLIBC_INET_ANL
 1

	)

32 
	#__OPTION_EGLIBC_LIBM
 1

	)

33 
	#__OPTION_EGLIBC_LIBM_BIG
 1

	)

34 
	#__OPTION_EGLIBC_LOCALES
 1

	)

35 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

36 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

37 
	#__OPTION_EGLIBC_NIS
 1

	)

38 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

39 
	#__OPTION_EGLIBC_RCMD
 1

	)

40 
	#__OPTION_EGLIBC_RTLD_DEBUG
 1

	)

41 
	#__OPTION_EGLIBC_SPAWN
 1

	)

42 
	#__OPTION_EGLIBC_STREAMS
 1

	)

43 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

44 
	#__OPTION_EGLIBC_UTMP
 1

	)

45 
	#__OPTION_EGLIBC_UTMPX
 1

	)

46 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

47 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

48 
	#__OPTION_POSIX_REGEXP
 1

	)

49 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

50 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROW
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROW
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROW
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROW
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROW
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROW
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROW
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROW
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/tls.h

20 #i‚de‡
_TLS_H


21 
	#_TLS_H


	)

23 
	~<t˛.h
>

25 #ifde‡
TCL_STORAGE_CLASS


26 #unde‡
TCL_STORAGE_CLASS


28 #ifde‡
BUILD_és


29 
	#TCL_STORAGE_CLASS
 
DLLEXPORT


	)

31 
	#TCL_STORAGE_CLASS
 
DLLIMPORT


	)

38 
EXTERN
 
Tls_Inô
 
_ANSI_ARGS_
 ((
T˛_I¡îp
 *));

39 
EXTERN
 
Tls_Sa„Inô
 
_ANSI_ARGS_
 ((
T˛_I¡îp
 *));

	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

35 
	#SCHED_IDLE
 5

	)

37 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

40 #ifde‡
__USE_MISC


42 
	#CSIGNAL
 0x000000f‡

	)

43 
	#CLONE_VM
 0x00000100

	)

44 
	#CLONE_FS
 0x00000200

	)

45 
	#CLONE_FILES
 0x00000400

	)

46 
	#CLONE_SIGHAND
 0x00000800

	)

47 
	#CLONE_PTRACE
 0x00002000

	)

48 
	#CLONE_VFORK
 0x00004000

	)

50 
	#CLONE_PARENT
 0x00008000

	)

52 
	#CLONE_THREAD
 0x00010000

	)

53 
	#CLONE_NEWNS
 0x00020000

	)

54 
	#CLONE_SYSVSEM
 0x00040000

	)

55 
	#CLONE_SETTLS
 0x00080000

	)

56 
	#CLONE_PARENT_SETTID
 0x00100000

	)

58 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

60 
	#CLONE_DETACHED
 0x00400000

	)

61 
	#CLONE_UNTRACED
 0x00800000

	)

63 
	#CLONE_CHILD_SETTID
 0x01000000

	)

65 
	#CLONE_NEWUTS
 0x04000000

	)

66 
	#CLONE_NEWIPC
 0x08000000

	)

67 
	#CLONE_NEWUSER
 0x10000000

	)

68 
	#CLONE_NEWPID
 0x20000000

	)

69 
	#CLONE_NEWNET
 0x40000000

	)

70 
	#CLONE_IO
 0x80000000

	)

74 
	ssched_∑øm


76 
	m__sched_¥i‹ôy
;

79 
	g__BEGIN_DECLS


81 #ifde‡
__USE_MISC


83 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

84 
__Êags
, *
__¨g
, ...Ë
__THROW
;

87 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

90 
	$sched_gë˝u
 (Ë
__THROW
;

93 
__END_DECLS


97 #i‡!
deföed
 
__deföed_sched∑øm
 \

98 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

99 
	#__deföed_sched∑øm
 1

	)

101 
	s__sched_∑øm


103 
__sched_¥i‹ôy
;

105 #unde‡
__√ed_sched∑øm


109 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


110 
	#__˝u_£t_t_deföed


	)

112 
	#__CPU_SETSIZE
 1024

	)

113 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

116 
	t__˝u_mask
;

119 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

120 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

125 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

126 } 
	t˝u_£t_t
;

129 #i‡
	`__GNUC_PREREQ
 (2, 91)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

131 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

133 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

135 
size_t
 
__i
; \

136 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

137 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

138 
__i
 = 0; __ò< 
__imax
; ++__i) \

139 
__bôs
[
__i
] = 0; \

140 
	}
} 0)

	)

142 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

143 (
__exãnsi⁄__
 \

144 ({ 
size_t
 
__˝u
 = (
˝u
); \

145 
__˝u
 < 8 * (
£tsize
) \

146 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

147 |
	`__CPUMASK
 (
__˝u
)) \

148 : 0; }))

	)

149 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

150 (
__exãnsi⁄__
 \

151 ({ 
size_t
 
__˝u
 = (
˝u
); \

152 
__˝u
 < 8 * (
£tsize
) \

153 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

154 &~
	`__CPUMASK
 (
__˝u
)) \

155 : 0; }))

	)

156 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

157 (
__exãnsi⁄__
 \

158 ({ 
size_t
 
__˝u
 = (
˝u
); \

159 
__˝u
 < 8 * (
£tsize
) \

160 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

161 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

162 : 0; }))

	)

164 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

165 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

167 #i‡
__GNUC_PREREQ
 (2, 91)

168 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

169 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

171 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

172 (
__exãnsi⁄__
 \

173 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

174 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

175 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

176 
size_t
 
__i
; \

177 
__i
 = 0; __ò< 
__imax
; ++__i) \

178 i‡(
__bôs
[
__i
] != __bits[__i]) \

180 
__i
 =
__imax
; }))

	)

183 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

184 (
__exãnsi⁄__
 \

185 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

186 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

187 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

188 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

189 
size_t
 
__i
; \

190 
__i
 = 0; __ò< 
__imax
; ++__i) \

191 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

192 
__de°
; }))

	)

194 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

195 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

196 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

197 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

199 
__BEGIN_DECLS


201 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

202 
__THROW
;

203 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

204 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

206 
__END_DECLS


	@
1
.
1
/usr/include
157
3879
cdk_test.h
chorizo.c
ejemplo_char_struct.c
entries.c
estructura_array.c
formulario_color.c
formulario_ventanta.c
formularios.c
hacedor.c
main.c
menu_dialogado.c
null.c
prueba_datos.c
prueba_matrix.c
prueba_prov_form.c
pruebas.c
pruebas.h
swapear_ventanas.c
/usr/include/cdk/cdk.h
/usr/include/curses.h
/usr/include/form.h
/usr/include/sqlite3.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
controlador/callbacks.h
controlador/config.h
controlador/formularios.h
controlador/principal.h
datos/clientes.h
datos/datos.h
datos/tipos.h
vista/clientes/clientes.h
vista/info.h
vista/proveedores/proveedores.h
vista/scroll.h
/usr/include/alloca.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/types.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/cdk/alphalist.h
/usr/include/cdk/binding.h
/usr/include/cdk/button.h
/usr/include/cdk/buttonbox.h
/usr/include/cdk/calendar.h
/usr/include/cdk/cdk_config.h
/usr/include/cdk/cdk_objs.h
/usr/include/cdk/cdk_params.h
/usr/include/cdk/cdk_util.h
/usr/include/cdk/cdk_version.h
/usr/include/cdk/cdkscreen.h
/usr/include/cdk/curdefs.h
/usr/include/cdk/dialog.h
/usr/include/cdk/draw.h
/usr/include/cdk/dscale.h
/usr/include/cdk/entry.h
/usr/include/cdk/fscale.h
/usr/include/cdk/fselect.h
/usr/include/cdk/fslider.h
/usr/include/cdk/graph.h
/usr/include/cdk/histogram.h
/usr/include/cdk/itemlist.h
/usr/include/cdk/label.h
/usr/include/cdk/marquee.h
/usr/include/cdk/matrix.h
/usr/include/cdk/mentry.h
/usr/include/cdk/menu.h
/usr/include/cdk/radio.h
/usr/include/cdk/scale.h
/usr/include/cdk/scroll.h
/usr/include/cdk/selection.h
/usr/include/cdk/slider.h
/usr/include/cdk/swindow.h
/usr/include/cdk/template.h
/usr/include/cdk/traverse.h
/usr/include/cdk/uscale.h
/usr/include/cdk/uslider.h
/usr/include/cdk/viewer.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/eti.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/grp.h
/usr/include/libio.h
/usr/include/limits.h
/usr/include/ncurses.h
/usr/include/ncurses_dll.h
/usr/include/ncursesw/ncurses.h
/usr/include/pwd.h
/usr/include/sys/stat.h
/usr/include/sys/types.h
/usr/include/time.h
/usr/include/unctrl.h
/usr/include/unistd.h
/usr/include/wchar.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/predefs.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/time.h
/usr/include/bits/typesizes.h
/usr/include/bits/unistd.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/gnu/stubs.h
/usr/include/ncursesw/ncurses_dll.h
/usr/include/ncursesw/unctrl.h
/usr/include/sys/cdefs.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/wctype.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libc-lock.h
/usr/include/bits/local_lim.h
/usr/include/bits/select.h
/usr/include/bits/sigset.h
/usr/include/gconv.h
/usr/include/gnu/stubs-64.h
/usr/include/linux/errno.h
/usr/include/ncursesw/curses.h
/usr/include/asm/errno.h
/usr/include/gnu/option-groups.h
/usr/include/linux/limits.h
/usr/include/pthread.h
/usr/include/tls.h
/usr/include/asm-generic/errno.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/asm-generic/errno-base.h
/usr/include/bits/sched.h
